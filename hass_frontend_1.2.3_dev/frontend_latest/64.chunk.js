(self["webpackJsonp"] = self["webpackJsonp"] || []).push([[64],{

/***/ "./src/cast/cast_framework.ts":
/*!************************************!*\
  !*** ./src/cast/cast_framework.ts ***!
  \************************************/
/*! exports provided: castApiAvailable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"castApiAvailable\", function() { return castApiAvailable; });\n/* harmony import */ var _common_dom_load_resource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/dom/load_resource */ \"./src/common/dom/load_resource.ts\");\n\nlet loadedPromise;\nconst castApiAvailable = () => {\n  if (loadedPromise) {\n    return loadedPromise;\n  }\n\n  loadedPromise = new Promise(resolve => {\n    window.__onGCastApiAvailable = resolve;\n  }); // Any element with a specific ID will get set as a JS variable on window\n  // This will override the cast SDK if the iconset is loaded afterwards.\n  // Conflicting IDs will no longer mess with window, so we'll just append one.\n\n  const el = document.createElement(\"div\");\n  el.id = \"cast\";\n  document.body.append(el);\n  Object(_common_dom_load_resource__WEBPACK_IMPORTED_MODULE_0__[\"loadJS\"])(\"https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1\");\n  return loadedPromise;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2FzdC9jYXN0X2ZyYW1ld29yay50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jYXN0L2Nhc3RfZnJhbWV3b3JrLnRzPzM5MzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9hZEpTIH0gZnJvbSBcIi4uL2NvbW1vbi9kb20vbG9hZF9yZXNvdXJjZVwiO1xuXG5sZXQgbG9hZGVkUHJvbWlzZTogUHJvbWlzZTxib29sZWFuPiB8IHVuZGVmaW5lZDtcblxuZXhwb3J0IGNvbnN0IGNhc3RBcGlBdmFpbGFibGUgPSAoKSA9PiB7XG4gIGlmIChsb2FkZWRQcm9taXNlKSB7XG4gICAgcmV0dXJuIGxvYWRlZFByb21pc2U7XG4gIH1cblxuICBsb2FkZWRQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAod2luZG93IGFzIGFueSkuX19vbkdDYXN0QXBpQXZhaWxhYmxlID0gcmVzb2x2ZTtcbiAgfSk7XG4gIC8vIEFueSBlbGVtZW50IHdpdGggYSBzcGVjaWZpYyBJRCB3aWxsIGdldCBzZXQgYXMgYSBKUyB2YXJpYWJsZSBvbiB3aW5kb3dcbiAgLy8gVGhpcyB3aWxsIG92ZXJyaWRlIHRoZSBjYXN0IFNESyBpZiB0aGUgaWNvbnNldCBpcyBsb2FkZWQgYWZ0ZXJ3YXJkcy5cbiAgLy8gQ29uZmxpY3RpbmcgSURzIHdpbGwgbm8gbG9uZ2VyIG1lc3Mgd2l0aCB3aW5kb3csIHNvIHdlJ2xsIGp1c3QgYXBwZW5kIG9uZS5cbiAgY29uc3QgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBlbC5pZCA9IFwiY2FzdFwiO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZChlbCk7XG5cbiAgbG9hZEpTKFxuICAgIFwiaHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vY3YvanMvc2VuZGVyL3YxL2Nhc3Rfc2VuZGVyLmpzP2xvYWRDYXN0RnJhbWV3b3JrPTFcIlxuICApO1xuICByZXR1cm4gbG9hZGVkUHJvbWlzZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/cast/cast_framework.ts\n");

/***/ }),

/***/ "./src/cast/cast_manager.ts":
/*!**********************************!*\
  !*** ./src/cast/cast_manager.ts ***!
  \**********************************/
/*! exports provided: CastManager, getCastManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CastManager\", function() { return CastManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCastManager\", function() { return getCastManager; });\n/* harmony import */ var _cast_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cast_framework */ \"./src/cast/cast_framework.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./const */ \"./src/cast/const.ts\");\n/* harmony import */ var _dev_const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dev_const */ \"./src/cast/dev_const.ts\");\n/* harmony import */ var _receiver_messages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./receiver_messages */ \"./src/cast/receiver_messages.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-undef, no-console */\n\n\n\n\nlet managerProm;\nclass CastManager {\n  // If the cast connection is connected to our Hass.\n  constructor(auth) {\n    _defineProperty(this, \"auth\", void 0);\n\n    _defineProperty(this, \"status\", void 0);\n\n    _defineProperty(this, \"_eventListeners\", {});\n\n    this.auth = auth;\n    const context = this.castContext;\n    context.setOptions({\n      receiverApplicationId: _const__WEBPACK_IMPORTED_MODULE_1__[\"CAST_APP_ID\"],\n      // @ts-ignore\n      autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED\n    });\n    context.addEventListener( // @ts-ignore\n    cast.framework.CastContextEventType.SESSION_STATE_CHANGED, ev => this._sessionStateChanged(ev));\n    context.addEventListener( // @ts-ignore\n    cast.framework.CastContextEventType.CAST_STATE_CHANGED, ev => this._castStateChanged(ev));\n  }\n\n  addEventListener(event, listener) {\n    if (!(event in this._eventListeners)) {\n      this._eventListeners[event] = [];\n    }\n\n    this._eventListeners[event].push(listener);\n\n    return () => {\n      this._eventListeners[event].splice(this._eventListeners[event].indexOf(listener));\n    };\n  }\n\n  get castConnectedToOurHass() {\n    return this.status !== undefined && this.auth !== undefined && this.status.connected && (this.status.hassUrl === this.auth.data.hassUrl || _const__WEBPACK_IMPORTED_MODULE_1__[\"CAST_DEV\"] && this.status.hassUrl === _dev_const__WEBPACK_IMPORTED_MODULE_2__[\"CAST_DEV_HASS_URL\"]);\n  }\n\n  sendMessage(msg) {\n    if (true) {\n      console.log(\"Sending cast message\", msg);\n    }\n\n    this.castSession.sendMessage(_const__WEBPACK_IMPORTED_MODULE_1__[\"CAST_NS\"], msg);\n  }\n\n  get castState() {\n    return this.castContext.getCastState();\n  }\n\n  get castContext() {\n    // @ts-ignore\n    return cast.framework.CastContext.getInstance();\n  }\n\n  get castSession() {\n    return this.castContext.getCurrentSession();\n  }\n\n  requestSession() {\n    return this.castContext.requestSession();\n  }\n\n  _fireEvent(event) {\n    for (const listener of this._eventListeners[event] || []) {\n      listener();\n    }\n  }\n\n  _receiveMessage(msg) {\n    if (true) {\n      console.log(\"Received cast message\", msg);\n    }\n\n    if (msg.type === \"receiver_status\") {\n      this.status = msg;\n\n      this._fireEvent(\"connection-changed\");\n    }\n  }\n\n  _sessionStateChanged(ev) {\n    if (true) {\n      console.log(\"Cast session state changed\", ev.sessionState);\n    } // On Android, opening a new session always results in SESSION_RESUMED.\n    // So treat both as the same.\n\n\n    if (ev.sessionState === \"SESSION_STARTED\" || ev.sessionState === \"SESSION_RESUMED\") {\n      if (this.auth) {\n        Object(_receiver_messages__WEBPACK_IMPORTED_MODULE_3__[\"castSendAuth\"])(this, this.auth);\n      } else {\n        // Only do if no auth, as this is done as part of sendAuth.\n        this.sendMessage({\n          type: \"get_status\"\n        });\n      }\n\n      this._attachMessageListener();\n    } else if (ev.sessionState === \"SESSION_ENDED\") {\n      this.status = undefined;\n\n      this._fireEvent(\"connection-changed\");\n    }\n  }\n\n  _castStateChanged(ev) {\n    if (true) {\n      console.log(\"Cast state changed\", ev.castState);\n    }\n\n    this._fireEvent(\"state-changed\");\n  }\n\n  _attachMessageListener() {\n    const session = this.castSession;\n    session.addMessageListener(_const__WEBPACK_IMPORTED_MODULE_1__[\"CAST_NS\"], (_ns, msg) => this._receiveMessage(JSON.parse(msg)));\n  }\n\n}\nconst getCastManager = auth => {\n  if (!managerProm) {\n    managerProm = Object(_cast_framework__WEBPACK_IMPORTED_MODULE_0__[\"castApiAvailable\"])().then(isAvailable => {\n      if (!isAvailable) {\n        throw new Error(\"No Cast API available\");\n      }\n\n      return new CastManager(auth);\n    });\n  }\n\n  return managerProm;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2FzdC9jYXN0X21hbmFnZXIudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2FzdC9jYXN0X21hbmFnZXIudHM/ZGVlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiwgbm8tY29uc29sZSAqL1xuaW1wb3J0IHsgQXV0aCB9IGZyb20gXCJob21lLWFzc2lzdGFudC1qcy13ZWJzb2NrZXRcIjtcbmltcG9ydCB7IGNhc3RBcGlBdmFpbGFibGUgfSBmcm9tIFwiLi9jYXN0X2ZyYW1ld29ya1wiO1xuaW1wb3J0IHsgQ0FTVF9BUFBfSUQsIENBU1RfREVWLCBDQVNUX05TIH0gZnJvbSBcIi4vY29uc3RcIjtcbmltcG9ydCB7IENBU1RfREVWX0hBU1NfVVJMIH0gZnJvbSBcIi4vZGV2X2NvbnN0XCI7XG5pbXBvcnQge1xuICBjYXN0U2VuZEF1dGgsXG4gIEhhc3NNZXNzYWdlIGFzIFJlY2VpdmVyTWVzc2FnZSxcbn0gZnJvbSBcIi4vcmVjZWl2ZXJfbWVzc2FnZXNcIjtcbmltcG9ydCB7IFJlY2VpdmVyU3RhdHVzTWVzc2FnZSwgU2VuZGVyTWVzc2FnZSB9IGZyb20gXCIuL3NlbmRlcl9tZXNzYWdlc1wiO1xuXG5sZXQgbWFuYWdlclByb206IFByb21pc2U8Q2FzdE1hbmFnZXI+IHwgdW5kZWZpbmVkO1xuXG50eXBlIENhc3RFdmVudExpc3RlbmVyID0gKCkgPT4gdm9pZDtcblxuLypcbkdlbmVyYWwgZmxvdyBvZiBDaHJvbWVjYXN0OlxuXG5DaHJvbWVjYXN0IHNlc3Npb25zIGFyZSBzdGFydGVkIHZpYSB0aGUgQ2hyb21lY2FzdCBidXR0b24uIFdoZW4gY2xpY2tlZCwgc2Vzc2lvblxuc3RhdGUgY2hhbmdlcyB0byBzdGFydGVkLiBXZSB0aGVuIHNlbmQgYXV0aGVudGljYXRpb24sIHdoaWNoIHdpbGwgY2F1c2UgdGhlXG5yZWNlaXZlciBhcHAgdG8gc2VuZCBhIHN0YXR1cyB1cGRhdGUuXG5cbklmIGEgc2Vzc2lvbiBpcyBhbHJlYWR5IGFjdGl2ZSwgd2UgcXVlcnkgdGhlIHN0YXR1cyB0byBzZWUgd2hhdCBpdCBpcyB1cCB0by4gSWZcbmEgdXNlciBwcmVzc2VzIHRoZSBjYXN0IGJ1dHRvbiB3ZSBzZW5kIGF1dGggaWYgbm90IGNvbm5lY3RlZCB5ZXQsIHRoZW4gc2VuZFxuY29tbWFuZCBhcyB1c3VhbC5cbiovXG5cbnR5cGUgQ2FzdEV2ZW50ID0gXCJjb25uZWN0aW9uLWNoYW5nZWRcIiB8IFwic3RhdGUtY2hhbmdlZFwiO1xuXG5leHBvcnQgY2xhc3MgQ2FzdE1hbmFnZXIge1xuICBwdWJsaWMgYXV0aD86IEF1dGg7XG5cbiAgLy8gSWYgdGhlIGNhc3QgY29ubmVjdGlvbiBpcyBjb25uZWN0ZWQgdG8gb3VyIEhhc3MuXG4gIHB1YmxpYyBzdGF0dXM/OiBSZWNlaXZlclN0YXR1c01lc3NhZ2U7XG5cbiAgcHJpdmF0ZSBfZXZlbnRMaXN0ZW5lcnM6IHsgW2V2ZW50OiBzdHJpbmddOiBDYXN0RXZlbnRMaXN0ZW5lcltdIH0gPSB7fTtcblxuICBjb25zdHJ1Y3RvcihhdXRoPzogQXV0aCkge1xuICAgIHRoaXMuYXV0aCA9IGF1dGg7XG4gICAgY29uc3QgY29udGV4dCA9IHRoaXMuY2FzdENvbnRleHQ7XG4gICAgY29udGV4dC5zZXRPcHRpb25zKHtcbiAgICAgIHJlY2VpdmVyQXBwbGljYXRpb25JZDogQ0FTVF9BUFBfSUQsXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBhdXRvSm9pblBvbGljeTogY2hyb21lLmNhc3QuQXV0b0pvaW5Qb2xpY3kuT1JJR0lOX1NDT1BFRCxcbiAgICB9KTtcbiAgICBjb250ZXh0LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBjYXN0LmZyYW1ld29yay5DYXN0Q29udGV4dEV2ZW50VHlwZS5TRVNTSU9OX1NUQVRFX0NIQU5HRUQsXG4gICAgICAoZXYpID0+IHRoaXMuX3Nlc3Npb25TdGF0ZUNoYW5nZWQoZXYpXG4gICAgKTtcbiAgICBjb250ZXh0LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBjYXN0LmZyYW1ld29yay5DYXN0Q29udGV4dEV2ZW50VHlwZS5DQVNUX1NUQVRFX0NIQU5HRUQsXG4gICAgICAoZXYpID0+IHRoaXMuX2Nhc3RTdGF0ZUNoYW5nZWQoZXYpXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRFdmVudExpc3RlbmVyKGV2ZW50OiBDYXN0RXZlbnQsIGxpc3RlbmVyOiBDYXN0RXZlbnRMaXN0ZW5lcikge1xuICAgIGlmICghKGV2ZW50IGluIHRoaXMuX2V2ZW50TGlzdGVuZXJzKSkge1xuICAgICAgdGhpcy5fZXZlbnRMaXN0ZW5lcnNbZXZlbnRdID0gW107XG4gICAgfVxuICAgIHRoaXMuX2V2ZW50TGlzdGVuZXJzW2V2ZW50XS5wdXNoKGxpc3RlbmVyKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLl9ldmVudExpc3RlbmVyc1tldmVudF0uc3BsaWNlKFxuICAgICAgICB0aGlzLl9ldmVudExpc3RlbmVyc1tldmVudF0uaW5kZXhPZihsaXN0ZW5lcilcbiAgICAgICk7XG4gICAgfTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgY2FzdENvbm5lY3RlZFRvT3VySGFzcygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5zdGF0dXMgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgdGhpcy5hdXRoICE9PSB1bmRlZmluZWQgJiZcbiAgICAgIHRoaXMuc3RhdHVzLmNvbm5lY3RlZCAmJlxuICAgICAgKHRoaXMuc3RhdHVzLmhhc3NVcmwgPT09IHRoaXMuYXV0aC5kYXRhLmhhc3NVcmwgfHxcbiAgICAgICAgKENBU1RfREVWICYmIHRoaXMuc3RhdHVzLmhhc3NVcmwgPT09IENBU1RfREVWX0hBU1NfVVJMKSlcbiAgICApO1xuICB9XG5cbiAgcHVibGljIHNlbmRNZXNzYWdlKG1zZzogUmVjZWl2ZXJNZXNzYWdlKSB7XG4gICAgaWYgKF9fREVWX18pIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiU2VuZGluZyBjYXN0IG1lc3NhZ2VcIiwgbXNnKTtcbiAgICB9XG4gICAgdGhpcy5jYXN0U2Vzc2lvbi5zZW5kTWVzc2FnZShDQVNUX05TLCBtc2cpO1xuICB9XG5cbiAgcHVibGljIGdldCBjYXN0U3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2FzdENvbnRleHQuZ2V0Q2FzdFN0YXRlKCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGNhc3RDb250ZXh0KCkge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICByZXR1cm4gY2FzdC5mcmFtZXdvcmsuQ2FzdENvbnRleHQuZ2V0SW5zdGFuY2UoKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgY2FzdFNlc3Npb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuY2FzdENvbnRleHQuZ2V0Q3VycmVudFNlc3Npb24oKSE7XG4gIH1cblxuICBwdWJsaWMgcmVxdWVzdFNlc3Npb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuY2FzdENvbnRleHQucmVxdWVzdFNlc3Npb24oKTtcbiAgfVxuXG4gIHByaXZhdGUgX2ZpcmVFdmVudChldmVudDogQ2FzdEV2ZW50KSB7XG4gICAgZm9yIChjb25zdCBsaXN0ZW5lciBvZiB0aGlzLl9ldmVudExpc3RlbmVyc1tldmVudF0gfHwgW10pIHtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfcmVjZWl2ZU1lc3NhZ2UobXNnOiBTZW5kZXJNZXNzYWdlKSB7XG4gICAgaWYgKF9fREVWX18pIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiUmVjZWl2ZWQgY2FzdCBtZXNzYWdlXCIsIG1zZyk7XG4gICAgfVxuICAgIGlmIChtc2cudHlwZSA9PT0gXCJyZWNlaXZlcl9zdGF0dXNcIikge1xuICAgICAgdGhpcy5zdGF0dXMgPSBtc2c7XG4gICAgICB0aGlzLl9maXJlRXZlbnQoXCJjb25uZWN0aW9uLWNoYW5nZWRcIik7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfc2Vzc2lvblN0YXRlQ2hhbmdlZChldikge1xuICAgIGlmIChfX0RFVl9fKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkNhc3Qgc2Vzc2lvbiBzdGF0ZSBjaGFuZ2VkXCIsIGV2LnNlc3Npb25TdGF0ZSk7XG4gICAgfVxuICAgIC8vIE9uIEFuZHJvaWQsIG9wZW5pbmcgYSBuZXcgc2Vzc2lvbiBhbHdheXMgcmVzdWx0cyBpbiBTRVNTSU9OX1JFU1VNRUQuXG4gICAgLy8gU28gdHJlYXQgYm90aCBhcyB0aGUgc2FtZS5cbiAgICBpZiAoXG4gICAgICBldi5zZXNzaW9uU3RhdGUgPT09IFwiU0VTU0lPTl9TVEFSVEVEXCIgfHxcbiAgICAgIGV2LnNlc3Npb25TdGF0ZSA9PT0gXCJTRVNTSU9OX1JFU1VNRURcIlxuICAgICkge1xuICAgICAgaWYgKHRoaXMuYXV0aCkge1xuICAgICAgICBjYXN0U2VuZEF1dGgodGhpcywgdGhpcy5hdXRoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE9ubHkgZG8gaWYgbm8gYXV0aCwgYXMgdGhpcyBpcyBkb25lIGFzIHBhcnQgb2Ygc2VuZEF1dGguXG4gICAgICAgIHRoaXMuc2VuZE1lc3NhZ2UoeyB0eXBlOiBcImdldF9zdGF0dXNcIiB9KTtcbiAgICAgIH1cbiAgICAgIHRoaXMuX2F0dGFjaE1lc3NhZ2VMaXN0ZW5lcigpO1xuICAgIH0gZWxzZSBpZiAoZXYuc2Vzc2lvblN0YXRlID09PSBcIlNFU1NJT05fRU5ERURcIikge1xuICAgICAgdGhpcy5zdGF0dXMgPSB1bmRlZmluZWQ7XG4gICAgICB0aGlzLl9maXJlRXZlbnQoXCJjb25uZWN0aW9uLWNoYW5nZWRcIik7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfY2FzdFN0YXRlQ2hhbmdlZChldikge1xuICAgIGlmIChfX0RFVl9fKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkNhc3Qgc3RhdGUgY2hhbmdlZFwiLCBldi5jYXN0U3RhdGUpO1xuICAgIH1cbiAgICB0aGlzLl9maXJlRXZlbnQoXCJzdGF0ZS1jaGFuZ2VkXCIpO1xuICB9XG5cbiAgcHJpdmF0ZSBfYXR0YWNoTWVzc2FnZUxpc3RlbmVyKCkge1xuICAgIGNvbnN0IHNlc3Npb24gPSB0aGlzLmNhc3RTZXNzaW9uO1xuICAgIHNlc3Npb24uYWRkTWVzc2FnZUxpc3RlbmVyKENBU1RfTlMsIChfbnMsIG1zZykgPT5cbiAgICAgIHRoaXMuX3JlY2VpdmVNZXNzYWdlKEpTT04ucGFyc2UobXNnKSlcbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBnZXRDYXN0TWFuYWdlciA9IChhdXRoPzogQXV0aCkgPT4ge1xuICBpZiAoIW1hbmFnZXJQcm9tKSB7XG4gICAgbWFuYWdlclByb20gPSBjYXN0QXBpQXZhaWxhYmxlKCkudGhlbigoaXNBdmFpbGFibGUpID0+IHtcbiAgICAgIGlmICghaXNBdmFpbGFibGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gQ2FzdCBBUEkgYXZhaWxhYmxlXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ldyBDYXN0TWFuYWdlcihhdXRoKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gbWFuYWdlclByb207XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFrQkE7QUFHQTtBQUtBO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFEQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUVBO0FBR0E7QUFFQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQS9IQTtBQWlJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/cast/cast_manager.ts\n");

/***/ }),

/***/ "./src/common/dom/load_resource.ts":
/*!*****************************************!*\
  !*** ./src/common/dom/load_resource.ts ***!
  \*****************************************/
/*! exports provided: loadCSS, loadJS, loadImg, loadModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadCSS\", function() { return loadCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadJS\", function() { return loadJS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadImg\", function() { return loadImg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadModule\", function() { return loadModule; });\n// Load a resource and get a promise when loading done.\n// From: https://davidwalsh.name/javascript-loader\nconst _load = (tag, url, type) => {\n  // This promise will be used by Promise.all to determine success or failure\n  return new Promise((resolve, reject) => {\n    const element = document.createElement(tag);\n    let attr = \"src\";\n    let parent = \"body\"; // Important success and error for the promise\n\n    element.onload = () => resolve(url);\n\n    element.onerror = () => reject(url); // Need to set different attributes depending on tag type\n\n\n    switch (tag) {\n      case \"script\":\n        element.async = true;\n\n        if (type) {\n          element.type = type;\n        }\n\n        break;\n\n      case \"link\":\n        element.type = \"text/css\";\n        element.rel = \"stylesheet\";\n        attr = \"href\";\n        parent = \"head\";\n    } // Inject into document to kick off loading\n\n\n    element[attr] = url;\n    document[parent].appendChild(element);\n  });\n};\n\nconst loadCSS = url => _load(\"link\", url);\nconst loadJS = url => _load(\"script\", url);\nconst loadImg = url => _load(\"img\", url);\nconst loadModule = url => _load(\"script\", url, \"module\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbW9uL2RvbS9sb2FkX3Jlc291cmNlLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbW1vbi9kb20vbG9hZF9yZXNvdXJjZS50cz84ZWNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIExvYWQgYSByZXNvdXJjZSBhbmQgZ2V0IGEgcHJvbWlzZSB3aGVuIGxvYWRpbmcgZG9uZS5cbi8vIEZyb206IGh0dHBzOi8vZGF2aWR3YWxzaC5uYW1lL2phdmFzY3JpcHQtbG9hZGVyXG5cbmNvbnN0IF9sb2FkID0gKFxuICB0YWc6IFwibGlua1wiIHwgXCJzY3JpcHRcIiB8IFwiaW1nXCIsXG4gIHVybDogc3RyaW5nLFxuICB0eXBlPzogXCJtb2R1bGVcIlxuKSA9PiB7XG4gIC8vIFRoaXMgcHJvbWlzZSB3aWxsIGJlIHVzZWQgYnkgUHJvbWlzZS5hbGwgdG8gZGV0ZXJtaW5lIHN1Y2Nlc3Mgb3IgZmFpbHVyZVxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gICAgbGV0IGF0dHIgPSBcInNyY1wiO1xuICAgIGxldCBwYXJlbnQgPSBcImJvZHlcIjtcblxuICAgIC8vIEltcG9ydGFudCBzdWNjZXNzIGFuZCBlcnJvciBmb3IgdGhlIHByb21pc2VcbiAgICBlbGVtZW50Lm9ubG9hZCA9ICgpID0+IHJlc29sdmUodXJsKTtcbiAgICBlbGVtZW50Lm9uZXJyb3IgPSAoKSA9PiByZWplY3QodXJsKTtcblxuICAgIC8vIE5lZWQgdG8gc2V0IGRpZmZlcmVudCBhdHRyaWJ1dGVzIGRlcGVuZGluZyBvbiB0YWcgdHlwZVxuICAgIHN3aXRjaCAodGFnKSB7XG4gICAgICBjYXNlIFwic2NyaXB0XCI6XG4gICAgICAgIChlbGVtZW50IGFzIEhUTUxTY3JpcHRFbGVtZW50KS5hc3luYyA9IHRydWU7XG4gICAgICAgIGlmICh0eXBlKSB7XG4gICAgICAgICAgKGVsZW1lbnQgYXMgSFRNTFNjcmlwdEVsZW1lbnQpLnR5cGUgPSB0eXBlO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImxpbmtcIjpcbiAgICAgICAgKGVsZW1lbnQgYXMgSFRNTExpbmtFbGVtZW50KS50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuICAgICAgICAoZWxlbWVudCBhcyBIVE1MTGlua0VsZW1lbnQpLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuICAgICAgICBhdHRyID0gXCJocmVmXCI7XG4gICAgICAgIHBhcmVudCA9IFwiaGVhZFwiO1xuICAgIH1cblxuICAgIC8vIEluamVjdCBpbnRvIGRvY3VtZW50IHRvIGtpY2sgb2ZmIGxvYWRpbmdcbiAgICBlbGVtZW50W2F0dHJdID0gdXJsO1xuICAgIGRvY3VtZW50W3BhcmVudF0uYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGxvYWRDU1MgPSAodXJsOiBzdHJpbmcpID0+IF9sb2FkKFwibGlua1wiLCB1cmwpO1xuZXhwb3J0IGNvbnN0IGxvYWRKUyA9ICh1cmw6IHN0cmluZykgPT4gX2xvYWQoXCJzY3JpcHRcIiwgdXJsKTtcbmV4cG9ydCBjb25zdCBsb2FkSW1nID0gKHVybDogc3RyaW5nKSA9PiBfbG9hZChcImltZ1wiLCB1cmwpO1xuZXhwb3J0IGNvbnN0IGxvYWRNb2R1bGUgPSAodXJsOiBzdHJpbmcpID0+IF9sb2FkKFwic2NyaXB0XCIsIHVybCwgXCJtb2R1bGVcIik7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWEE7QUFDQTtBQUNBO0FBYUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/common/dom/load_resource.ts\n");

/***/ })

}]);