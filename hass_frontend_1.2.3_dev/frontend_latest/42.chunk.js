(self["webpackJsonp"] = self["webpackJsonp"] || []).push([[42],{

/***/ "./src/resources/html-import/polyfill.js":
/*!***********************************************!*\
  !*** ./src/resources/html-import/polyfill.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* eslint-disable */\n\n/*\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n(function (q) {\n  function y(a, b) {\n    if (\"function\" === typeof window.CustomEvent) return new CustomEvent(a, b);\n    var c = document.createEvent(\"CustomEvent\");\n    c.initCustomEvent(a, !!b.bubbles, !!b.cancelable, b.detail);\n    return c;\n  }\n\n  function m(a) {\n    if (u) return a.ownerDocument !== document ? a.ownerDocument : null;\n    var b = a.__importDoc;\n\n    if (!b && a.parentNode) {\n      b = a.parentNode;\n      if (\"function\" === typeof b.closest) b = b.closest(\"link[rel=import]\");else for (; !r(b) && (b = b.parentNode););\n      a.__importDoc = b;\n    }\n\n    return b;\n  }\n\n  function D(a) {\n    var b = k(document, \"link[rel=import]:not([import-dependency])\"),\n        c = b.length;\n    c ? g(b, function (b) {\n      return t(b, function () {\n        0 === --c && a();\n      });\n    }) : a();\n  }\n\n  function z(a) {\n    function b() {\n      \"loading\" !== document.readyState && document.body && (document.removeEventListener(\"readystatechange\", b), a());\n    }\n\n    document.addEventListener(\"readystatechange\", b);\n    b();\n  }\n\n  function A(a) {\n    z(function () {\n      return D(function () {\n        return a && a();\n      });\n    });\n  }\n\n  function t(a, b) {\n    if (a.__loaded) b && b();else if (\"script\" === a.localName && !a.src || \"style\" === a.localName && !a.firstChild) a.__loaded = !0, b && b();else {\n      var c = function (d) {\n        a.removeEventListener(d.type, c);\n        a.__loaded = !0;\n        b && b();\n      };\n\n      a.addEventListener(\"load\", c);\n      v && \"style\" === a.localName || a.addEventListener(\"error\", c);\n    }\n  }\n\n  function r(a) {\n    return a.nodeType === Node.ELEMENT_NODE && \"link\" === a.localName && \"import\" === a.rel;\n  }\n\n  function h() {\n    var a = this;\n    this.a = {};\n    this.b = 0;\n    this.g = new MutationObserver(function (b) {\n      return a.w(b);\n    });\n    this.g.observe(document.head, {\n      childList: !0,\n      subtree: !0\n    });\n    this.loadImports(document);\n  }\n\n  function B(a) {\n    g(k(a, \"template\"), function (a) {\n      g(k(a.content, 'script:not([type]),script[type=\"application/javascript\"],script[type=\"text/javascript\"]'), function (a) {\n        var b = document.createElement(\"script\");\n        g(a.attributes, function (a) {\n          return b.setAttribute(a.name, a.value);\n        });\n        b.textContent = a.textContent;\n        a.parentNode.replaceChild(b, a);\n      });\n      B(a.content);\n    });\n  }\n\n  function k(a, b) {\n    return a.childNodes.length ? a.querySelectorAll(b) : E;\n  }\n\n  function g(a, b, c) {\n    var d = a ? a.length : 0,\n        f = c ? -1 : 1;\n\n    for (c = c ? d - 1 : 0; c < d && 0 <= c; c += f) b(a[c], c);\n  }\n\n  var n = document.createElement(\"link\"),\n      u = (\"import\" in n),\n      E = n.querySelectorAll(\"*\"),\n      w = null;\n  !1 === \"currentScript\" in document && Object.defineProperty(document, \"currentScript\", {\n    get: function () {\n      return w || (\"complete\" !== document.readyState ? document.scripts[document.scripts.length - 1] : null);\n    },\n    configurable: !0\n  });\n  var F = /(url\\()([^)]*)(\\))/g,\n      G = /(@import[\\s]+(?!url\\())([^;]*)(;)/g,\n      H = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g,\n      e = {\n    u: function (a, b) {\n      a.href && a.setAttribute(\"href\", e.c(a.getAttribute(\"href\"), b));\n      a.src && a.setAttribute(\"src\", e.c(a.getAttribute(\"src\"), b));\n\n      if (\"style\" === a.localName) {\n        var c = e.o(a.textContent, b, F);\n        a.textContent = e.o(c, b, G);\n      }\n    },\n    o: function (a, b, c) {\n      return a.replace(c, function (a, c, l, g) {\n        a = l.replace(/[\"']/g, \"\");\n        b && (a = e.c(a, b));\n        return c + \"'\" + a + \"'\" + g;\n      });\n    },\n    c: function (a, b) {\n      if (void 0 === e.f) {\n        e.f = !1;\n\n        try {\n          var c = new URL(\"b\", \"http://a\");\n          c.pathname = \"c%20d\";\n          e.f = \"http://a/c%20d\" === c.href;\n        } catch (d) {}\n      }\n\n      if (e.f) return new URL(a, b).href;\n      c = e.s;\n      c || (c = document.implementation.createHTMLDocument(\"temp\"), e.s = c, c.i = c.createElement(\"base\"), c.head.appendChild(c.i), c.h = c.createElement(\"a\"));\n      c.i.href = b;\n      c.h.href = a;\n      return c.h.href || a;\n    }\n  },\n      C = {\n    async: !0,\n    load: function (a, b, c) {\n      if (a) {\n        if (a.match(/^data:/)) {\n          a = a.split(\",\");\n          var d = a[1];\n          d = -1 < a[0].indexOf(\";base64\") ? atob(d) : decodeURIComponent(d);\n          b(d);\n        } else {\n          var f = new XMLHttpRequest();\n          f.open(\"GET\", a, C.async);\n\n          f.onload = function () {\n            var a = f.responseURL || f.getResponseHeader(\"Location\");\n            a && 0 === a.indexOf(\"/\") && (a = (location.origin || location.protocol + \"//\" + location.host) + a);\n            var d = f.response || f.responseText;\n            304 === f.status || 0 === f.status || 200 <= f.status && 300 > f.status ? b(d, a) : c(d);\n          };\n\n          f.send();\n        }\n      } else c(\"error: href must be specified\");\n    }\n  },\n      v = /Trident/.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent);\n\n  h.prototype.loadImports = function (a) {\n    var b = this;\n    g(k(a, \"link[rel=import]\"), function (a) {\n      return b.l(a);\n    });\n  };\n\n  h.prototype.l = function (a) {\n    var b = this,\n        c = a.href;\n\n    if (void 0 !== this.a[c]) {\n      var d = this.a[c];\n      d && d.__loaded && (a.__import = d, this.j(a));\n    } else this.b++, this.a[c] = \"pending\", C.load(c, function (a, d) {\n      a = b.A(a, d || c);\n      b.a[c] = a;\n      b.b--;\n      b.loadImports(a);\n      b.m();\n    }, function () {\n      b.a[c] = null;\n      b.b--;\n      b.m();\n    });\n  };\n\n  h.prototype.A = function (a, b) {\n    if (!a) return document.createDocumentFragment();\n    v && (a = a.replace(H, function (a, b, c) {\n      return -1 === a.indexOf(\"type=\") ? b + \" type=import-disable \" + c : a;\n    }));\n    var c = document.createElement(\"template\");\n    c.innerHTML = a;\n    if (c.content) a = c.content, B(a);else for (a = document.createDocumentFragment(); c.firstChild;) a.appendChild(c.firstChild);\n    if (c = a.querySelector(\"base\")) b = e.c(c.getAttribute(\"href\"), b), c.removeAttribute(\"href\");\n    var d = 0;\n    g(k(a, 'link[rel=import],link[rel=stylesheet][href][type=import-disable],style:not([type]),link[rel=stylesheet][href]:not([type]),script:not([type]),script[type=\"application/javascript\"],script[type=\"text/javascript\"]'), function (a) {\n      t(a);\n      e.u(a, b);\n      a.setAttribute(\"import-dependency\", \"\");\n      \"script\" === a.localName && !a.src && a.textContent && (a.setAttribute(\"src\", \"data:text/javascript;charset=utf-8,\" + encodeURIComponent(a.textContent + (\"\\n//# sourceURL=\" + b + (d ? \"-\" + d : \"\") + \".js\\n\"))), a.textContent = \"\", d++);\n    });\n    return a;\n  };\n\n  h.prototype.m = function () {\n    var a = this;\n\n    if (!this.b) {\n      this.g.disconnect();\n      this.flatten(document);\n\n      var b = !1,\n          c = !1,\n          d = function () {\n        c && b && (a.loadImports(document), a.b || (a.g.observe(document.head, {\n          childList: !0,\n          subtree: !0\n        }), a.v()));\n      };\n\n      this.C(function () {\n        c = !0;\n        d();\n      });\n      this.B(function () {\n        b = !0;\n        d();\n      });\n    }\n  };\n\n  h.prototype.flatten = function (a) {\n    var b = this;\n    g(k(a, \"link[rel=import]\"), function (a) {\n      var c = b.a[a.href];\n      (a.__import = c) && c.nodeType === Node.DOCUMENT_FRAGMENT_NODE && (b.a[a.href] = a, a.readyState = \"loading\", a.__import = a, b.flatten(c), a.appendChild(c));\n    });\n  };\n\n  h.prototype.B = function (a) {\n    function b(f) {\n      if (f < d) {\n        var l = c[f],\n            e = document.createElement(\"script\");\n        l.removeAttribute(\"import-dependency\");\n        g(l.attributes, function (a) {\n          return e.setAttribute(a.name, a.value);\n        });\n        w = e;\n        l.parentNode.replaceChild(e, l);\n        t(e, function () {\n          w = null;\n          b(f + 1);\n        });\n      } else a();\n    }\n\n    var c = k(document, \"script[import-dependency]\"),\n        d = c.length;\n    b(0);\n  };\n\n  h.prototype.C = function (a) {\n    var b = k(document, \"style[import-dependency],link[rel=stylesheet][import-dependency]\"),\n        c = b.length;\n\n    if (c) {\n      var d = v && !!document.querySelector(\"link[rel=stylesheet][href][type=import-disable]\");\n      g(b, function (b) {\n        t(b, function () {\n          b.removeAttribute(\"import-dependency\");\n          0 === --c && a();\n        });\n\n        if (d && b.parentNode !== document.head) {\n          var e = document.createElement(b.localName);\n          e.__appliedElement = b;\n          e.setAttribute(\"type\", \"import-placeholder\");\n          b.parentNode.insertBefore(e, b.nextSibling);\n\n          for (e = m(b); e && m(e);) e = m(e);\n\n          e.parentNode !== document.head && (e = null);\n          document.head.insertBefore(b, e);\n          b.removeAttribute(\"type\");\n        }\n      });\n    } else a();\n  };\n\n  h.prototype.v = function () {\n    var a = this;\n    g(k(document, \"link[rel=import]\"), function (b) {\n      return a.j(b);\n    }, !0);\n  };\n\n  h.prototype.j = function (a) {\n    a.__loaded || (a.__loaded = !0, a.import && (a.import.readyState = \"complete\"), a.dispatchEvent(y(a.import ? \"load\" : \"error\", {\n      bubbles: !1,\n      cancelable: !1,\n      detail: void 0\n    })));\n  };\n\n  h.prototype.w = function (a) {\n    var b = this;\n    g(a, function (a) {\n      return g(a.addedNodes, function (a) {\n        a && a.nodeType === Node.ELEMENT_NODE && (r(a) ? b.l(a) : b.loadImports(a));\n      });\n    });\n  };\n\n  var x = null;\n  if (u) g(k(document, \"link[rel=import]\"), function (a) {\n    a.import && \"loading\" === a.import.readyState || (a.__loaded = !0);\n  }), n = function (a) {\n    a = a.target;\n    r(a) && (a.__loaded = !0);\n  }, document.addEventListener(\"load\", n, !0), document.addEventListener(\"error\", n, !0);else {\n    var p = Object.getOwnPropertyDescriptor(Node.prototype, \"baseURI\");\n    Object.defineProperty((!p || p.configurable ? Node : Element).prototype, \"baseURI\", {\n      get: function () {\n        var a = r(this) ? this : m(this);\n        return a ? a.href : p && p.get ? p.get.call(this) : (document.querySelector(\"base\") || window.location).href;\n      },\n      configurable: !0,\n      enumerable: !0\n    });\n    Object.defineProperty(HTMLLinkElement.prototype, \"import\", {\n      get: function () {\n        return this.__import || null;\n      },\n      configurable: !0,\n      enumerable: !0\n    });\n    z(function () {\n      x = new h();\n    });\n  }\n  A(function () {\n    return document.dispatchEvent(y(\"HTMLImportsLoaded\", {\n      cancelable: !0,\n      bubbles: !0,\n      detail: void 0\n    }));\n  });\n  q.useNative = u;\n  q.whenReady = A;\n  q.importForElement = m;\n\n  q.loadImports = function (a) {\n    x && x.loadImports(a);\n  };\n})(window.HTMLImports = window.HTMLImports || {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/resources/html-import/polyfill.js\n");

/***/ })

}]);