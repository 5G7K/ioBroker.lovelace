(self["webpackJsonp"] = self["webpackJsonp"] || []).push([["vendors~notification-manager"],{

/***/ "./node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js ***!
  \**************************************************************************/
/*! exports provided: IronA11yAnnouncer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IronA11yAnnouncer\", function() { return IronA11yAnnouncer; });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        position: fixed;\\n        clip: rect(0px,0px,0px,0px);\\n      }\\n    </style>\\n    <div aria-live$=\\\"[[mode]]\\\">[[_text]]</div>\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n/**\n`iron-a11y-announcer` is a singleton element that is intended to add a11y\nto features that require on-demand announcement from screen readers. In\norder to make use of the announcer, it is best to request its availability\nin the announcing element.\n\nExample:\n\n    Polymer({\n\n      is: 'x-chatty',\n\n      attached: function() {\n        // This will create the singleton element if it has not\n        // been created yet:\n        Polymer.IronA11yAnnouncer.requestAvailability();\n      }\n    });\n\nAfter the `iron-a11y-announcer` has been made available, elements can\nmake announces by firing bubbling `iron-announce` events.\n\nExample:\n\n    this.fire('iron-announce', {\n      text: 'This is an announcement!'\n    }, { bubbles: true });\n\nNote: announcements are only audible if you have a screen reader enabled.\n\n@demo demo/index.html\n*/\n\nvar IronA11yAnnouncer = Object(_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_1__[\"Polymer\"])({\n  /** @override */\n  _template: Object(_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_2__[\"html\"])(_templateObject()),\n  is: 'iron-a11y-announcer',\n  properties: {\n    /**\n     * The value of mode is used to set the `aria-live` attribute\n     * for the element that will be announced. Valid values are: `off`,\n     * `polite` and `assertive`.\n     */\n    mode: {\n      type: String,\n      value: 'polite'\n    },\n\n    /**\n     * The timeout on refreshing the announcement text. Larger timeouts are\n     * needed for certain screen readers to re-announce the same message.\n     */\n    timeout: {\n      type: Number,\n      value: 150\n    },\n    _text: {\n      type: String,\n      value: ''\n    }\n  },\n\n  /** @override */\n  created: function created() {\n    if (!IronA11yAnnouncer.instance) {\n      IronA11yAnnouncer.instance = this;\n    }\n\n    document.addEventListener('iron-announce', this._onIronAnnounce.bind(this));\n  },\n\n  /**\n   * Cause a text string to be announced by screen readers.\n   *\n   * @param {string} text The text that should be announced.\n   */\n  announce: function announce(text) {\n    this._text = '';\n    this.async(function () {\n      this._text = text;\n    }, this.timeout);\n  },\n  _onIronAnnounce: function _onIronAnnounce(event) {\n    if (event.detail && event.detail.text) {\n      this.announce(event.detail.text);\n    }\n  }\n});\nIronA11yAnnouncer.instance = null;\n\nIronA11yAnnouncer.requestAvailability = function () {\n  if (!IronA11yAnnouncer.instance) {\n    IronA11yAnnouncer.instance = document.createElement('iron-a11y-announcer');\n  }\n\n  if (document.body) {\n    document.body.appendChild(IronA11yAnnouncer.instance);\n  } else {\n    document.addEventListener('load', function () {\n      document.body.appendChild(IronA11yAnnouncer.instance);\n    });\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvaXJvbi1hMTF5LWFubm91bmNlci9pcm9uLWExMXktYW5ub3VuY2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb2x5bWVyL2lyb24tYTExeS1hbm5vdW5jZXIvaXJvbi1hMTF5LWFubm91bmNlci5qcz9kMjhhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuQGxpY2Vuc2VcbkNvcHlyaWdodCAoYykgMjAxNSBUaGUgUG9seW1lciBQcm9qZWN0IEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG5UaGlzIGNvZGUgbWF5IG9ubHkgYmUgdXNlZCB1bmRlciB0aGUgQlNEIHN0eWxlIGxpY2Vuc2UgZm91bmQgYXRcbmh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9MSUNFTlNFLnR4dCBUaGUgY29tcGxldGUgc2V0IG9mIGF1dGhvcnMgbWF5IGJlIGZvdW5kIGF0XG5odHRwOi8vcG9seW1lci5naXRodWIuaW8vQVVUSE9SUy50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBjb250cmlidXRvcnMgbWF5IGJlXG5mb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQ09OVFJJQlVUT1JTLnR4dCBDb2RlIGRpc3RyaWJ1dGVkIGJ5IEdvb2dsZSBhc1xucGFydCBvZiB0aGUgcG9seW1lciBwcm9qZWN0IGlzIGFsc28gc3ViamVjdCB0byBhbiBhZGRpdGlvbmFsIElQIHJpZ2h0cyBncmFudFxuZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL1BBVEVOVFMudHh0XG4qL1xuaW1wb3J0ICdAcG9seW1lci9wb2x5bWVyL3BvbHltZXItbGVnYWN5LmpzJztcblxuaW1wb3J0IHtQb2x5bWVyfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi9sZWdhY3kvcG9seW1lci1mbi5qcyc7XG5pbXBvcnQge2h0bWx9IGZyb20gJ0Bwb2x5bWVyL3BvbHltZXIvbGliL3V0aWxzL2h0bWwtdGFnLmpzJztcblxuLyoqXG5gaXJvbi1hMTF5LWFubm91bmNlcmAgaXMgYSBzaW5nbGV0b24gZWxlbWVudCB0aGF0IGlzIGludGVuZGVkIHRvIGFkZCBhMTF5XG50byBmZWF0dXJlcyB0aGF0IHJlcXVpcmUgb24tZGVtYW5kIGFubm91bmNlbWVudCBmcm9tIHNjcmVlbiByZWFkZXJzLiBJblxub3JkZXIgdG8gbWFrZSB1c2Ugb2YgdGhlIGFubm91bmNlciwgaXQgaXMgYmVzdCB0byByZXF1ZXN0IGl0cyBhdmFpbGFiaWxpdHlcbmluIHRoZSBhbm5vdW5jaW5nIGVsZW1lbnQuXG5cbkV4YW1wbGU6XG5cbiAgICBQb2x5bWVyKHtcblxuICAgICAgaXM6ICd4LWNoYXR0eScsXG5cbiAgICAgIGF0dGFjaGVkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIGNyZWF0ZSB0aGUgc2luZ2xldG9uIGVsZW1lbnQgaWYgaXQgaGFzIG5vdFxuICAgICAgICAvLyBiZWVuIGNyZWF0ZWQgeWV0OlxuICAgICAgICBQb2x5bWVyLklyb25BMTF5QW5ub3VuY2VyLnJlcXVlc3RBdmFpbGFiaWxpdHkoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuQWZ0ZXIgdGhlIGBpcm9uLWExMXktYW5ub3VuY2VyYCBoYXMgYmVlbiBtYWRlIGF2YWlsYWJsZSwgZWxlbWVudHMgY2FuXG5tYWtlIGFubm91bmNlcyBieSBmaXJpbmcgYnViYmxpbmcgYGlyb24tYW5ub3VuY2VgIGV2ZW50cy5cblxuRXhhbXBsZTpcblxuICAgIHRoaXMuZmlyZSgnaXJvbi1hbm5vdW5jZScsIHtcbiAgICAgIHRleHQ6ICdUaGlzIGlzIGFuIGFubm91bmNlbWVudCEnXG4gICAgfSwgeyBidWJibGVzOiB0cnVlIH0pO1xuXG5Ob3RlOiBhbm5vdW5jZW1lbnRzIGFyZSBvbmx5IGF1ZGlibGUgaWYgeW91IGhhdmUgYSBzY3JlZW4gcmVhZGVyIGVuYWJsZWQuXG5cbkBkZW1vIGRlbW8vaW5kZXguaHRtbFxuKi9cbmV4cG9ydCBjb25zdCBJcm9uQTExeUFubm91bmNlciA9IFBvbHltZXIoe1xuICAvKiogQG92ZXJyaWRlICovXG4gIF90ZW1wbGF0ZTogaHRtbGBcbiAgICA8c3R5bGU+XG4gICAgICA6aG9zdCB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICBjbGlwOiByZWN0KDBweCwwcHgsMHB4LDBweCk7XG4gICAgICB9XG4gICAgPC9zdHlsZT5cbiAgICA8ZGl2IGFyaWEtbGl2ZSQ9XCJbW21vZGVdXVwiPltbX3RleHRdXTwvZGl2PlxuYCxcblxuICBpczogJ2lyb24tYTExeS1hbm5vdW5jZXInLFxuXG4gIHByb3BlcnRpZXM6IHtcblxuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBvZiBtb2RlIGlzIHVzZWQgdG8gc2V0IHRoZSBgYXJpYS1saXZlYCBhdHRyaWJ1dGVcbiAgICAgKiBmb3IgdGhlIGVsZW1lbnQgdGhhdCB3aWxsIGJlIGFubm91bmNlZC4gVmFsaWQgdmFsdWVzIGFyZTogYG9mZmAsXG4gICAgICogYHBvbGl0ZWAgYW5kIGBhc3NlcnRpdmVgLlxuICAgICAqL1xuICAgIG1vZGU6IHt0eXBlOiBTdHJpbmcsIHZhbHVlOiAncG9saXRlJ30sXG5cbiAgICAvKipcbiAgICAgKiBUaGUgdGltZW91dCBvbiByZWZyZXNoaW5nIHRoZSBhbm5vdW5jZW1lbnQgdGV4dC4gTGFyZ2VyIHRpbWVvdXRzIGFyZVxuICAgICAqIG5lZWRlZCBmb3IgY2VydGFpbiBzY3JlZW4gcmVhZGVycyB0byByZS1hbm5vdW5jZSB0aGUgc2FtZSBtZXNzYWdlLlxuICAgICAqL1xuICAgIHRpbWVvdXQ6IHt0eXBlOiBOdW1iZXIsIHZhbHVlOiAxNTB9LFxuXG4gICAgX3RleHQ6IHt0eXBlOiBTdHJpbmcsIHZhbHVlOiAnJ30sXG4gIH0sXG5cbiAgLyoqIEBvdmVycmlkZSAqL1xuICBjcmVhdGVkOiBmdW5jdGlvbigpIHtcbiAgICBpZiAoIUlyb25BMTF5QW5ub3VuY2VyLmluc3RhbmNlKSB7XG4gICAgICBJcm9uQTExeUFubm91bmNlci5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaXJvbi1hbm5vdW5jZScsIHRoaXMuX29uSXJvbkFubm91bmNlLmJpbmQodGhpcykpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBDYXVzZSBhIHRleHQgc3RyaW5nIHRvIGJlIGFubm91bmNlZCBieSBzY3JlZW4gcmVhZGVycy5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQgVGhlIHRleHQgdGhhdCBzaG91bGQgYmUgYW5ub3VuY2VkLlxuICAgKi9cbiAgYW5ub3VuY2U6IGZ1bmN0aW9uKHRleHQpIHtcbiAgICB0aGlzLl90ZXh0ID0gJyc7XG4gICAgdGhpcy5hc3luYyhmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuX3RleHQgPSB0ZXh0O1xuICAgIH0sIHRoaXMudGltZW91dCk7XG4gIH0sXG5cbiAgX29uSXJvbkFubm91bmNlOiBmdW5jdGlvbihldmVudCkge1xuICAgIGlmIChldmVudC5kZXRhaWwgJiYgZXZlbnQuZGV0YWlsLnRleHQpIHtcbiAgICAgIHRoaXMuYW5ub3VuY2UoZXZlbnQuZGV0YWlsLnRleHQpO1xuICAgIH1cbiAgfVxufSk7XG5cbklyb25BMTF5QW5ub3VuY2VyLmluc3RhbmNlID0gbnVsbDtcblxuSXJvbkExMXlBbm5vdW5jZXIucmVxdWVzdEF2YWlsYWJpbGl0eSA9IGZ1bmN0aW9uKCkge1xuICBpZiAoIUlyb25BMTF5QW5ub3VuY2VyLmluc3RhbmNlKSB7XG4gICAgSXJvbkExMXlBbm5vdW5jZXIuaW5zdGFuY2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpcm9uLWExMXktYW5ub3VuY2VyJyk7XG4gIH1cblxuICBpZiAoZG9jdW1lbnQuYm9keSkge1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoSXJvbkExMXlBbm5vdW5jZXIuaW5zdGFuY2UpO1xuICB9IGVsc2Uge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbigpIHtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoSXJvbkExMXlBbm5vdW5jZXIuaW5zdGFuY2UpO1xuICAgIH0pO1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0FBVUE7QUFFQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdDQTtBQUNBO0FBQ0E7QUFXQTtBQUVBO0FBRUE7Ozs7O0FBS0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBOzs7O0FBSUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQWZBO0FBQ0E7QUFpQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTFEQTtBQTZEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js\n");

/***/ }),

/***/ "./node_modules/@polymer/iron-resizable-behavior/iron-resizable-behavior.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@polymer/iron-resizable-behavior/iron-resizable-behavior.js ***!
  \**********************************************************************************/
/*! exports provided: IronResizableBehavior */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IronResizableBehavior\", function() { return IronResizableBehavior; });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer.dom.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer.dom.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_settings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/polymer/lib/utils/settings.js */ \"./node_modules/@polymer/polymer/lib/utils/settings.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n // Contains all connected resizables that do not have a parent.\n\nvar ORPHANS = new Set();\n/**\n * `IronResizableBehavior` is a behavior that can be used in Polymer elements to\n * coordinate the flow of resize events between \"resizers\" (elements that\n *control the size or hidden state of their children) and \"resizables\" (elements\n *that need to be notified when they are resized or un-hidden by their parents\n *in order to take action on their new measurements).\n *\n * Elements that perform measurement should add the `IronResizableBehavior`\n *behavior to their element definition and listen for the `iron-resize` event on\n *themselves. This event will be fired when they become showing after having\n *been hidden, when they are resized explicitly by another resizable, or when\n *the window has been resized.\n *\n * Note, the `iron-resize` event is non-bubbling.\n *\n * @polymerBehavior\n * @demo demo/index.html\n **/\n\nvar IronResizableBehavior = {\n  properties: {\n    /**\n     * The closest ancestor element that implements `IronResizableBehavior`.\n     */\n    _parentResizable: {\n      type: Object,\n      observer: '_parentResizableChanged'\n    },\n\n    /**\n     * True if this element is currently notifying its descendant elements of\n     * resize.\n     */\n    _notifyingDescendant: {\n      type: Boolean,\n      value: false\n    }\n  },\n  listeners: {\n    'iron-request-resize-notifications': '_onIronRequestResizeNotifications'\n  },\n  created: function created() {\n    // We don't really need property effects on these, and also we want them\n    // to be created before the `_parentResizable` observer fires:\n    this._interestedResizables = [];\n    this._boundNotifyResize = this.notifyResize.bind(this);\n    this._boundOnDescendantIronResize = this._onDescendantIronResize.bind(this);\n  },\n  attached: function attached() {\n    this._requestResizeNotifications();\n  },\n  detached: function detached() {\n    if (this._parentResizable) {\n      this._parentResizable.stopResizeNotificationsFor(this);\n    } else {\n      ORPHANS[\"delete\"](this);\n      window.removeEventListener('resize', this._boundNotifyResize);\n    }\n\n    this._parentResizable = null;\n  },\n\n  /**\n   * Can be called to manually notify a resizable and its descendant\n   * resizables of a resize change.\n   */\n  notifyResize: function notifyResize() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    this._interestedResizables.forEach(function (resizable) {\n      if (this.resizerShouldNotify(resizable)) {\n        this._notifyDescendant(resizable);\n      }\n    }, this);\n\n    this._fireResize();\n  },\n\n  /**\n   * Used to assign the closest resizable ancestor to this resizable\n   * if the ancestor detects a request for notifications.\n   */\n  assignParentResizable: function assignParentResizable(parentResizable) {\n    if (this._parentResizable) {\n      this._parentResizable.stopResizeNotificationsFor(this);\n    }\n\n    this._parentResizable = parentResizable;\n\n    if (parentResizable && parentResizable._interestedResizables.indexOf(this) === -1) {\n      parentResizable._interestedResizables.push(this);\n\n      parentResizable._subscribeIronResize(this);\n    }\n  },\n\n  /**\n   * Used to remove a resizable descendant from the list of descendants\n   * that should be notified of a resize change.\n   */\n  stopResizeNotificationsFor: function stopResizeNotificationsFor(target) {\n    var index = this._interestedResizables.indexOf(target);\n\n    if (index > -1) {\n      this._interestedResizables.splice(index, 1);\n\n      this._unsubscribeIronResize(target);\n    }\n  },\n\n  /**\n   * Subscribe this element to listen to iron-resize events on the given target.\n   *\n   * Preferred over target.listen because the property renamer does not\n   * understand to rename when the target is not specifically \"this\"\n   *\n   * @param {!HTMLElement} target Element to listen to for iron-resize events.\n   */\n  _subscribeIronResize: function _subscribeIronResize(target) {\n    target.addEventListener('iron-resize', this._boundOnDescendantIronResize);\n  },\n\n  /**\n   * Unsubscribe this element from listening to to iron-resize events on the\n   * given target.\n   *\n   * Preferred over target.unlisten because the property renamer does not\n   * understand to rename when the target is not specifically \"this\"\n   *\n   * @param {!HTMLElement} target Element to listen to for iron-resize events.\n   */\n  _unsubscribeIronResize: function _unsubscribeIronResize(target) {\n    target.removeEventListener('iron-resize', this._boundOnDescendantIronResize);\n  },\n\n  /**\n   * This method can be overridden to filter nested elements that should or\n   * should not be notified by the current element. Return true if an element\n   * should be notified, or false if it should not be notified.\n   *\n   * @param {HTMLElement} element A candidate descendant element that\n   * implements `IronResizableBehavior`.\n   * @return {boolean} True if the `element` should be notified of resize.\n   */\n  resizerShouldNotify: function resizerShouldNotify(element) {\n    return true;\n  },\n  _onDescendantIronResize: function _onDescendantIronResize(event) {\n    if (this._notifyingDescendant) {\n      event.stopPropagation();\n      return;\n    } // no need to use this during shadow dom because of event retargeting\n\n\n    if (!_polymer_polymer_lib_utils_settings_js__WEBPACK_IMPORTED_MODULE_2__[\"useShadow\"]) {\n      this._fireResize();\n    }\n  },\n  _fireResize: function _fireResize() {\n    this.fire('iron-resize', null, {\n      node: this,\n      bubbles: false\n    });\n  },\n  _onIronRequestResizeNotifications: function _onIronRequestResizeNotifications(event) {\n    var target =\n    /** @type {!EventTarget} */\n    Object(_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_1__[\"dom\"])(event).rootTarget;\n\n    if (target === this) {\n      return;\n    }\n\n    target.assignParentResizable(this);\n\n    this._notifyDescendant(target);\n\n    event.stopPropagation();\n  },\n  _parentResizableChanged: function _parentResizableChanged(parentResizable) {\n    if (parentResizable) {\n      window.removeEventListener('resize', this._boundNotifyResize);\n    }\n  },\n  _notifyDescendant: function _notifyDescendant(descendant) {\n    // NOTE(cdata): In IE10, attached is fired on children first, so it's\n    // important not to notify them if the parent is not attached yet (or\n    // else they will get redundantly notified when the parent attaches).\n    if (!this.isAttached) {\n      return;\n    }\n\n    this._notifyingDescendant = true;\n    descendant.notifyResize();\n    this._notifyingDescendant = false;\n  },\n  _requestResizeNotifications: function _requestResizeNotifications() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    if (document.readyState === 'loading') {\n      var _requestResizeNotifications = this._requestResizeNotifications.bind(this);\n\n      document.addEventListener('readystatechange', function readystatechanged() {\n        document.removeEventListener('readystatechange', readystatechanged);\n\n        _requestResizeNotifications();\n      });\n    } else {\n      this._findParent();\n\n      if (!this._parentResizable) {\n        // If this resizable is an orphan, tell other orphans to try to find\n        // their parent again, in case it's this resizable.\n        ORPHANS.forEach(function (orphan) {\n          if (orphan !== this) {\n            orphan._findParent();\n          }\n        }, this);\n        window.addEventListener('resize', this._boundNotifyResize);\n        this.notifyResize();\n      } else {\n        // If this resizable has a parent, tell other child resizables of\n        // that parent to try finding their parent again, in case it's this\n        // resizable.\n        this._parentResizable._interestedResizables.forEach(function (resizable) {\n          if (resizable !== this) {\n            resizable._findParent();\n          }\n        }, this);\n      }\n    }\n  },\n  _findParent: function _findParent() {\n    this.assignParentResizable(null);\n    this.fire('iron-request-resize-notifications', null, {\n      node: this,\n      bubbles: true,\n      cancelable: true\n    });\n\n    if (!this._parentResizable) {\n      ORPHANS.add(this);\n    } else {\n      ORPHANS[\"delete\"](this);\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/iron-resizable-behavior/iron-resizable-behavior.js\n");

/***/ }),

/***/ "./node_modules/@polymer/paper-toast/paper-toast.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polymer/paper-toast/paper-toast.js ***!
  \**********************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polymer_iron_a11y_announcer_iron_a11y_announcer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/iron-a11y-announcer/iron-a11y-announcer.js */ \"./node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js\");\n/* harmony import */ var _polymer_iron_overlay_behavior_iron_overlay_behavior_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/iron-overlay-behavior/iron-overlay-behavior.js */ \"./node_modules/@polymer/iron-overlay-behavior/iron-overlay-behavior.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    <style>\\n      :host {\\n        display: block;\\n        position: fixed;\\n        background-color: var(--paper-toast-background-color, #323232);\\n        color: var(--paper-toast-color, #f1f1f1);\\n        min-height: 48px;\\n        min-width: 288px;\\n        padding: 16px 24px;\\n        box-sizing: border-box;\\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\\n        border-radius: 2px;\\n        margin: 12px;\\n        font-size: 14px;\\n        cursor: default;\\n        -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;\\n        transition: transform 0.3s, opacity 0.3s;\\n        opacity: 0;\\n        -webkit-transform: translateY(100px);\\n        transform: translateY(100px);\\n        @apply --paper-font-common-base;\\n      }\\n\\n      :host(.capsule) {\\n        border-radius: 24px;\\n      }\\n\\n      :host(.fit-bottom) {\\n        width: 100%;\\n        min-width: 0;\\n        border-radius: 0;\\n        margin: 0;\\n      }\\n\\n      :host(.paper-toast-open) {\\n        opacity: 1;\\n        -webkit-transform: translateY(0px);\\n        transform: translateY(0px);\\n      }\\n    </style>\\n\\n    <span id=\\\"label\\\">{{text}}</span>\\n    <slot></slot>\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n // Keeps track of the toast currently opened.\n\nvar currentToast = null;\n/**\nMaterial design: [Snackbars &\ntoasts](https://www.google.com/design/spec/components/snackbars-toasts.html)\n\n`paper-toast` provides a subtle notification toast. Only one `paper-toast` will\nbe visible on screen.\n\nUse `opened` to show the toast:\n\nExample:\n\n    <paper-toast text=\"Hello world!\" opened></paper-toast>\n\nAlso `open()` or `show()` can be used to show the toast:\n\nExample:\n\n    <paper-button on-click=\"openToast\">Open Toast</paper-button>\n    <paper-toast id=\"toast\" text=\"Hello world!\"></paper-toast>\n\n    ...\n\n    openToast: function() {\n      this.$.toast.open();\n    }\n\nSet `duration` to 0, a negative number or Infinity to persist the toast on\nscreen:\n\nExample:\n\n    <paper-toast text=\"Terms and conditions\" opened duration=\"0\">\n      <a href=\"#\">Show more</a>\n    </paper-toast>\n\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-toast-background-color` | The paper-toast background-color | `#323232`\n`--paper-toast-color` | The paper-toast color | `#f1f1f1`\n\nThis element applies the mixin `--paper-font-common-base` but does not import\n`paper-styles/typography.html`. In order to apply the `Roboto` font to this\nelement, make sure you've imported `paper-styles/typography.html`.\n\n@group Paper Elements\n@element paper-toast\n@demo demo/index.html\n@hero hero.svg\n*/\n\nObject(_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__[\"Polymer\"])({\n  _template: Object(_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_3__[\"html\"])(_templateObject()),\n  is: 'paper-toast',\n  behaviors: [_polymer_iron_overlay_behavior_iron_overlay_behavior_js__WEBPACK_IMPORTED_MODULE_1__[\"IronOverlayBehavior\"]],\n  properties: {\n    /**\n     * The element to fit `this` into.\n     * Overridden from `Polymer.IronFitBehavior`.\n     */\n    fitInto: {\n      type: Object,\n      value: window,\n      observer: '_onFitIntoChanged'\n    },\n\n    /**\n     * The orientation against which to align the dropdown content\n     * horizontally relative to `positionTarget`.\n     * Overridden from `Polymer.IronFitBehavior`.\n     */\n    horizontalAlign: {\n      type: String,\n      value: 'left'\n    },\n\n    /**\n     * The orientation against which to align the dropdown content\n     * vertically relative to `positionTarget`.\n     * Overridden from `Polymer.IronFitBehavior`.\n     */\n    verticalAlign: {\n      type: String,\n      value: 'bottom'\n    },\n\n    /**\n     * The duration in milliseconds to show the toast.\n     * Set to `0`, a negative number, or `Infinity`, to disable the\n     * toast auto-closing.\n     */\n    duration: {\n      type: Number,\n      value: 3000\n    },\n\n    /**\n     * The text to display in the toast.\n     */\n    text: {\n      type: String,\n      value: ''\n    },\n\n    /**\n     * Overridden from `IronOverlayBehavior`.\n     * Set to false to enable closing of the toast by clicking outside it.\n     */\n    noCancelOnOutsideClick: {\n      type: Boolean,\n      value: true\n    },\n\n    /**\n     * Overridden from `IronOverlayBehavior`.\n     * Set to true to disable auto-focusing the toast or child nodes with\n     * the `autofocus` attribute` when the overlay is opened.\n     */\n    noAutoFocus: {\n      type: Boolean,\n      value: true\n    }\n  },\n  listeners: {\n    'transitionend': '__onTransitionEnd'\n  },\n\n  /**\n   * Read-only. Deprecated. Use `opened` from `IronOverlayBehavior`.\n   * @property visible\n   * @deprecated\n   */\n  get visible() {\n    _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_4__[\"Base\"]._warn('`visible` is deprecated, use `opened` instead');\n\n    return this.opened;\n  },\n\n  /**\n   * Read-only. Can auto-close if duration is a positive finite number.\n   * @property _canAutoClose\n   */\n  get _canAutoClose() {\n    return this.duration > 0 && this.duration !== Infinity;\n  },\n\n  created: function created() {\n    this._autoClose = null;\n    _polymer_iron_a11y_announcer_iron_a11y_announcer_js__WEBPACK_IMPORTED_MODULE_0__[\"IronA11yAnnouncer\"].requestAvailability();\n  },\n\n  /**\n   * Show the toast. Without arguments, this is the same as `open()` from\n   * `IronOverlayBehavior`.\n   * @param {(Object|string)=} properties Properties to be set before opening the toast.\n   * e.g. `toast.show('hello')` or `toast.show({text: 'hello', duration: 3000})`\n   */\n  show: function show(properties) {\n    if (typeof properties == 'string') {\n      properties = {\n        text: properties\n      };\n    }\n\n    for (var property in properties) {\n      if (property.indexOf('_') === 0) {\n        _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_4__[\"Base\"]._warn('The property \"' + property + '\" is private and was not set.');\n      } else if (property in this) {\n        this[property] = properties[property];\n      } else {\n        _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_4__[\"Base\"]._warn('The property \"' + property + '\" is not valid.');\n      }\n    }\n\n    this.open();\n  },\n\n  /**\n   * Hide the toast. Same as `close()` from `IronOverlayBehavior`.\n   */\n  hide: function hide() {\n    this.close();\n  },\n\n  /**\n   * Called on transitions of the toast, indicating a finished animation\n   * @private\n   */\n  __onTransitionEnd: function __onTransitionEnd(e) {\n    // there are different transitions that are happening when opening and\n    // closing the toast. The last one so far is for `opacity`.\n    // This marks the end of the transition, so we check for this to determine\n    // if this is the correct event.\n    if (e && e.target === this && e.propertyName === 'opacity') {\n      if (this.opened) {\n        this._finishRenderOpened();\n      } else {\n        this._finishRenderClosed();\n      }\n    }\n  },\n\n  /**\n   * Overridden from `IronOverlayBehavior`.\n   * Called when the value of `opened` changes.\n   */\n  _openedChanged: function _openedChanged() {\n    if (this._autoClose !== null) {\n      this.cancelAsync(this._autoClose);\n      this._autoClose = null;\n    }\n\n    if (this.opened) {\n      if (currentToast && currentToast !== this) {\n        currentToast.close();\n      }\n\n      currentToast = this;\n      this.fire('iron-announce', {\n        text: this.text\n      });\n\n      if (this._canAutoClose) {\n        this._autoClose = this.async(this.close, this.duration);\n      }\n    } else if (currentToast === this) {\n      currentToast = null;\n    }\n\n    _polymer_iron_overlay_behavior_iron_overlay_behavior_js__WEBPACK_IMPORTED_MODULE_1__[\"IronOverlayBehaviorImpl\"]._openedChanged.apply(this, arguments);\n  },\n\n  /**\n   * Overridden from `IronOverlayBehavior`.\n   */\n  _renderOpened: function _renderOpened() {\n    this.classList.add('paper-toast-open');\n  },\n\n  /**\n   * Overridden from `IronOverlayBehavior`.\n   */\n  _renderClosed: function _renderClosed() {\n    this.classList.remove('paper-toast-open');\n  },\n\n  /**\n   * @private\n   */\n  _onFitIntoChanged: function _onFitIntoChanged(fitInto) {\n    this.positionTarget = fitInto;\n  }\n  /**\n   * Fired when `paper-toast` is opened.\n   *\n   * @event 'iron-announce'\n   * @param {{text: string}} detail Contains text that will be announced.\n   */\n\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-toast/paper-toast.js\n");

/***/ })

}]);