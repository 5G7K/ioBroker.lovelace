{"version":3,"sources":["webpack:///./src/panels/config/cloud/ha-config-cloud-register.js"],"names":["HaConfigCloudRegister","EventsMixin","PolymerElement","template","html","properties","hass","Object","isWide","Boolean","email","type","String","notify","_requestInProgress","value","_password","_error","observers","_inputChanged","$","invalid","password","_keyDown","ev","keyCode","_handleRegister","preventDefault","includes","focus","length","callApi","then","_verificationEmailSent","err","setProperties","body","message","_handleResendVerifyEmail","fire","flashMessage","customElements","define"],"mappings":"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","file":"3.chunk.js","sourcesContent":["import \"@polymer/paper-input/paper-input\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/buttons/ha-progress-button\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../resources/ha-style\";\nimport \"../ha-config-section\";\nimport { EventsMixin } from \"../../../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaConfigCloudRegister extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        direction: ltr;\n      }\n\n      [slot=introduction] {\n        margin: -1em 0;\n      }\n      [slot=introduction] a {\n        color: var(--primary-color);\n      }\n      a {\n        color: var(--primary-color);\n      }\n      paper-item {\n        cursor: pointer;\n      }\n      h1 {\n        @apply --paper-font-headline;\n        margin: 0;\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .card-actions {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <hass-subpage header=\"Register Account\">\n      <div class=\"content\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">Start your free trial</span>\n          <div slot=\"introduction\">\n            <p>\n              Create an account to start your free one month trial with Home Assistant Cloud. No payment information necessary.\n            </p>\n            <p>\n              The trial will give you access to all the benefits of Home Assistant Cloud, including:\n            </p>\n            <ul>\n              <li>Control of Home Assistant away from home</li>\n              <li>Integration with Google Assistant</li>\n              <li>Integration with Amazon Alexa</li>\n              <li>Easy integration with webhook-based apps like OwnTracks</li>\n            </ul>\n            <p>\n              This service is run by our partner <a href='https://www.nabucasa.com' target='_blank'>Nabu&nbsp;Casa,&nbsp;Inc</a>, a company founded by the founders of Home Assistant and Hass.io.\n            </p>\n\n            <p>\n              By registering an account you agree to the following terms and conditions.\n              </p><ul>\n                <li><a href=\"https://home-assistant.io/tos/\" target=\"_blank\">Terms and Conditions</a></li>\n                <li><a href=\"https://home-assistant.io/privacy/\" target=\"_blank\">Privacy Policy</a></li>\n              </ul>\n            </p>\n          </div>\n\n          <ha-card header=\"Create Account\">\n            <div class=\"card-content\">\n              <div class=\"header\">\n                <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n              </div>\n              <paper-input autofocus=\"\" id=\"email\" label=\"Email address\" type=\"email\" value=\"{{email}}\" on-keydown=\"_keyDown\" error-message=\"Invalid email\"></paper-input>\n              <paper-input id=\"password\" label=\"Password\" value=\"{{_password}}\" type=\"password\" on-keydown=\"_keyDown\" error-message=\"Your password needs to be at least 8 characters\"></paper-input>\n            </div>\n            <div class=\"card-actions\">\n              <ha-progress-button on-click=\"_handleRegister\" progress=\"[[_requestInProgress]]\">Start trial</ha-progress-button>\n              <button class=\"link\" hidden=\"[[_requestInProgress]]\" on-click=\"_handleResendVerifyEmail\">Resend confirmation email</button>\n            </div>\n          </ha-card>\n        </ha-config-section>\n      </div>\n    </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      email: {\n        type: String,\n        notify: true,\n      },\n\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      _password: {\n        type: String,\n        value: \"\",\n      },\n      _error: {\n        type: String,\n        value: \"\",\n      },\n    };\n  }\n\n  static get observers() {\n    return [\"_inputChanged(email, _password)\"];\n  }\n\n  _inputChanged() {\n    this._error = \"\";\n    this.$.email.invalid = false;\n    this.$.password.invalid = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleRegister();\n      ev.preventDefault();\n    }\n  }\n\n  _handleRegister() {\n    let invalid = false;\n\n    if (!this.email || !this.email.includes(\"@\")) {\n      this.$.email.invalid = true;\n      this.$.email.focus();\n      invalid = true;\n    }\n\n    if (this._password.length < 8) {\n      this.$.password.invalid = true;\n\n      if (!invalid) {\n        invalid = true;\n        this.$.password.focus();\n      }\n    }\n\n    if (invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass\n      .callApi(\"post\", \"cloud/register\", {\n        email: this.email,\n        password: this._password,\n      })\n      .then(\n        () => this._verificationEmailSent(),\n        (err) => {\n          // Do this before setProperties because changing it clears errors.\n          this._password = \"\";\n\n          this.setProperties({\n            _requestInProgress: false,\n            _error:\n              err && err.body && err.body.message\n                ? err.body.message\n                : \"Unknown error\",\n          });\n        }\n      );\n  }\n\n  _handleResendVerifyEmail() {\n    if (!this.email) {\n      this.$.email.invalid = true;\n      return;\n    }\n\n    this.hass\n      .callApi(\"post\", \"cloud/resend_confirm\", {\n        email: this.email,\n      })\n      .then(\n        () => this._verificationEmailSent(),\n        (err) =>\n          this.setProperties({\n            _error:\n              err && err.body && err.body.message\n                ? err.body.message\n                : \"Unknown error\",\n          })\n      );\n  }\n\n  _verificationEmailSent() {\n    this.setProperties({\n      _requestInProgress: false,\n      _password: \"\",\n    });\n    this.fire(\"cloud-done\", {\n      flashMessage:\n        \"Account created! Check your email for instructions on how to activate your account.\",\n    });\n  }\n}\n\ncustomElements.define(\"ha-config-cloud-register\", HaConfigCloudRegister);\n"],"sourceRoot":""}