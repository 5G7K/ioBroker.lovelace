{"version":3,"sources":["webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/data/area_registry.ts","webpack:///./src/data/device_registry.ts","webpack:///./src/dialogs/config-flow/dialog-config-flow.ts","webpack:///./src/dialogs/config-flow/step-flow-abort.ts","webpack:///./src/dialogs/config-flow/step-flow-create-entry.ts","webpack:///./src/dialogs/config-flow/step-flow-external.ts","webpack:///./src/dialogs/config-flow/step-flow-form.ts","webpack:///./src/dialogs/config-flow/step-flow-loading.ts","webpack:///./src/dialogs/config-flow/step-flow-pick-handler.ts","webpack:///./src/dialogs/config-flow/styles.ts","webpack:///./src/mixins/events-mixin.js","webpack:///./src/polymer-types.ts"],"names":["HaIronFocusablesHelper","getTabbableNodes","node","result","needsSortByTabIndex","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","element","tabIndex","_normalizedTabIndex","needsSort","push","children","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","HaPaperDialog","mixinBehaviors","define","HaIconNext","HaIcon","connectedCallback","icon","window","getComputedStyle","direction","createAreaRegistryEntry","hass","values","callWS","type","updateAreaRegistryEntry","areaId","updates","area_id","deleteAreaRegistryEntry","fetchAreaRegistry","conn","sendMessagePromise","then","areas","sort","ent1","ent2","compare","name","subscribeAreaRegistryUpdates","store","subscribeEvents","debounce","setState","subscribeAreaRegistry","onChange","createCollection","updateDeviceRegistryEntry","deviceId","device_id","fetchDeviceRegistry","subscribeDeviceRegistryUpdates","devices","subscribeDeviceRegistry","instance","ConfigFlowDialog","customElement","property","params","_params","_instance","continueFlowId","_step","_handlers","undefined","_loading","updateComplete","_scheduleCenterDialog","getConfigFlowHandlers","handlerA","handlerB","caseInsensitiveCompare","localize","curInstance","step","fetchConfigFlow","_processStep","html","_openedChanged","_devices","_areas","changedProps","addEventListener","ev","stepPromise","detail","has","_fetchDevices","_fetchAreas","_dialog","setTimeout","center","querySelector","configEntryId","_unsubDevices","connection","filter","device","config_entries","includes","_unsubAreas","Promise","_flowDone","flowFinished","Boolean","deleteConfigFlow","flow_id","dialogClosedCallback","value","haStyleDialog","css","LitElement","StepFlowAbort","description","localizeKey","handler","reason","description_placeholders","fireEvent","configFlowContentStyles","StepFlowCreateEntry","title","map","model","manufacturer","id","_handleAreaChanged","area","_addArea","prompt","err","alert","dropdown","currentTarget","selectedItem","message","StepFlowExternal","step_id","url","data","open","StepFlowForm","allRequiredInfoFilledIn","_stepData","data_schema","find","field","optional","every","_errorMsg","_stepDataProcessed","_stepDataChanged","errors","_labelCallback","_errorCallback","_submitStep","keyCode","forEach","default","flowId","stepData","toSendData","Object","keys","key","isEmpty","handleConfigFlowStep","body","applyPolymerEvent","schema","error","StepFlowLoading","StepFlowPickHandler","handlers","_handlerPicked","createConfigFlow","EventsMixin","dedupingMixin","superClass","fire","options","curValue","path","propName","split"],"mappings":"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","file":"dialog-config-flow.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    this.icon =\n      window.getComputedStyle(this).direction === \"ltr\"\n        ? \"hass:chevron-right\"\n        : \"hass:chevron-left\";\n\n    // calling super after setting icon to have it consistently show the icon (otherwise not always shown)\n    super.connectedCallback();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import { createCollection, Connection } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\nimport { compare } from \"../common/string/compare\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport interface AreaRegistryEntry {\n  area_id: string;\n  name: string;\n}\n\nexport interface AreaRegistryEntryMutableParams {\n  name: string;\n}\n\nexport const createAreaRegistryEntry = (\n  hass: HomeAssistant,\n  values: AreaRegistryEntryMutableParams\n) =>\n  hass.callWS<AreaRegistryEntry>({\n    type: \"config/area_registry/create\",\n    ...values,\n  });\n\nexport const updateAreaRegistryEntry = (\n  hass: HomeAssistant,\n  areaId: string,\n  updates: Partial<AreaRegistryEntryMutableParams>\n) =>\n  hass.callWS<AreaRegistryEntry>({\n    type: \"config/area_registry/update\",\n    area_id: areaId,\n    ...updates,\n  });\n\nexport const deleteAreaRegistryEntry = (hass: HomeAssistant, areaId: string) =>\n  hass.callWS({\n    type: \"config/area_registry/delete\",\n    area_id: areaId,\n  });\n\nconst fetchAreaRegistry = (conn) =>\n  conn\n    .sendMessagePromise({\n      type: \"config/area_registry/list\",\n    })\n    .then((areas) => areas.sort((ent1, ent2) => compare(ent1.name, ent2.name)));\n\nconst subscribeAreaRegistryUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchAreaRegistry(conn).then((areas) => store.setState(areas, true)),\n      500,\n      true\n    ),\n    \"area_registry_updated\"\n  );\n\nexport const subscribeAreaRegistry = (\n  conn: Connection,\n  onChange: (areas: AreaRegistryEntry[]) => void\n) =>\n  createCollection<AreaRegistryEntry[]>(\n    \"_areaRegistry\",\n    fetchAreaRegistry,\n    subscribeAreaRegistryUpdates,\n    conn,\n    onChange\n  );\n","import { HomeAssistant } from \"../types\";\nimport { createCollection, Connection } from \"home-assistant-js-websocket\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport interface DeviceRegistryEntry {\n  id: string;\n  config_entries: string[];\n  connections: Array<[string, string]>;\n  manufacturer: string;\n  model?: string;\n  name?: string;\n  sw_version?: string;\n  hub_device_id?: string;\n  area_id?: string;\n  name_by_user?: string;\n}\n\nexport interface DeviceRegistryEntryMutableParams {\n  area_id?: string | null;\n  name_by_user?: string | null;\n}\n\nexport const updateDeviceRegistryEntry = (\n  hass: HomeAssistant,\n  deviceId: string,\n  updates: Partial<DeviceRegistryEntryMutableParams>\n) =>\n  hass.callWS<DeviceRegistryEntry>({\n    type: \"config/device_registry/update\",\n    device_id: deviceId,\n    ...updates,\n  });\n\nconst fetchDeviceRegistry = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config/device_registry/list\",\n  });\n\nconst subscribeDeviceRegistryUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchDeviceRegistry(conn).then((devices) =>\n          store.setState(devices, true)\n        ),\n      500,\n      true\n    ),\n    \"device_registry_updated\"\n  );\n\nexport const subscribeDeviceRegistry = (\n  conn: Connection,\n  onChange: (devices: DeviceRegistryEntry[]) => void\n) =>\n  createCollection<DeviceRegistryEntry[]>(\n    \"_dr\",\n    fetchDeviceRegistry,\n    subscribeDeviceRegistryUpdates,\n    conn,\n    onChange\n  );\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  CSSResultArray,\n  css,\n  customElement,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\n\nimport \"../../components/ha-form\";\nimport \"../../components/ha-markdown\";\nimport \"../../resources/ha-style\";\nimport \"../../components/dialog/ha-paper-dialog\";\n// Not duplicate, is for typing\n// tslint:disable-next-line\nimport { HaPaperDialog } from \"../../components/dialog/ha-paper-dialog\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport {\n  fetchConfigFlow,\n  ConfigFlowStep,\n  deleteConfigFlow,\n  getConfigFlowHandlers,\n} from \"../../data/config_entries\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { HaConfigFlowParams } from \"./show-dialog-config-flow\";\n\nimport \"./step-flow-pick-handler\";\nimport \"./step-flow-loading\";\nimport \"./step-flow-form\";\nimport \"./step-flow-external\";\nimport \"./step-flow-abort\";\nimport \"./step-flow-create-entry\";\nimport {\n  DeviceRegistryEntry,\n  subscribeDeviceRegistry,\n} from \"../../data/device_registry\";\nimport {\n  AreaRegistryEntry,\n  subscribeAreaRegistry,\n} from \"../../data/area_registry\";\nimport { HomeAssistant } from \"../../types\";\nimport { caseInsensitiveCompare } from \"../../common/string/compare\";\n\nlet instance = 0;\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"flow-update\": {\n      step?: ConfigFlowStep;\n      stepPromise?: Promise<ConfigFlowStep>;\n    };\n  }\n}\n\n@customElement(\"dialog-config-flow\")\nclass ConfigFlowDialog extends LitElement {\n  public hass!: HomeAssistant;\n  @property() private _params?: HaConfigFlowParams;\n  @property() private _loading = true;\n  private _instance = instance;\n  @property() private _step:\n    | ConfigFlowStep\n    | undefined\n    // Null means we need to pick a config flow\n    | null;\n  @property() private _devices?: DeviceRegistryEntry[];\n  @property() private _areas?: AreaRegistryEntry[];\n  @property() private _handlers?: string[];\n  private _unsubAreas?: UnsubscribeFunc;\n  private _unsubDevices?: UnsubscribeFunc;\n\n  public async showDialog(params: HaConfigFlowParams): Promise<void> {\n    this._params = params;\n    this._instance = instance++;\n\n    // Create a new config flow. Show picker\n    if (!params.continueFlowId) {\n      this._step = null;\n\n      // We only load the handlers once\n      if (this._handlers === undefined) {\n        this._loading = true;\n        this.updateComplete.then(() => this._scheduleCenterDialog());\n        try {\n          this._handlers = (await getConfigFlowHandlers(this.hass)).sort(\n            (handlerA, handlerB) =>\n              caseInsensitiveCompare(\n                this.hass.localize(`component.${handlerA}.config.title`),\n                this.hass.localize(`component.${handlerB}.config.title`)\n              )\n          );\n        } finally {\n          this._loading = false;\n        }\n      }\n      await this.updateComplete;\n      this._scheduleCenterDialog();\n      return;\n    }\n\n    this._loading = true;\n    const curInstance = this._instance;\n    const step = await fetchConfigFlow(this.hass, params.continueFlowId);\n\n    // Happens if second showDialog called\n    if (curInstance !== this._instance) {\n      return;\n    }\n\n    this._processStep(step);\n    this._loading = false;\n    // When the flow changes, center the dialog.\n    // Don't do it on each step or else the dialog keeps bouncing.\n    this._scheduleCenterDialog();\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=${this._openedChanged}\n      >\n        ${this._loading || (this._step === null && this._handlers === undefined)\n          ? html`\n              <step-flow-loading></step-flow-loading>\n            `\n          : this._step === undefined\n          ? // When we are going to next step, we render 1 round of empty\n            // to reset the element.\n            \"\"\n          : this._step === null\n          ? // Show handler picker\n            html`\n              <step-flow-pick-handler\n                .hass=${this.hass}\n                .handlers=${this._handlers}\n              ></step-flow-pick-handler>\n            `\n          : this._step.type === \"form\"\n          ? html`\n              <step-flow-form\n                .step=${this._step}\n                .hass=${this.hass}\n              ></step-flow-form>\n            `\n          : this._step.type === \"external\"\n          ? html`\n              <step-flow-external\n                .step=${this._step}\n                .hass=${this.hass}\n              ></step-flow-external>\n            `\n          : this._step.type === \"abort\"\n          ? html`\n              <step-flow-abort\n                .step=${this._step}\n                .hass=${this.hass}\n              ></step-flow-abort>\n            `\n          : this._devices === undefined || this._areas === undefined\n          ? // When it's a create entry result, we will fetch device & area registry\n            html`\n              <step-flow-loading></step-flow-loading>\n            `\n          : html`\n              <step-flow-create-entry\n                .step=${this._step}\n                .hass=${this.hass}\n                .devices=${this._devices}\n                .areas=${this._areas}\n              ></step-flow-create-entry>\n            `}\n      </ha-paper-dialog>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"flow-update\", (ev) => {\n      const { step, stepPromise } = (ev as any).detail;\n      this._processStep(step || stepPromise);\n    });\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (\n      changedProps.has(\"_step\") &&\n      this._step &&\n      this._step.type === \"create_entry\"\n    ) {\n      this._fetchDevices(this._step.result);\n      this._fetchAreas();\n    }\n\n    if (changedProps.has(\"_devices\") && this._dialog) {\n      this._scheduleCenterDialog();\n    }\n  }\n\n  private _scheduleCenterDialog() {\n    setTimeout(() => this._dialog.center(), 0);\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private async _fetchDevices(configEntryId) {\n    this._unsubDevices = subscribeDeviceRegistry(\n      this.hass.connection,\n      (devices) => {\n        this._devices = devices.filter((device) =>\n          device.config_entries.includes(configEntryId)\n        );\n      }\n    );\n  }\n\n  private async _fetchAreas() {\n    this._unsubAreas = subscribeAreaRegistry(this.hass.connection, (areas) => {\n      this._areas = areas;\n    });\n  }\n\n  private async _processStep(\n    step: ConfigFlowStep | undefined | Promise<ConfigFlowStep>\n  ): Promise<void> {\n    if (step instanceof Promise) {\n      this._loading = true;\n      try {\n        this._step = await step;\n      } finally {\n        this._loading = false;\n      }\n      return;\n    }\n\n    if (step === undefined) {\n      this._flowDone();\n      return;\n    }\n    this._step = undefined;\n    await this.updateComplete;\n    this._step = step;\n  }\n\n  private _flowDone(): void {\n    if (!this._params) {\n      return;\n    }\n    const flowFinished = Boolean(\n      this._step && [\"create_entry\", \"abort\"].includes(this._step.type)\n    );\n\n    // If we created this flow, delete it now.\n    if (this._step && !flowFinished && !this._params.continueFlowId) {\n      deleteConfigFlow(this.hass, this._step.flow_id);\n    }\n\n    this._params.dialogClosedCallback({\n      flowFinished,\n    });\n\n    this._step = undefined;\n    this._params = undefined;\n    this._devices = undefined;\n    if (this._unsubAreas) {\n      this._unsubAreas();\n      this._unsubAreas = undefined;\n    }\n    if (this._unsubDevices) {\n      this._unsubDevices();\n      this._unsubDevices = undefined;\n    }\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    // Closed dialog by clicking on the overlay\n    if (!ev.detail.value) {\n      if (this._step) {\n        this._flowDone();\n      } else if (this._step === null) {\n        // Flow aborted during picking flow\n        this._step = undefined;\n        this._params = undefined;\n      }\n    }\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyleDialog,\n      css`\n        ha-paper-dialog {\n          max-width: 500px;\n        }\n        ha-paper-dialog > * {\n          margin: 0;\n          display: block;\n          padding: 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-config-flow\": ConfigFlowDialog;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  customElement,\n  property,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { ConfigFlowStepAbort } from \"../../data/config_entries\";\nimport { HomeAssistant } from \"../../types\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { configFlowContentStyles } from \"./styles\";\n\n@customElement(\"step-flow-abort\")\nclass StepFlowAbort extends LitElement {\n  @property()\n  public hass!: HomeAssistant;\n\n  @property()\n  private step!: ConfigFlowStepAbort;\n\n  protected render(): TemplateResult | void {\n    const localize = this.hass.localize;\n    const step = this.step;\n\n    const description = localizeKey(\n      localize,\n      `component.${step.handler}.config.abort.${step.reason}`,\n      step.description_placeholders\n    );\n\n    return html`\n      <h2>Aborted</h2>\n      <div class=\"content\">\n        ${description\n          ? html`\n              <ha-markdown .content=${description} allow-svg></ha-markdown>\n            `\n          : \"\"}\n      </div>\n      <div class=\"buttons\">\n        <mwc-button @click=\"${this._flowDone}\">Close</mwc-button>\n      </div>\n    `;\n  }\n\n  private _flowDone(): void {\n    fireEvent(this, \"flow-update\", { step: undefined });\n  }\n\n  static get styles(): CSSResult {\n    return configFlowContentStyles;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-abort\": StepFlowAbort;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  customElement,\n  property,\n  CSSResultArray,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu-light\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport { ConfigFlowStepCreateEntry } from \"../../data/config_entries\";\nimport { HomeAssistant } from \"../../types\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { configFlowContentStyles } from \"./styles\";\nimport {\n  DeviceRegistryEntry,\n  updateDeviceRegistryEntry,\n} from \"../../data/device_registry\";\nimport {\n  AreaRegistryEntry,\n  createAreaRegistryEntry,\n} from \"../../data/area_registry\";\n\n@customElement(\"step-flow-create-entry\")\nclass StepFlowCreateEntry extends LitElement {\n  @property()\n  public hass!: HomeAssistant;\n\n  @property()\n  public step!: ConfigFlowStepCreateEntry;\n\n  @property()\n  public devices!: DeviceRegistryEntry[];\n\n  @property()\n  public areas!: AreaRegistryEntry[];\n\n  protected render(): TemplateResult | void {\n    const localize = this.hass.localize;\n    const step = this.step;\n\n    const description = localizeKey(\n      localize,\n      `component.${step.handler}.config.create_entry.${step.description ||\n        \"default\"}`,\n      step.description_placeholders\n    );\n\n    return html`\n      <h2>Success!</h2>\n      <div class=\"content\">\n        ${description\n          ? html`\n              <ha-markdown .content=${description} allow-svg></ha-markdown>\n            `\n          : \"\"}\n        <p>Created config for ${step.title}.</p>\n        ${this.devices.length === 0\n          ? \"\"\n          : html`\n              <p>We found the following devices:</p>\n              <div class=\"devices\">\n                ${this.devices.map(\n                  (device) =>\n                    html`\n                      <div class=\"device\">\n                        <b>${device.name}</b><br />\n                        ${device.model} (${device.manufacturer})\n\n                        <paper-dropdown-menu-light\n                          label=\"Area\"\n                          .device=${device.id}\n                          @selected-item-changed=${this._handleAreaChanged}\n                        >\n                          <paper-listbox slot=\"dropdown-content\" selected=\"0\">\n                            <paper-item>\n                              ${localize(\n                                \"ui.panel.config.integrations.config_entry.no_area\"\n                              )}\n                            </paper-item>\n                            ${this.areas.map(\n                              (area) => html`\n                                <paper-item .area=${area.area_id}>\n                                  ${area.name}\n                                </paper-item>\n                              `\n                            )}\n                          </paper-listbox>\n                        </paper-dropdown-menu-light>\n                      </div>\n                    `\n                )}\n              </div>\n            `}\n      </div>\n      <div class=\"buttons\">\n        ${this.devices.length > 0\n          ? html`\n              <mwc-button @click=\"${this._addArea}\">Add Area</mwc-button>\n            `\n          : \"\"}\n\n        <mwc-button @click=\"${this._flowDone}\">Finish</mwc-button>\n      </div>\n    `;\n  }\n\n  private _flowDone(): void {\n    fireEvent(this, \"flow-update\", { step: undefined });\n  }\n\n  private async _addArea() {\n    const name = prompt(\"Name of the new area?\");\n    if (!name) {\n      return;\n    }\n    try {\n      const area = await createAreaRegistryEntry(this.hass, {\n        name,\n      });\n      this.areas = [...this.areas, area];\n    } catch (err) {\n      alert(\"Failed to create area.\");\n    }\n  }\n\n  private async _handleAreaChanged(ev: Event) {\n    const dropdown = ev.currentTarget as any;\n    const device = dropdown.device;\n\n    // Item first becomes null, then new item.\n    if (!dropdown.selectedItem) {\n      return;\n    }\n\n    const area = dropdown.selectedItem.area;\n    try {\n      await updateDeviceRegistryEntry(this.hass, device, {\n        area_id: area,\n      });\n    } catch (err) {\n      alert(`Error saving area: ${err.message}`);\n      dropdown.value = null;\n    }\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      configFlowContentStyles,\n      css`\n        .devices {\n          display: flex;\n          flex-wrap: wrap;\n          margin: -4px;\n        }\n        .device {\n          border: 1px solid var(--divider-color);\n          padding: 5px;\n          border-radius: 4px;\n          margin: 4px;\n          display: inline-block;\n          width: 200px;\n        }\n        .buttons > *:last-child {\n          margin-left: auto;\n        }\n        paper-dropdown-menu-light {\n          cursor: pointer;\n        }\n        paper-item {\n          cursor: pointer;\n          white-space: nowrap;\n        }\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          .device {\n            width: auto;\n          }\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-create-entry\": StepFlowCreateEntry;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  customElement,\n  property,\n  CSSResultArray,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport {\n  ConfigFlowStepExternal,\n  DataEntryFlowProgressedEvent,\n  fetchConfigFlow,\n} from \"../../data/config_entries\";\nimport { HomeAssistant } from \"../../types\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { configFlowContentStyles } from \"./styles\";\n\n@customElement(\"step-flow-external\")\nclass StepFlowExternal extends LitElement {\n  @property()\n  public hass!: HomeAssistant;\n\n  @property()\n  private step!: ConfigFlowStepExternal;\n\n  protected render(): TemplateResult | void {\n    const localize = this.hass.localize;\n    const step = this.step;\n\n    const description = localizeKey(\n      localize,\n      `component.${step.handler}.config.${step.step_id}.description`,\n      step.description_placeholders\n    );\n\n    return html`\n      <h2>\n        ${localize(\n          `component.${step.handler}.config.step.${step.step_id}.title`\n        )}\n      </h2>\n      <div class=\"content\">\n        <p>\n          ${localize(\n            \"ui.panel.config.integrations.config_flow.external_step.description\"\n          )}\n        </p>\n        ${description\n          ? html`\n              <ha-markdown .content=${description} allow-svg></ha-markdown>\n            `\n          : \"\"}\n        <div class=\"open-button\">\n          <a href=${this.step.url} target=\"_blank\">\n            <mwc-button raised>\n              ${localize(\n                \"ui.panel.config.integrations.config_flow.external_step.open_site\"\n              )}\n            </mwc-button>\n          </a>\n        </div>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.hass.connection.subscribeEvents<DataEntryFlowProgressedEvent>(\n      async (ev) => {\n        if (ev.data.flow_id !== this.step.flow_id) {\n          return;\n        }\n\n        const step = await fetchConfigFlow(this.hass, this.step.flow_id);\n        fireEvent(this, \"flow-update\", { step });\n      },\n      \"data_entry_flow_progressed\"\n    );\n    window.open(this.step.url);\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      configFlowContentStyles,\n      css`\n        .open-button {\n          text-align: center;\n          padding: 24px 0;\n        }\n        .open-button a {\n          text-decoration: none;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-external\": StepFlowExternal;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  CSSResultArray,\n  css,\n  customElement,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport \"@polymer/paper-spinner/paper-spinner\";\n\nimport \"../../components/ha-form\";\nimport \"../../components/ha-markdown\";\nimport \"../../resources/ha-style\";\nimport {\n  handleConfigFlowStep,\n  FieldSchema,\n  ConfigFlowStepForm,\n} from \"../../data/config_entries\";\nimport { PolymerChangedEvent, applyPolymerEvent } from \"../../polymer-types\";\nimport { HomeAssistant } from \"../../types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport { configFlowContentStyles } from \"./styles\";\n\n@customElement(\"step-flow-form\")\nclass StepFlowForm extends LitElement {\n  @property()\n  public step!: ConfigFlowStepForm;\n\n  @property()\n  public hass!: HomeAssistant;\n\n  @property()\n  private _loading = false;\n\n  @property()\n  private _stepData?: { [key: string]: any };\n\n  @property()\n  private _errorMsg?: string;\n\n  protected render(): TemplateResult | void {\n    const localize = this.hass.localize;\n    const step = this.step;\n\n    const allRequiredInfoFilledIn =\n      this._stepData === undefined\n        ? // If no data filled in, just check that any field is required\n          step.data_schema.find((field) => !field.optional) === undefined\n        : // If data is filled in, make sure all required fields are\n          this._stepData &&\n          step.data_schema.every(\n            (field) =>\n              field.optional ||\n              ![\"\", undefined].includes(this._stepData![field.name])\n          );\n\n    const description = localizeKey(\n      localize,\n      `component.${step.handler}.config.step.${step.step_id}.description`,\n      step.description_placeholders\n    );\n\n    return html`\n      <h2>\n        ${localize(\n          `component.${step.handler}.config.step.${step.step_id}.title`\n        )}\n      </h2>\n      <div class=\"content\">\n        ${this._errorMsg\n          ? html`\n              <div class=\"error\">${this._errorMsg}</div>\n            `\n          : \"\"}\n        ${description\n          ? html`\n              <ha-markdown .content=${description} allow-svg></ha-markdown>\n            `\n          : \"\"}\n        <ha-form\n          .data=${this._stepDataProcessed}\n          @data-changed=${this._stepDataChanged}\n          .schema=${step.data_schema}\n          .error=${step.errors}\n          .computeLabel=${this._labelCallback}\n          .computeError=${this._errorCallback}\n        ></ha-form>\n      </div>\n      <div class=\"buttons\">\n        ${this._loading\n          ? html`\n              <div class=\"submit-spinner\">\n                <paper-spinner active></paper-spinner>\n              </div>\n            `\n          : html`\n              <div>\n                <mwc-button\n                  @click=${this._submitStep}\n                  .disabled=${!allRequiredInfoFilledIn}\n                >\n                  Submit\n                </mwc-button>\n\n                ${!allRequiredInfoFilledIn\n                  ? html`\n                      <paper-tooltip position=\"left\">\n                        Not all required fields are filled in.\n                      </paper-tooltip>\n                    `\n                  : html``}\n              </div>\n            `}\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._submitStep();\n      }\n    });\n  }\n\n  private get _stepDataProcessed() {\n    if (this._stepData !== undefined) {\n      return this._stepData;\n    }\n\n    const data = {};\n    this.step.data_schema.forEach((field) => {\n      if (\"default\" in field) {\n        data[field.name] = field.default;\n      }\n    });\n    return data;\n  }\n\n  private async _submitStep(): Promise<void> {\n    this._loading = true;\n    this._errorMsg = undefined;\n\n    const flowId = this.step.flow_id;\n    const stepData = this._stepData || {};\n\n    const toSendData = {};\n    Object.keys(stepData).forEach((key) => {\n      const value = stepData[key];\n      const isEmpty = [undefined, \"\"].includes(value);\n\n      if (!isEmpty) {\n        toSendData[key] = value;\n      }\n    });\n\n    try {\n      const step = await handleConfigFlowStep(\n        this.hass,\n        this.step.flow_id,\n        toSendData\n      );\n\n      // make sure we're still showing the same step as when we\n      // fired off request.\n      if (!this.step || flowId !== this.step.flow_id) {\n        return;\n      }\n\n      fireEvent(this, \"flow-update\", {\n        step,\n      });\n    } catch (err) {\n      this._errorMsg =\n        (err && err.body && err.body.message) || \"Unknown error occurred\";\n    } finally {\n      this._loading = false;\n    }\n  }\n\n  private _stepDataChanged(ev: PolymerChangedEvent<any>): void {\n    this._stepData = applyPolymerEvent(ev, this._stepData);\n  }\n\n  private _labelCallback = (schema: FieldSchema): string => {\n    const step = this.step as ConfigFlowStepForm;\n\n    return this.hass.localize(\n      `component.${step.handler}.config.step.${step.step_id}.data.${\n        schema.name\n      }`\n    );\n  };\n\n  private _errorCallback = (error: string) =>\n    this.hass.localize(`component.${this.step.handler}.config.error.${error}`);\n\n  static get styles(): CSSResultArray {\n    return [\n      configFlowContentStyles,\n      css`\n        .error {\n          color: red;\n        }\n\n        .submit-spinner {\n          margin-right: 16px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-form\": StepFlowForm;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  customElement,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-spinner/paper-spinner-lite\";\n\n@customElement(\"step-flow-loading\")\nclass StepFlowLoading extends LitElement {\n  protected render(): TemplateResult | void {\n    return html`\n      <div class=\"init-spinner\">\n        <paper-spinner-lite active></paper-spinner-lite>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .init-spinner {\n        padding: 50px 100px;\n        text-align: center;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-loading\": StepFlowLoading;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  customElement,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-spinner/paper-spinner-lite\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport { HomeAssistant } from \"../../types\";\nimport { createConfigFlow } from \"../../data/config_entries\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-icon-next\";\n\n@customElement(\"step-flow-pick-handler\")\nclass StepFlowPickHandler extends LitElement {\n  public hass!: HomeAssistant;\n  public handlers!: string[];\n\n  protected render(): TemplateResult | void {\n    return html`\n      <h2>${this.hass.localize(\"ui.panel.config.integrations.new\")}</h2>\n      <div>\n        ${this.handlers.map(\n          (handler) =>\n            html`\n              <paper-item @click=${this._handlerPicked} .handler=${handler}>\n                <paper-item-body>\n                  ${this.hass.localize(`component.${handler}.config.title`)}\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            `\n        )}\n      </div>\n    `;\n  }\n\n  private async _handlerPicked(ev) {\n    fireEvent(this, \"flow-update\", {\n      stepPromise: createConfigFlow(this.hass, ev.currentTarget.handler),\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      h2 {\n        padding-left: 16px;\n      }\n      div {\n        overflow: auto;\n        max-height: 600px;\n      }\n      paper-item {\n        cursor: pointer;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-pick-handler\": StepFlowPickHandler;\n  }\n}\n","import { css } from \"lit-element\";\n\nexport const configFlowContentStyles = css`\n  h2 {\n    margin-top: 24px;\n    padding: 0 24px;\n  }\n\n  .content {\n    margin-top: 20px;\n    padding: 0 24px;\n  }\n\n  .buttons {\n    position: relative;\n    padding: 8px 8px 8px 24px;\n    margin: 0;\n    color: var(--primary-color);\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  ha-markdown {\n    overflow-wrap: break-word;\n  }\n  ha-markdown a {\n    color: var(--primary-color);\n  }\n  ha-markdown img:first-child:last-child {\n    display: block;\n    margin: 0 auto;\n  }\n`;\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","export const applyPolymerEvent = <T>(\n  ev: PolymerChangedEvent<T>,\n  curValue: T\n): T => {\n  const { path, value } = ev.detail;\n  if (!path) {\n    return value;\n  }\n  const propName = path.split(\".\")[1];\n  return { ...curValue, [propName]: value };\n};\n\nexport interface PolymerChangedEvent<T> extends Event {\n  detail: {\n    value: T;\n    path?: string;\n    queueProperty: boolean;\n  };\n}\n\nexport interface PolymerIronSelectEvent<T> extends Event {\n  detail: {\n    item: T;\n  };\n}\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-logout\": undefined;\n    \"iron-resize\": undefined;\n    \"config-refresh\": undefined;\n    \"hass-api-called\": {\n      success: boolean;\n      response: unknown;\n    };\n  }\n}\n"],"sourceRoot":""}