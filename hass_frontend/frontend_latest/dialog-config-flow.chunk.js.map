{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./node_modules/@polymer/paper-spinner/paper-spinner-lite.js","webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/components/ha-form.js","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/components/ha-markdown.js","webpack:///./src/components/ha-paper-slider.js","webpack:///./src/data/area_registry.ts","webpack:///./src/data/device_registry.ts","webpack:///./src/dialogs/config-flow/dialog-config-flow.ts","webpack:///./src/dialogs/config-flow/step-flow-abort.ts","webpack:///./src/dialogs/config-flow/step-flow-create-entry.ts","webpack:///./src/dialogs/config-flow/step-flow-external.ts","webpack:///./src/dialogs/config-flow/step-flow-form.ts","webpack:///./src/dialogs/config-flow/step-flow-loading.ts","webpack:///./src/dialogs/config-flow/step-flow-pick-handler.ts","webpack:///./src/dialogs/config-flow/styles.ts","webpack:///./src/mixins/events-mixin.js","webpack:///./src/polymer-types.ts"],"names":["Polymer","_template","html","is","template","setAttribute","behaviors","PaperSpinnerBehavior","HaIronFocusablesHelper","getTabbableNodes","node","result","needsSortByTabIndex","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","element","tabIndex","_normalizedTabIndex","needsSort","push","children","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","HaPaperDialog","mixinBehaviors","define","HaForm","EventsMixin","PolymerElement","properties","data","type","Object","notify","schema","error","computeLabel","Function","value","name","computeError","focus","input","querySelector","_isArray","val","Array","isArray","_isRange","_equals","a","b","_includes","indexOf","_getValue","obj","item","_valueChanged","ev","detail","model","Number","set","_passwordFieldType","unmaskedPassword","_passwordFieldIcon","_optionValue","_optionLabel","HaIconNext","HaIcon","connectedCallback","icon","window","getComputedStyle","direction","loaded","svgWhiteList","HaMarkdown","content","String","observer","allowSvg","Boolean","_scriptLoaded","_renderScheduled","_resize","fire","then","marked","filterXSS","_render","Promise","resolve","innerHTML","gfm","tables","breaks","onIgnoreTag","tag","walker","document","createTreeWalker","nextNode","currentNode","tagName","host","location","target","addEventListener","innerText","PaperSliderClass","HaPaperSlider","tpl","createElement","styleEl","appendChild","createAreaRegistryEntry","hass","values","callWS","updateAreaRegistryEntry","areaId","updates","area_id","deleteAreaRegistryEntry","fetchAreaRegistry","conn","sendMessagePromise","areas","sort","ent1","ent2","compare","subscribeAreaRegistryUpdates","store","subscribeEvents","debounce","setState","subscribeAreaRegistry","onChange","createCollection","updateDeviceRegistryEntry","deviceId","device_id","fetchDeviceRegistry","subscribeDeviceRegistryUpdates","devices","subscribeDeviceRegistry","instance","ConfigFlowDialog","customElement","property","params","_params","_instance","continueFlowId","_step","_handlers","undefined","_loading","updateComplete","_scheduleCenterDialog","getConfigFlowHandlers","handlerA","handlerB","caseInsensitiveCompare","localize","curInstance","step","fetchConfigFlow","_processStep","_openedChanged","_devices","_areas","changedProps","stepPromise","has","_fetchDevices","_fetchAreas","_dialog","setTimeout","center","configEntryId","_unsubDevices","connection","filter","device","config_entries","includes","_unsubAreas","_flowDone","flowFinished","deleteConfigFlow","flow_id","dialogClosedCallback","haStyleDialog","css","LitElement","StepFlowAbort","description","localizeKey","handler","reason","description_placeholders","fireEvent","configFlowContentStyles","StepFlowCreateEntry","title","map","manufacturer","id","_handleAreaChanged","area","_addArea","prompt","err","alert","dropdown","currentTarget","selectedItem","message","StepFlowExternal","step_id","url","open","StepFlowForm","allRequiredInfoFilledIn","_stepData","data_schema","find","field","optional","every","_errorMsg","_stepDataProcessed","_stepDataChanged","errors","_labelCallback","_errorCallback","_submitStep","keyCode","forEach","default","flowId","stepData","toSendData","keys","key","isEmpty","handleConfigFlowStep","body","applyPolymerEvent","StepFlowLoading","StepFlowPickHandler","handlers","_handlerPicked","createConfigFlow","dedupingMixin","superClass","options","curValue","path","propName","split"],"mappings":"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","file":"dialog-config-flow.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/color.js';\nimport './paper-spinner-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperSpinnerBehavior} from './paper-spinner-behavior.js';\n\nconst template = html`\n  <style include=\"paper-spinner-styles\"></style>\n\n  <div id=\"spinnerContainer\" class-name=\"[[__computeContainerClasses(active, __coolingDown)]]\" on-animationend=\"__reset\" on-webkit-animation-end=\"__reset\">\n    <div class=\"spinner-layer\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design: [Progress &\nactivity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a single color material design circular spinner.\n\n    <paper-spinner-lite active></paper-spinner-lite>\n\nThe default spinner is blue. It can be customized to be a different color.\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If\nnot provided, it defaults to 'loading'. Empty alt can be provided to mark the\nelement as decorative if alternative content is provided in another form (e.g. a\ntext block following the spinner).\n\n    <paper-spinner-lite alt=\"Loading contacts list\" active></paper-spinner-lite>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-color` | Color of the spinner | `--google-blue-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n@group Paper Elements\n@element paper-spinner-lite\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-spinner-lite',\n\n  behaviors: [PaperSpinnerBehavior]\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import \"@polymer/paper-checkbox/paper-checkbox\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-paper-slider\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaForm extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        .error {\n          color: red;\n        }\n        paper-checkbox {\n          display: inline-block;\n          padding: 22px 0;\n        }\n      </style>\n      <template is=\"dom-if\" if=\"[[_isArray(schema)]]\" restamp=\"\">\n        <template is=\"dom-if\" if=\"[[error.base]]\">\n          <div class=\"error\">[[computeError(error.base, schema)]]</div>\n        </template>\n\n        <template is=\"dom-repeat\" items=\"[[schema]]\">\n          <ha-form\n            data=\"[[_getValue(data, item)]]\"\n            schema=\"[[item]]\"\n            error=\"[[_getValue(error, item)]]\"\n            on-data-changed=\"_valueChanged\"\n            compute-label=\"[[computeLabel]]\"\n            compute-error=\"[[computeError]]\"\n          ></ha-form>\n        </template>\n      </template>\n      <template is=\"dom-if\" if=\"[[!_isArray(schema)]]\" restamp=\"\">\n        <template is=\"dom-if\" if=\"[[error]]\">\n          <div class=\"error\">[[computeError(error, schema)]]</div>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"string\")]]'\n          restamp=\"\"\n        >\n          <template\n            is=\"dom-if\"\n            if='[[_includes(schema.name, \"password\")]]'\n            restamp=\"\"\n          >\n            <paper-input\n              type=\"[[_passwordFieldType(unmaskedPassword)]]\"\n              label=\"[[computeLabel(schema)]]\"\n              value=\"{{data}}\"\n              required=\"[[schema.required]]\"\n              auto-validate=\"[[schema.required]]\"\n              error-message=\"Required\"\n            >\n              <paper-icon-button\n                toggles\n                active=\"{{unmaskedPassword}}\"\n                slot=\"suffix\"\n                icon=\"[[_passwordFieldIcon(unmaskedPassword)]]\"\n                id=\"iconButton\"\n                title=\"Click to toggle between masked and clear password\"\n              >\n              </paper-icon-button>\n            </paper-input>\n          </template>\n          <template\n            is=\"dom-if\"\n            if='[[!_includes(schema.name, \"password\")]]'\n            restamp=\"\"\n          >\n            <paper-input\n              label=\"[[computeLabel(schema)]]\"\n              value=\"{{data}}\"\n              required=\"[[schema.required]]\"\n              auto-validate=\"[[schema.required]]\"\n              error-message=\"Required\"\n            ></paper-input>\n          </template>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"integer\")]]'\n          restamp=\"\"\n        >\n          <template is=\"dom-if\" if=\"[[_isRange(schema)]]\" restamp=\"\">\n            <div>\n              [[computeLabel(schema)]]\n              <ha-paper-slider\n                pin=\"\"\n                value=\"{{data}}\"\n                min=\"[[schema.valueMin]]\"\n                max=\"[[schema.valueMax]]\"\n              ></ha-paper-slider>\n            </div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_isRange(schema)]]\" restamp=\"\">\n            <paper-input\n              label=\"[[computeLabel(schema)]]\"\n              value=\"{{data}}\"\n              type=\"number\"\n              required=\"[[schema.required]]\"\n              auto-validate=\"[[schema.required]]\"\n              error-message=\"Required\"\n            ></paper-input>\n          </template>\n        </template>\n\n        <template is=\"dom-if\" if='[[_equals(schema.type, \"float\")]]' restamp=\"\">\n          <!-- TODO -->\n          <paper-input\n            label=\"[[computeLabel(schema)]]\"\n            value=\"{{data}}\"\n            required=\"[[schema.required]]\"\n            auto-validate=\"[[schema.required]]\"\n            error-message=\"Required\"\n          ></paper-input>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"boolean\")]]'\n          restamp=\"\"\n        >\n          <div>\n            <paper-checkbox checked=\"{{data}}\"\n              >[[computeLabel(schema)]]</paper-checkbox\n            >\n          </div>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"select\")]]'\n          restamp=\"\"\n        >\n          <paper-dropdown-menu label=\"[[computeLabel(schema)]]\">\n            <paper-listbox\n              slot=\"dropdown-content\"\n              attr-for-selected=\"item-name\"\n              selected=\"{{data}}\"\n            >\n              <template is=\"dom-repeat\" items=\"[[schema.options]]\">\n                <paper-item item-name$=\"[[_optionValue(item)]]\"\n                  >[[_optionLabel(item)]]</paper-item\n                >\n              </template>\n            </paper-listbox>\n          </paper-dropdown-menu>\n        </template>\n      </template>\n    `;\n  }\n\n  static get properties() {\n    return {\n      data: {\n        type: Object,\n        notify: true,\n      },\n      schema: Object,\n      error: Object,\n\n      // A function that will computes the label to be displayed for a given\n      // schema object.\n      computeLabel: {\n        type: Function,\n        value: () => (schema) => schema && schema.name,\n      },\n\n      // A function that will computes an error message to be displayed for a\n      // given error ID, and relevant schema object\n      computeError: {\n        type: Function,\n        value: () => (error, schema) => error, // eslint-disable-line no-unused-vars\n      },\n    };\n  }\n\n  focus() {\n    const input = this.shadowRoot.querySelector(\n      \"ha-form, paper-input, ha-paper-slider, paper-checkbox, paper-dropdown-menu\"\n    );\n\n    if (!input) {\n      return;\n    }\n\n    input.focus();\n  }\n\n  _isArray(val) {\n    return Array.isArray(val);\n  }\n\n  _isRange(schema) {\n    return \"valueMin\" in schema && \"valueMax\" in schema;\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n\n  _includes(a, b) {\n    return a.indexOf(b) >= 0;\n  }\n\n  _getValue(obj, item) {\n    if (obj) {\n      return obj[item.name];\n    }\n    return null;\n  }\n\n  _valueChanged(ev) {\n    let value = ev.detail.value;\n    if (ev.model.item.type === \"integer\") {\n      value = Number(ev.detail.value);\n    }\n    this.set([\"data\", ev.model.item.name], value);\n  }\n\n  _passwordFieldType(unmaskedPassword) {\n    return unmaskedPassword ? \"text\" : \"password\";\n  }\n\n  _passwordFieldIcon(unmaskedPassword) {\n    return unmaskedPassword ? \"hass:eye-off\" : \"hass:eye\";\n  }\n\n  _optionValue(item) {\n    return Array.isArray(item) ? item[0] : item;\n  }\n\n  _optionLabel(item) {\n    return Array.isArray(item) ? item[1] : item;\n  }\n}\n\ncustomElements.define(\"ha-form\", HaForm);\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    this.icon =\n      window.getComputedStyle(this).direction === \"ltr\"\n        ? \"hass:chevron-right\"\n        : \"hass:chevron-left\";\n\n    // calling super after setting icon to have it consistently show the icon (otherwise not always shown)\n    super.connectedCallback();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nlet loaded = null;\n\n/**\n * White list allowed svg tag.\n * Only put in the tag used in QR code, can be extend in future.\n */\nconst svgWhiteList = [\"svg\", \"path\"];\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaMarkdown extends EventsMixin(PolymerElement) {\n  static get properties() {\n    return {\n      content: {\n        type: String,\n        observer: \"_render\",\n      },\n      allowSvg: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // 0 = not loaded, 1 = success, 2 = error\n    this._scriptLoaded = 0;\n    this._renderScheduled = false;\n    this._resize = () => this.fire(\"iron-resize\");\n\n    if (!loaded) {\n      loaded = import(/* webpackChunkName: \"load_markdown\" */ \"../resources/load_markdown\");\n    }\n    loaded\n      .then(\n        ({ marked, filterXSS }) => {\n          this.marked = marked;\n          this.filterXSS = filterXSS;\n          this._scriptLoaded = 1;\n        },\n        () => {\n          this._scriptLoaded = 2;\n        }\n      )\n      .then(() => this._render());\n  }\n\n  _render() {\n    if (this._scriptLoaded === 0 || this._renderScheduled) return;\n\n    this._renderScheduled = true;\n\n    // debounce it to next microtask.\n    Promise.resolve().then(() => {\n      this._renderScheduled = false;\n\n      if (this._scriptLoaded === 1) {\n        this.innerHTML = this.filterXSS(\n          this.marked(this.content, {\n            gfm: true,\n            tables: true,\n            breaks: true,\n          }),\n          {\n            onIgnoreTag: this.allowSvg\n              ? (tag, html) => (svgWhiteList.indexOf(tag) >= 0 ? html : null)\n              : null,\n          }\n        );\n        this._resize();\n\n        const walker = document.createTreeWalker(\n          this,\n          1 /* SHOW_ELEMENT */,\n          null,\n          false\n        );\n\n        while (walker.nextNode()) {\n          const node = walker.currentNode;\n\n          // Open external links in a new window\n          if (node.tagName === \"A\" && node.host !== document.location.host) {\n            node.target = \"_blank\";\n\n            // Fire a resize event when images loaded to notify content resized\n          } else if (node.tagName === \"IMG\") {\n            node.addEventListener(\"load\", this._resize);\n          }\n        }\n      } else if (this._scriptLoaded === 2) {\n        this.innerText = this.content;\n      }\n    });\n  }\n}\n\ncustomElements.define(\"ha-markdown\", HaMarkdown);\n","import \"@polymer/paper-slider/paper-slider\";\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin paper-slider\n */\nconst PaperSliderClass = customElements.get(\"paper-slider\");\n\nclass HaPaperSlider extends PaperSliderClass {\n  static get template() {\n    const tpl = document.createElement(\"template\");\n    tpl.innerHTML = PaperSliderClass.template.innerHTML;\n    const styleEl = document.createElement(\"style\");\n    styleEl.innerHTML = `\n      .pin > .slider-knob > .slider-knob-inner {\n        font-size:  var(--ha-paper-slider-pin-font-size, 10px);\n        line-height: normal;\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::before {\n        top: unset;\n        margin-left: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        width: 2.2em;\n        height: 2.2em;\n\n        -webkit-transform-origin: left bottom;\n        transform-origin: left bottom;\n        -webkit-transform: rotate(-45deg) scale(0) translate(0);\n        transform: rotate(-45deg) scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::before {\n        -webkit-transform: rotate(-45deg) scale(1) translate(7px, -7px);\n        transform: rotate(-45deg) scale(1) translate(7px, -7px);\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::after {\n        top: unset;\n        font-size: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        margin-left: -1.1em;\n        width: 2.2em;\n        height: 2.1em;\n\n        -webkit-transform-origin: center bottom;\n        transform-origin: center bottom;\n        -webkit-transform: scale(0) translate(0);\n        transform: scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::after {\n        -webkit-transform: scale(1) translate(0, -10px);\n        transform: scale(1) translate(0, -10px);\n      }\n\n      :host([dir=\"rtl\"]) .pin.expand > .slider-knob > .slider-knob-inner::after {\n        -webkit-transform: scale(1) translate(0, -17px) scaleX(-1) !important;\n        transform: scale(1) translate(0, -17px) scaleX(-1) !important;\n        }\n    `;\n    tpl.content.appendChild(styleEl);\n    return tpl;\n  }\n}\ncustomElements.define(\"ha-paper-slider\", HaPaperSlider);\n","import { createCollection, Connection } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\nimport { compare } from \"../common/string/compare\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport interface AreaRegistryEntry {\n  area_id: string;\n  name: string;\n}\n\nexport interface AreaRegistryEntryMutableParams {\n  name: string;\n}\n\nexport const createAreaRegistryEntry = (\n  hass: HomeAssistant,\n  values: AreaRegistryEntryMutableParams\n) =>\n  hass.callWS<AreaRegistryEntry>({\n    type: \"config/area_registry/create\",\n    ...values,\n  });\n\nexport const updateAreaRegistryEntry = (\n  hass: HomeAssistant,\n  areaId: string,\n  updates: Partial<AreaRegistryEntryMutableParams>\n) =>\n  hass.callWS<AreaRegistryEntry>({\n    type: \"config/area_registry/update\",\n    area_id: areaId,\n    ...updates,\n  });\n\nexport const deleteAreaRegistryEntry = (hass: HomeAssistant, areaId: string) =>\n  hass.callWS({\n    type: \"config/area_registry/delete\",\n    area_id: areaId,\n  });\n\nconst fetchAreaRegistry = (conn) =>\n  conn\n    .sendMessagePromise({\n      type: \"config/area_registry/list\",\n    })\n    .then((areas) => areas.sort((ent1, ent2) => compare(ent1.name, ent2.name)));\n\nconst subscribeAreaRegistryUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchAreaRegistry(conn).then((areas) => store.setState(areas, true)),\n      500,\n      true\n    ),\n    \"area_registry_updated\"\n  );\n\nexport const subscribeAreaRegistry = (\n  conn: Connection,\n  onChange: (areas: AreaRegistryEntry[]) => void\n) =>\n  createCollection<AreaRegistryEntry[]>(\n    \"_areaRegistry\",\n    fetchAreaRegistry,\n    subscribeAreaRegistryUpdates,\n    conn,\n    onChange\n  );\n","import { HomeAssistant } from \"../types\";\nimport { createCollection, Connection } from \"home-assistant-js-websocket\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport interface DeviceRegistryEntry {\n  id: string;\n  config_entries: string[];\n  connections: Array<[string, string]>;\n  manufacturer: string;\n  model?: string;\n  name?: string;\n  sw_version?: string;\n  hub_device_id?: string;\n  area_id?: string;\n  name_by_user?: string;\n}\n\nexport interface DeviceRegistryEntryMutableParams {\n  area_id?: string | null;\n  name_by_user?: string | null;\n}\n\nexport const updateDeviceRegistryEntry = (\n  hass: HomeAssistant,\n  deviceId: string,\n  updates: Partial<DeviceRegistryEntryMutableParams>\n) =>\n  hass.callWS<DeviceRegistryEntry>({\n    type: \"config/device_registry/update\",\n    device_id: deviceId,\n    ...updates,\n  });\n\nconst fetchDeviceRegistry = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config/device_registry/list\",\n  });\n\nconst subscribeDeviceRegistryUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchDeviceRegistry(conn).then((devices) =>\n          store.setState(devices, true)\n        ),\n      500,\n      true\n    ),\n    \"device_registry_updated\"\n  );\n\nexport const subscribeDeviceRegistry = (\n  conn: Connection,\n  onChange: (devices: DeviceRegistryEntry[]) => void\n) =>\n  createCollection<DeviceRegistryEntry[]>(\n    \"_dr\",\n    fetchDeviceRegistry,\n    subscribeDeviceRegistryUpdates,\n    conn,\n    onChange\n  );\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  CSSResultArray,\n  css,\n  customElement,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\n\nimport \"../../components/ha-form\";\nimport \"../../components/ha-markdown\";\nimport \"../../resources/ha-style\";\nimport \"../../components/dialog/ha-paper-dialog\";\n// Not duplicate, is for typing\n// tslint:disable-next-line\nimport { HaPaperDialog } from \"../../components/dialog/ha-paper-dialog\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport {\n  fetchConfigFlow,\n  ConfigFlowStep,\n  deleteConfigFlow,\n  getConfigFlowHandlers,\n} from \"../../data/config_entries\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { HaConfigFlowParams } from \"./show-dialog-config-flow\";\n\nimport \"./step-flow-pick-handler\";\nimport \"./step-flow-loading\";\nimport \"./step-flow-form\";\nimport \"./step-flow-external\";\nimport \"./step-flow-abort\";\nimport \"./step-flow-create-entry\";\nimport {\n  DeviceRegistryEntry,\n  subscribeDeviceRegistry,\n} from \"../../data/device_registry\";\nimport {\n  AreaRegistryEntry,\n  subscribeAreaRegistry,\n} from \"../../data/area_registry\";\nimport { HomeAssistant } from \"../../types\";\nimport { caseInsensitiveCompare } from \"../../common/string/compare\";\n\nlet instance = 0;\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"flow-update\": {\n      step?: ConfigFlowStep;\n      stepPromise?: Promise<ConfigFlowStep>;\n    };\n  }\n}\n\n@customElement(\"dialog-config-flow\")\nclass ConfigFlowDialog extends LitElement {\n  public hass!: HomeAssistant;\n  @property() private _params?: HaConfigFlowParams;\n  @property() private _loading = true;\n  private _instance = instance;\n  @property() private _step:\n    | ConfigFlowStep\n    | undefined\n    // Null means we need to pick a config flow\n    | null;\n  @property() private _devices?: DeviceRegistryEntry[];\n  @property() private _areas?: AreaRegistryEntry[];\n  @property() private _handlers?: string[];\n  private _unsubAreas?: UnsubscribeFunc;\n  private _unsubDevices?: UnsubscribeFunc;\n\n  public async showDialog(params: HaConfigFlowParams): Promise<void> {\n    this._params = params;\n    this._instance = instance++;\n\n    // Create a new config flow. Show picker\n    if (!params.continueFlowId) {\n      this._step = null;\n\n      // We only load the handlers once\n      if (this._handlers === undefined) {\n        this._loading = true;\n        this.updateComplete.then(() => this._scheduleCenterDialog());\n        try {\n          this._handlers = (await getConfigFlowHandlers(this.hass)).sort(\n            (handlerA, handlerB) =>\n              caseInsensitiveCompare(\n                this.hass.localize(`component.${handlerA}.config.title`),\n                this.hass.localize(`component.${handlerB}.config.title`)\n              )\n          );\n        } finally {\n          this._loading = false;\n        }\n      }\n      await this.updateComplete;\n      this._scheduleCenterDialog();\n      return;\n    }\n\n    this._loading = true;\n    const curInstance = this._instance;\n    const step = await fetchConfigFlow(this.hass, params.continueFlowId);\n\n    // Happens if second showDialog called\n    if (curInstance !== this._instance) {\n      return;\n    }\n\n    this._processStep(step);\n    this._loading = false;\n    // When the flow changes, center the dialog.\n    // Don't do it on each step or else the dialog keeps bouncing.\n    this._scheduleCenterDialog();\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=${this._openedChanged}\n      >\n        ${this._loading || (this._step === null && this._handlers === undefined)\n          ? html`\n              <step-flow-loading></step-flow-loading>\n            `\n          : this._step === undefined\n          ? // When we are going to next step, we render 1 round of empty\n            // to reset the element.\n            \"\"\n          : this._step === null\n          ? // Show handler picker\n            html`\n              <step-flow-pick-handler\n                .hass=${this.hass}\n                .handlers=${this._handlers}\n              ></step-flow-pick-handler>\n            `\n          : this._step.type === \"form\"\n          ? html`\n              <step-flow-form\n                .step=${this._step}\n                .hass=${this.hass}\n              ></step-flow-form>\n            `\n          : this._step.type === \"external\"\n          ? html`\n              <step-flow-external\n                .step=${this._step}\n                .hass=${this.hass}\n              ></step-flow-external>\n            `\n          : this._step.type === \"abort\"\n          ? html`\n              <step-flow-abort\n                .step=${this._step}\n                .hass=${this.hass}\n              ></step-flow-abort>\n            `\n          : this._devices === undefined || this._areas === undefined\n          ? // When it's a create entry result, we will fetch device & area registry\n            html`\n              <step-flow-loading></step-flow-loading>\n            `\n          : html`\n              <step-flow-create-entry\n                .step=${this._step}\n                .hass=${this.hass}\n                .devices=${this._devices}\n                .areas=${this._areas}\n              ></step-flow-create-entry>\n            `}\n      </ha-paper-dialog>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"flow-update\", (ev) => {\n      const { step, stepPromise } = (ev as any).detail;\n      this._processStep(step || stepPromise);\n    });\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (\n      changedProps.has(\"_step\") &&\n      this._step &&\n      this._step.type === \"create_entry\"\n    ) {\n      this._fetchDevices(this._step.result);\n      this._fetchAreas();\n    }\n\n    if (changedProps.has(\"_devices\") && this._dialog) {\n      this._scheduleCenterDialog();\n    }\n  }\n\n  private _scheduleCenterDialog() {\n    setTimeout(() => this._dialog.center(), 0);\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private async _fetchDevices(configEntryId) {\n    this._unsubDevices = subscribeDeviceRegistry(\n      this.hass.connection,\n      (devices) => {\n        this._devices = devices.filter((device) =>\n          device.config_entries.includes(configEntryId)\n        );\n      }\n    );\n  }\n\n  private async _fetchAreas() {\n    this._unsubAreas = subscribeAreaRegistry(this.hass.connection, (areas) => {\n      this._areas = areas;\n    });\n  }\n\n  private async _processStep(\n    step: ConfigFlowStep | undefined | Promise<ConfigFlowStep>\n  ): Promise<void> {\n    if (step instanceof Promise) {\n      this._loading = true;\n      try {\n        this._step = await step;\n      } finally {\n        this._loading = false;\n      }\n      return;\n    }\n\n    if (step === undefined) {\n      this._flowDone();\n      return;\n    }\n    this._step = undefined;\n    await this.updateComplete;\n    this._step = step;\n  }\n\n  private _flowDone(): void {\n    if (!this._params) {\n      return;\n    }\n    const flowFinished = Boolean(\n      this._step && [\"create_entry\", \"abort\"].includes(this._step.type)\n    );\n\n    // If we created this flow, delete it now.\n    if (this._step && !flowFinished && !this._params.continueFlowId) {\n      deleteConfigFlow(this.hass, this._step.flow_id);\n    }\n\n    this._params.dialogClosedCallback({\n      flowFinished,\n    });\n\n    this._step = undefined;\n    this._params = undefined;\n    this._devices = undefined;\n    if (this._unsubAreas) {\n      this._unsubAreas();\n      this._unsubAreas = undefined;\n    }\n    if (this._unsubDevices) {\n      this._unsubDevices();\n      this._unsubDevices = undefined;\n    }\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    // Closed dialog by clicking on the overlay\n    if (!ev.detail.value) {\n      if (this._step) {\n        this._flowDone();\n      } else if (this._step === null) {\n        // Flow aborted during picking flow\n        this._step = undefined;\n        this._params = undefined;\n      }\n    }\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyleDialog,\n      css`\n        ha-paper-dialog {\n          max-width: 500px;\n        }\n        ha-paper-dialog > * {\n          margin: 0;\n          display: block;\n          padding: 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-config-flow\": ConfigFlowDialog;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  customElement,\n  property,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { ConfigFlowStepAbort } from \"../../data/config_entries\";\nimport { HomeAssistant } from \"../../types\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { configFlowContentStyles } from \"./styles\";\n\n@customElement(\"step-flow-abort\")\nclass StepFlowAbort extends LitElement {\n  @property()\n  public hass!: HomeAssistant;\n\n  @property()\n  private step!: ConfigFlowStepAbort;\n\n  protected render(): TemplateResult | void {\n    const localize = this.hass.localize;\n    const step = this.step;\n\n    const description = localizeKey(\n      localize,\n      `component.${step.handler}.config.abort.${step.reason}`,\n      step.description_placeholders\n    );\n\n    return html`\n      <h2>Aborted</h2>\n      <div class=\"content\">\n        ${description\n          ? html`\n              <ha-markdown .content=${description} allow-svg></ha-markdown>\n            `\n          : \"\"}\n      </div>\n      <div class=\"buttons\">\n        <mwc-button @click=\"${this._flowDone}\">Close</mwc-button>\n      </div>\n    `;\n  }\n\n  private _flowDone(): void {\n    fireEvent(this, \"flow-update\", { step: undefined });\n  }\n\n  static get styles(): CSSResult {\n    return configFlowContentStyles;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-abort\": StepFlowAbort;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  customElement,\n  property,\n  CSSResultArray,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu-light\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport { ConfigFlowStepCreateEntry } from \"../../data/config_entries\";\nimport { HomeAssistant } from \"../../types\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { configFlowContentStyles } from \"./styles\";\nimport {\n  DeviceRegistryEntry,\n  updateDeviceRegistryEntry,\n} from \"../../data/device_registry\";\nimport {\n  AreaRegistryEntry,\n  createAreaRegistryEntry,\n} from \"../../data/area_registry\";\n\n@customElement(\"step-flow-create-entry\")\nclass StepFlowCreateEntry extends LitElement {\n  @property()\n  public hass!: HomeAssistant;\n\n  @property()\n  public step!: ConfigFlowStepCreateEntry;\n\n  @property()\n  public devices!: DeviceRegistryEntry[];\n\n  @property()\n  public areas!: AreaRegistryEntry[];\n\n  protected render(): TemplateResult | void {\n    const localize = this.hass.localize;\n    const step = this.step;\n\n    const description = localizeKey(\n      localize,\n      `component.${step.handler}.config.create_entry.${step.description ||\n        \"default\"}`,\n      step.description_placeholders\n    );\n\n    return html`\n      <h2>Success!</h2>\n      <div class=\"content\">\n        ${description\n          ? html`\n              <ha-markdown .content=${description} allow-svg></ha-markdown>\n            `\n          : \"\"}\n        <p>Created config for ${step.title}.</p>\n        ${this.devices.length === 0\n          ? \"\"\n          : html`\n              <p>We found the following devices:</p>\n              <div class=\"devices\">\n                ${this.devices.map(\n                  (device) =>\n                    html`\n                      <div class=\"device\">\n                        <b>${device.name}</b><br />\n                        ${device.model} (${device.manufacturer})\n\n                        <paper-dropdown-menu-light\n                          label=\"Area\"\n                          .device=${device.id}\n                          @selected-item-changed=${this._handleAreaChanged}\n                        >\n                          <paper-listbox slot=\"dropdown-content\" selected=\"0\">\n                            <paper-item>\n                              ${localize(\n                                \"ui.panel.config.integrations.config_entry.no_area\"\n                              )}\n                            </paper-item>\n                            ${this.areas.map(\n                              (area) => html`\n                                <paper-item .area=${area.area_id}>\n                                  ${area.name}\n                                </paper-item>\n                              `\n                            )}\n                          </paper-listbox>\n                        </paper-dropdown-menu-light>\n                      </div>\n                    `\n                )}\n              </div>\n            `}\n      </div>\n      <div class=\"buttons\">\n        ${this.devices.length > 0\n          ? html`\n              <mwc-button @click=\"${this._addArea}\">Add Area</mwc-button>\n            `\n          : \"\"}\n\n        <mwc-button @click=\"${this._flowDone}\">Finish</mwc-button>\n      </div>\n    `;\n  }\n\n  private _flowDone(): void {\n    fireEvent(this, \"flow-update\", { step: undefined });\n  }\n\n  private async _addArea() {\n    const name = prompt(\"Name of the new area?\");\n    if (!name) {\n      return;\n    }\n    try {\n      const area = await createAreaRegistryEntry(this.hass, {\n        name,\n      });\n      this.areas = [...this.areas, area];\n    } catch (err) {\n      alert(\"Failed to create area.\");\n    }\n  }\n\n  private async _handleAreaChanged(ev: Event) {\n    const dropdown = ev.currentTarget as any;\n    const device = dropdown.device;\n\n    // Item first becomes null, then new item.\n    if (!dropdown.selectedItem) {\n      return;\n    }\n\n    const area = dropdown.selectedItem.area;\n    try {\n      await updateDeviceRegistryEntry(this.hass, device, {\n        area_id: area,\n      });\n    } catch (err) {\n      alert(`Error saving area: ${err.message}`);\n      dropdown.value = null;\n    }\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      configFlowContentStyles,\n      css`\n        .devices {\n          display: flex;\n          flex-wrap: wrap;\n          margin: -4px;\n        }\n        .device {\n          border: 1px solid var(--divider-color);\n          padding: 5px;\n          border-radius: 4px;\n          margin: 4px;\n          display: inline-block;\n          width: 200px;\n        }\n        .buttons > *:last-child {\n          margin-left: auto;\n        }\n        paper-dropdown-menu-light {\n          cursor: pointer;\n        }\n        paper-item {\n          cursor: pointer;\n          white-space: nowrap;\n        }\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          .device {\n            width: auto;\n          }\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-create-entry\": StepFlowCreateEntry;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  customElement,\n  property,\n  CSSResultArray,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport {\n  ConfigFlowStepExternal,\n  DataEntryFlowProgressedEvent,\n  fetchConfigFlow,\n} from \"../../data/config_entries\";\nimport { HomeAssistant } from \"../../types\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { configFlowContentStyles } from \"./styles\";\n\n@customElement(\"step-flow-external\")\nclass StepFlowExternal extends LitElement {\n  @property()\n  public hass!: HomeAssistant;\n\n  @property()\n  private step!: ConfigFlowStepExternal;\n\n  protected render(): TemplateResult | void {\n    const localize = this.hass.localize;\n    const step = this.step;\n\n    const description = localizeKey(\n      localize,\n      `component.${step.handler}.config.${step.step_id}.description`,\n      step.description_placeholders\n    );\n\n    return html`\n      <h2>\n        ${localize(\n          `component.${step.handler}.config.step.${step.step_id}.title`\n        )}\n      </h2>\n      <div class=\"content\">\n        <p>\n          ${localize(\n            \"ui.panel.config.integrations.config_flow.external_step.description\"\n          )}\n        </p>\n        ${description\n          ? html`\n              <ha-markdown .content=${description} allow-svg></ha-markdown>\n            `\n          : \"\"}\n        <div class=\"open-button\">\n          <a href=${this.step.url} target=\"_blank\">\n            <mwc-button raised>\n              ${localize(\n                \"ui.panel.config.integrations.config_flow.external_step.open_site\"\n              )}\n            </mwc-button>\n          </a>\n        </div>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.hass.connection.subscribeEvents<DataEntryFlowProgressedEvent>(\n      async (ev) => {\n        if (ev.data.flow_id !== this.step.flow_id) {\n          return;\n        }\n\n        const step = await fetchConfigFlow(this.hass, this.step.flow_id);\n        fireEvent(this, \"flow-update\", { step });\n      },\n      \"data_entry_flow_progressed\"\n    );\n    window.open(this.step.url);\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      configFlowContentStyles,\n      css`\n        .open-button {\n          text-align: center;\n          padding: 24px 0;\n        }\n        .open-button a {\n          text-decoration: none;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-external\": StepFlowExternal;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  CSSResultArray,\n  css,\n  customElement,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport \"@polymer/paper-spinner/paper-spinner\";\n\nimport \"../../components/ha-form\";\nimport \"../../components/ha-markdown\";\nimport \"../../resources/ha-style\";\nimport {\n  handleConfigFlowStep,\n  FieldSchema,\n  ConfigFlowStepForm,\n} from \"../../data/config_entries\";\nimport { PolymerChangedEvent, applyPolymerEvent } from \"../../polymer-types\";\nimport { HomeAssistant } from \"../../types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport { configFlowContentStyles } from \"./styles\";\n\n@customElement(\"step-flow-form\")\nclass StepFlowForm extends LitElement {\n  @property()\n  public step!: ConfigFlowStepForm;\n\n  @property()\n  public hass!: HomeAssistant;\n\n  @property()\n  private _loading = false;\n\n  @property()\n  private _stepData?: { [key: string]: any };\n\n  @property()\n  private _errorMsg?: string;\n\n  protected render(): TemplateResult | void {\n    const localize = this.hass.localize;\n    const step = this.step;\n\n    const allRequiredInfoFilledIn =\n      this._stepData === undefined\n        ? // If no data filled in, just check that any field is required\n          step.data_schema.find((field) => !field.optional) === undefined\n        : // If data is filled in, make sure all required fields are\n          this._stepData &&\n          step.data_schema.every(\n            (field) =>\n              field.optional ||\n              ![\"\", undefined].includes(this._stepData![field.name])\n          );\n\n    const description = localizeKey(\n      localize,\n      `component.${step.handler}.config.step.${step.step_id}.description`,\n      step.description_placeholders\n    );\n\n    return html`\n      <h2>\n        ${localize(\n          `component.${step.handler}.config.step.${step.step_id}.title`\n        )}\n      </h2>\n      <div class=\"content\">\n        ${this._errorMsg\n          ? html`\n              <div class=\"error\">${this._errorMsg}</div>\n            `\n          : \"\"}\n        ${description\n          ? html`\n              <ha-markdown .content=${description} allow-svg></ha-markdown>\n            `\n          : \"\"}\n        <ha-form\n          .data=${this._stepDataProcessed}\n          @data-changed=${this._stepDataChanged}\n          .schema=${step.data_schema}\n          .error=${step.errors}\n          .computeLabel=${this._labelCallback}\n          .computeError=${this._errorCallback}\n        ></ha-form>\n      </div>\n      <div class=\"buttons\">\n        ${this._loading\n          ? html`\n              <div class=\"submit-spinner\">\n                <paper-spinner active></paper-spinner>\n              </div>\n            `\n          : html`\n              <div>\n                <mwc-button\n                  @click=${this._submitStep}\n                  .disabled=${!allRequiredInfoFilledIn}\n                >\n                  Submit\n                </mwc-button>\n\n                ${!allRequiredInfoFilledIn\n                  ? html`\n                      <paper-tooltip position=\"left\">\n                        Not all required fields are filled in.\n                      </paper-tooltip>\n                    `\n                  : html``}\n              </div>\n            `}\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._submitStep();\n      }\n    });\n  }\n\n  private get _stepDataProcessed() {\n    if (this._stepData !== undefined) {\n      return this._stepData;\n    }\n\n    const data = {};\n    this.step.data_schema.forEach((field) => {\n      if (\"default\" in field) {\n        data[field.name] = field.default;\n      }\n    });\n    return data;\n  }\n\n  private async _submitStep(): Promise<void> {\n    this._loading = true;\n    this._errorMsg = undefined;\n\n    const flowId = this.step.flow_id;\n    const stepData = this._stepData || {};\n\n    const toSendData = {};\n    Object.keys(stepData).forEach((key) => {\n      const value = stepData[key];\n      const isEmpty = [undefined, \"\"].includes(value);\n\n      if (!isEmpty) {\n        toSendData[key] = value;\n      }\n    });\n\n    try {\n      const step = await handleConfigFlowStep(\n        this.hass,\n        this.step.flow_id,\n        toSendData\n      );\n\n      // make sure we're still showing the same step as when we\n      // fired off request.\n      if (!this.step || flowId !== this.step.flow_id) {\n        return;\n      }\n\n      fireEvent(this, \"flow-update\", {\n        step,\n      });\n    } catch (err) {\n      this._errorMsg =\n        (err && err.body && err.body.message) || \"Unknown error occurred\";\n    } finally {\n      this._loading = false;\n    }\n  }\n\n  private _stepDataChanged(ev: PolymerChangedEvent<any>): void {\n    this._stepData = applyPolymerEvent(ev, this._stepData);\n  }\n\n  private _labelCallback = (schema: FieldSchema): string => {\n    const step = this.step as ConfigFlowStepForm;\n\n    return this.hass.localize(\n      `component.${step.handler}.config.step.${step.step_id}.data.${\n        schema.name\n      }`\n    );\n  };\n\n  private _errorCallback = (error: string) =>\n    this.hass.localize(`component.${this.step.handler}.config.error.${error}`);\n\n  static get styles(): CSSResultArray {\n    return [\n      configFlowContentStyles,\n      css`\n        .error {\n          color: red;\n        }\n\n        .submit-spinner {\n          margin-right: 16px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-form\": StepFlowForm;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  customElement,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-spinner/paper-spinner-lite\";\n\n@customElement(\"step-flow-loading\")\nclass StepFlowLoading extends LitElement {\n  protected render(): TemplateResult | void {\n    return html`\n      <div class=\"init-spinner\">\n        <paper-spinner-lite active></paper-spinner-lite>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .init-spinner {\n        padding: 50px 100px;\n        text-align: center;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-loading\": StepFlowLoading;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  customElement,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-spinner/paper-spinner-lite\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport { HomeAssistant } from \"../../types\";\nimport { createConfigFlow } from \"../../data/config_entries\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/ha-icon-next\";\n\n@customElement(\"step-flow-pick-handler\")\nclass StepFlowPickHandler extends LitElement {\n  public hass!: HomeAssistant;\n  public handlers!: string[];\n\n  protected render(): TemplateResult | void {\n    return html`\n      <h2>${this.hass.localize(\"ui.panel.config.integrations.new\")}</h2>\n      <div>\n        ${this.handlers.map(\n          (handler) =>\n            html`\n              <paper-item @click=${this._handlerPicked} .handler=${handler}>\n                <paper-item-body>\n                  ${this.hass.localize(`component.${handler}.config.title`)}\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            `\n        )}\n      </div>\n    `;\n  }\n\n  private async _handlerPicked(ev) {\n    fireEvent(this, \"flow-update\", {\n      stepPromise: createConfigFlow(this.hass, ev.currentTarget.handler),\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      h2 {\n        padding-left: 16px;\n      }\n      div {\n        overflow: auto;\n        max-height: 600px;\n      }\n      paper-item {\n        cursor: pointer;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"step-flow-pick-handler\": StepFlowPickHandler;\n  }\n}\n","import { css } from \"lit-element\";\n\nexport const configFlowContentStyles = css`\n  h2 {\n    margin-top: 24px;\n    padding: 0 24px;\n  }\n\n  .content {\n    margin-top: 20px;\n    padding: 0 24px;\n  }\n\n  .buttons {\n    position: relative;\n    padding: 8px 8px 8px 24px;\n    margin: 0;\n    color: var(--primary-color);\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  ha-markdown {\n    overflow-wrap: break-word;\n  }\n  ha-markdown a {\n    color: var(--primary-color);\n  }\n  ha-markdown img:first-child:last-child {\n    display: block;\n    margin: 0 auto;\n  }\n`;\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","export const applyPolymerEvent = <T>(\n  ev: PolymerChangedEvent<T>,\n  curValue: T\n): T => {\n  const { path, value } = ev.detail;\n  if (!path) {\n    return value;\n  }\n  const propName = path.split(\".\")[1];\n  return { ...curValue, [propName]: value };\n};\n\nexport interface PolymerChangedEvent<T> extends Event {\n  detail: {\n    value: T;\n    path?: string;\n    queueProperty: boolean;\n  };\n}\n\nexport interface PolymerIronSelectEvent<T> extends Event {\n  detail: {\n    item: T;\n  };\n}\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-logout\": undefined;\n    \"iron-resize\": undefined;\n    \"config-refresh\": undefined;\n    \"hass-api-called\": {\n      success: boolean;\n      response: unknown;\n    };\n  }\n}\n"],"sourceRoot":""}