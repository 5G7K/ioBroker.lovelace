{"version":3,"sources":["webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/panels/config/entity_registry/dialog-entity-registry-detail.ts"],"names":["HaIronFocusablesHelper","getTabbableNodes","node","result","needsSortByTabIndex","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","element","tabIndex","_normalizedTabIndex","needsSort","push","children","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","HaPaperDialog","mixinBehaviors","define","DialogEntityRegistryDetail","LitElement","properties","_error","_name","_entityId","_params","showDialog","params","undefined","entry","name","entity_id","updateComplete","render","html","stateObj","hass","states","invalidDomainUpdate","computeDomain","trim","_openedChanged","localize","_nameChanged","computeStateName","_submitting","_entityIdChanged","_deleteEntry","_updateEntry","ev","detail","value","updateEntry","new_entity_id","err","message","removeEntry","styles","haStyleDialog","css"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;AAUA;;;AAGA;AAEA;AAEO,MAAMA,sBAAsB,GAAG;AACpC;;;;;;;AAOAC,kBAAgB,EAAE,UAASC,IAAT,EAAe;AAC/B,QAAIC,MAAM,GAAG,EAAb,CAD+B,CAE/B;AACA;;AACA,QAAIC,mBAAmB,GAAG,KAAKC,qBAAL,CAA2BH,IAA3B,EAAiCC,MAAjC,CAA1B;;AACA,QAAIC,mBAAJ,EAAyB;AACvB,aAAOE,6GAAoB,CAACC,eAArB,CAAqCJ,MAArC,CAAP;AACD;;AACD,WAAOA,MAAP;AACD,GAjBmC;;AAmBpC;;;;;;;;;AASAE,uBAAqB,EAAE,UAASH,IAAT,EAAeC,MAAf,EAAuB;AAC5C;AACA,QACED,IAAI,CAACM,QAAL,KAAkBC,IAAI,CAACC,YAAvB,IACA,CAACJ,6GAAoB,CAACK,UAArB,CAAgCT,IAAhC,CAFH,EAGE;AACA,aAAO,KAAP;AACD;;AACD,QAAIU,OAAO;AAAG;AAA6BV,QAA3C;;AACA,QAAIW,QAAQ,GAAGP,6GAAoB,CAACQ,mBAArB,CAAyCF,OAAzC,CAAf;;AACA,QAAIG,SAAS,GAAGF,QAAQ,GAAG,CAA3B;;AACA,QAAIA,QAAQ,IAAI,CAAhB,EAAmB;AACjBV,YAAM,CAACa,IAAP,CAAYJ,OAAZ;AACD,KAb2C,CAe5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAIK,QAAJ;;AACA,QAAIL,OAAO,CAACM,SAAR,KAAsB,SAAtB,IAAmCN,OAAO,CAACM,SAAR,KAAsB,MAA7D,EAAqE;AACnED,cAAQ,GAAGE,sFAAG,CAACP,OAAD,CAAH,CAAaQ,mBAAb,EAAX;AACD,KAFD,MAEO;AACL;AACA;AACA;AACAH,cAAQ,GAAGE,sFAAG,CAACP,OAAO,CAACS,UAAR,IAAsBT,OAAO,CAACU,IAA9B,IAAsCV,OAAvC,CAAH,CAAmDK,QAA9D,CAJK,CAKL;AACD;;AACD,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,QAAQ,CAACO,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC;AACAR,eAAS,GAAG,KAAKV,qBAAL,CAA2BY,QAAQ,CAACM,CAAD,CAAnC,EAAwCpB,MAAxC,KAAmDY,SAA/D;AACD;;AACD,WAAOA,SAAP;AACD;AAvEmC,CAA/B,C;;;;;;;;;;;;ACjBP;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;CAEA;;AAGA,MAAMU,gBAAgB,GAAGC,cAAc,CAACC,GAAf,CAAmB,cAAnB,CAAzB,C,CAEA;;AACA,MAAMC,oBAAoB,GAAG;AAC3B,MAAIC,eAAJ,GAAsB;AACpB,WAAO7B,oFAAsB,CAACC,gBAAvB,CAAwC,IAAxC,CAAP;AACD;;AAH0B,CAA7B,C,CAMA;AACA;AACA;;AACO,MAAM6B,aAAN,SACGC,wFAAc,CAAC,CAACH,oBAAD,CAAD,EAAyBH,gBAAzB,CADjB,CAEyB;AAOhCC,cAAc,CAACM,MAAf,CAAsB,iBAAtB,EAAyCF,aAAzC,E;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAQA;AACA;AAEA;AAIA;AAEA;AAEA;;AAEA,MAAMG,0BAAN,SAAyCC,sDAAzC,CAAoD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAQlD,aAAWC,UAAX,GAA8C;AAC5C,WAAO;AACLC,YAAM,EAAE,EADH;AAELC,WAAK,EAAE,EAFF;AAGLC,eAAS,EAAE,EAHN;AAILC,aAAO,EAAE;AAJJ,KAAP;AAMD;;AAED,QAAaC,UAAb,CACEC,MADF,EAEiB;AACf,SAAKF,OAAL,GAAeE,MAAf;AACA,SAAKL,MAAL,GAAcM,SAAd;AACA,SAAKL,KAAL,GAAa,KAAKE,OAAL,CAAaI,KAAb,CAAmBC,IAAnB,IAA2B,EAAxC;AACA,SAAKN,SAAL,GAAiB,KAAKC,OAAL,CAAaI,KAAb,CAAmBE,SAApC;AACA,UAAM,KAAKC,cAAX;AACD;;AAESC,QAAV,GAA0C;AACxC,QAAI,CAAC,KAAKR,OAAV,EAAmB;AACjB,aAAOS,gDAAK,EAAZ;AACD;;AACD,UAAML,KAAK,GAAG,KAAKJ,OAAL,CAAaI,KAA3B;AACA,UAAMM,QAAgC,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBR,KAAK,CAACE,SAAvB,CAAzC;AACA,UAAMO,mBAAmB,GACvBC,6EAAa,CAAC,KAAKf,SAAL,CAAegB,IAAf,EAAD,CAAb,KACAD,6EAAa,CAAC,KAAKd,OAAL,CAAaI,KAAb,CAAmBE,SAApB,CAFf;AAIA,WAAOG,gDAAK;;;;2BAIW,KAAKO,cAAe;;cAEjCZ,KAAK,CAACE,SAAU;;YAElB,CAACI,QAAD,GACED,gDAAK;;oBAEC,KAAKE,IAAL,CAAWM,QAAX,CACA,oDADA,CAEA;;eALR,GAQE,EAAG;YACL,KAAKpB,MAAL,GACEY,gDAAK;qCACkB,KAAKZ,MAAO;eAFrC,GAIE,EAAG;;;uBAGM,KAAKC,KAAM;+BACH,KAAKoB,YAAa;uBAC1B,KAAKP,IAAL,CAAUM,QAAV,CAAmB,oCAAnB,CAAyD;6BACnDP,QAAQ,GAAGS,iFAAgB,CAACT,QAAD,CAAnB,GAAgC,EAAG;0BAC9C,KAAKU,WAAY;;;uBAGpB,KAAKrB,SAAU;+BACP,KAAKsB,gBAAiB;uBAC9B,KAAKV,IAAL,CAAUM,QAAV,CACP,yCADO,CAEP;;yBAESJ,mBAAoB;0BACnB,KAAKO,WAAY;;;;;;;sBAOrB,KAAKE,YAAa;wBAChB,KAAKF,WAAY;;cAE3B,KAAKT,IAAL,CAAUM,QAAV,CACA,+CADA,CAEA;;;sBAGQ,KAAKM,YAAa;wBAChBV,mBAAmB,IAAI,KAAKO,WAAY;;cAElD,KAAKT,IAAL,CAAUM,QAAV,CACA,+CADA,CAEA;;;;KA1DV;AA+DD;;AAEOC,cAAR,CAAqBM,EAArB,EAA4D;AAC1D,SAAK3B,MAAL,GAAcM,SAAd;AACA,SAAKL,KAAL,GAAa0B,EAAE,CAACC,MAAH,CAAUC,KAAvB;AACD;;AAEOL,kBAAR,CAAyBG,EAAzB,EAAgE;AAC9D,SAAK3B,MAAL,GAAcM,SAAd;AACA,SAAKJ,SAAL,GAAiByB,EAAE,CAACC,MAAH,CAAUC,KAA3B;AACD;;AAED,QAAcH,YAAd,GAA4C;AAC1C,SAAKH,WAAL,GAAmB,IAAnB;;AACA,QAAI;AACF,YAAM,KAAKpB,OAAL,CAAc2B,WAAd,CAA0B;AAC9BtB,YAAI,EAAE,KAAKP,KAAL,CAAWiB,IAAX,MAAqB,IADG;AAE9Ba,qBAAa,EAAE,KAAK7B,SAAL,CAAegB,IAAf;AAFe,OAA1B,CAAN;AAIA,WAAKf,OAAL,GAAeG,SAAf;AACD,KAND,CAME,OAAO0B,GAAP,EAAY;AACZ,WAAKhC,MAAL,GAAcgC,GAAG,CAACC,OAAJ,IAAe,eAA7B;AACD,KARD,SAQU;AACR,WAAKV,WAAL,GAAmB,KAAnB;AACD;AACF;;AAED,QAAcE,YAAd,GAA4C;AAC1C,SAAKF,WAAL,GAAmB,IAAnB;;AACA,QAAI;AACF,UAAI,MAAM,KAAKpB,OAAL,CAAc+B,WAAd,EAAV,EAAuC;AACrC,aAAK/B,OAAL,GAAeG,SAAf;AACD;AACF,KAJD,SAIU;AACR,WAAKiB,WAAL,GAAmB,KAAnB;AACD;AACF;;AAEOJ,gBAAR,CAAuBQ,EAAvB,EAA+D;AAC7D,QAAI,CAAEA,EAAE,CAACC,MAAJ,CAAmBC,KAAxB,EAA+B;AAC7B,WAAK1B,OAAL,GAAeG,SAAf;AACD;AACF;;AAED,aAAW6B,MAAX,GAAiC;AAC/B,WAAO,CACLC,+DADK,EAELC,+CAAI;;;;;;;;;;;;;OAFC,CAAP;AAiBD;;AAlKiD;;AA2KpD/C,cAAc,CAACM,MAAf,CACE,+BADF,EAEEC,0BAFF,E","file":"entity-registry-detail-dialog.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import {\n  LitElement,\n  html,\n  css,\n  PropertyDeclarations,\n  CSSResult,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../../components/dialog/ha-paper-dialog\";\n\nimport { EntityRegistryDetailDialogParams } from \"./show-dialog-entity-registry-detail\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport computeDomain from \"../../../common/entity/compute_domain\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport computeStateName from \"../../../common/entity/compute_state_name\";\n\nclass DialogEntityRegistryDetail extends LitElement {\n  public hass!: HomeAssistant;\n  private _name!: string;\n  private _entityId!: string;\n  private _error?: string;\n  private _params?: EntityRegistryDetailDialogParams;\n  private _submitting?: boolean;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      _error: {},\n      _name: {},\n      _entityId: {},\n      _params: {},\n    };\n  }\n\n  public async showDialog(\n    params: EntityRegistryDetailDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._name = this._params.entry.name || \"\";\n    this._entityId = this._params.entry.entity_id;\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n    const entry = this._params.entry;\n    const stateObj: HassEntity | undefined = this.hass.states[entry.entity_id];\n    const invalidDomainUpdate =\n      computeDomain(this._entityId.trim()) !==\n      computeDomain(this._params.entry.entity_id);\n\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>${entry.entity_id}</h2>\n        <paper-dialog-scrollable>\n          ${!stateObj\n            ? html`\n                <div>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.entity_registry.editor.unavailable\"\n                  )}\n                </div>\n              `\n            : \"\"}\n          ${this._error\n            ? html`\n                <div class=\"error\">${this._error}</div>\n              `\n            : \"\"}\n          <div class=\"form\">\n            <paper-input\n              .value=${this._name}\n              @value-changed=${this._nameChanged}\n              .label=${this.hass.localize(\"ui.dialogs.more_info_settings.name\")}\n              .placeholder=${stateObj ? computeStateName(stateObj) : \"\"}\n              .disabled=${this._submitting}\n            ></paper-input>\n            <paper-input\n              .value=${this._entityId}\n              @value-changed=${this._entityIdChanged}\n              .label=${this.hass.localize(\n                \"ui.dialogs.more_info_settings.entity_id\"\n              )}\n              error-message=\"Domain needs to stay the same\"\n              .invalid=${invalidDomainUpdate}\n              .disabled=${this._submitting}\n            ></paper-input>\n          </div>\n        </paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          <mwc-button\n            class=\"warning\"\n            @click=\"${this._deleteEntry}\"\n            .disabled=${this._submitting}\n          >\n            ${this.hass.localize(\n              \"ui.panel.config.entity_registry.editor.delete\"\n            )}\n          </mwc-button>\n          <mwc-button\n            @click=\"${this._updateEntry}\"\n            .disabled=${invalidDomainUpdate || this._submitting}\n          >\n            ${this.hass.localize(\n              \"ui.panel.config.entity_registry.editor.update\"\n            )}\n          </mwc-button>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private _nameChanged(ev: PolymerChangedEvent<string>): void {\n    this._error = undefined;\n    this._name = ev.detail.value;\n  }\n\n  private _entityIdChanged(ev: PolymerChangedEvent<string>): void {\n    this._error = undefined;\n    this._entityId = ev.detail.value;\n  }\n\n  private async _updateEntry(): Promise<void> {\n    this._submitting = true;\n    try {\n      await this._params!.updateEntry({\n        name: this._name.trim() || null,\n        new_entity_id: this._entityId.trim(),\n      });\n      this._params = undefined;\n    } catch (err) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry(): Promise<void> {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeEntry()) {\n        this._params = undefined;\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        ha-paper-dialog {\n          min-width: 400px;\n        }\n        .form {\n          padding-bottom: 24px;\n        }\n        mwc-button.warning {\n          margin-right: auto;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-entity-registry-detail\": DialogEntityRegistryDetail;\n  }\n}\n\ncustomElements.define(\n  \"dialog-entity-registry-detail\",\n  DialogEntityRegistryDetail\n);\n"],"sourceRoot":""}