{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-alarm-panel-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","themes","concat","Object","keys","hass","sort","html","label","localize","_changed","map","theme","static","css","ev","target","fireEvent","LitElement","configElementStyle","HaEntityPicker","type","Boolean","attribute","Array","memoizeOne","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","filter","eid","computeDomain","stateObj","entity_id","attributes","device_class","changedProps","_get","_getPrototypeOf","prototype","call","has","_opened","_hass","_getStates","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","undefined","disabled","_clearValue","length","stopPropagation","_setValue","detail","newValue","setTimeout","customElements","define","cardConfigStruct","entity","name","HuiAlarmPanelCardEditor","config","_config","_entity","_name","_states","state","index","_stateRemoved","_stateAdded","_theme","Number","newStates","splice","assign","indexOf","push","configValue"],"mappings":"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","file":"chunk.033772bd5318166e4cbe.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.includeDomains,\n      this.excludeDomains,\n      this.entityFilter,\n      this.includeDeviceClasses\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { AlarmPanelCardConfig } from \"../../cards/types\";\n\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-icon\";\nimport \"../../components/hui-theme-select-editor\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  states: \"array?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-alarm-panel-card-editor\")\nexport class HuiAlarmPanelCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: AlarmPanelCardConfig;\n\n  public setConfig(config: AlarmPanelCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _states(): string[] {\n    return this._config!.states || [];\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const states = [\"arm_home\", \"arm_away\", \"arm_night\", \"arm_custom_bypass\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          include-domains='[\"alarm_control_panel\"]'\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.name\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._name}\"\n          .configValue=\"${\"name\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <span>Used States</span> ${this._states.map((state, index) => {\n          return html`\n            <div class=\"states\">\n              <paper-item>${state}</paper-item>\n              <ha-icon\n                class=\"deleteState\"\n                .value=\"${index}\"\n                icon=\"hass:close\"\n                @click=${this._stateRemoved}\n              ></ha-icon>\n            </div>\n          `;\n        })}\n        <paper-dropdown-menu\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.alarm-panel.available_states\"\n          )}\"\n          @value-changed=\"${this._stateAdded}\"\n        >\n          <paper-listbox slot=\"dropdown-content\">\n            ${states.map((state) => {\n              return html`\n                <paper-item>${state}</paper-item>\n              `;\n            })}\n          </paper-listbox>\n        </paper-dropdown-menu>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .states {\n        display: flex;\n        flex-direction: row;\n      }\n      .deleteState {\n        visibility: hidden;\n      }\n      .states:hover > .deleteState {\n        visibility: visible;\n      }\n      ha-icon {\n        padding-top: 12px;\n      }\n    `;\n  }\n\n  private _stateRemoved(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this._states || !this.hass) {\n      return;\n    }\n\n    const target = ev.target! as EditorTarget;\n    const index = Number(target.value);\n    if (index > -1) {\n      const newStates = this._states;\n      newStates.splice(index, 1);\n      this._config = {\n        ...this._config,\n        states: newStates,\n      };\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _stateAdded(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (!target.value || this._states.indexOf(target.value) >= 0) {\n      return;\n    }\n    const newStates = this._states;\n    newStates.push(target.value);\n    this._config = {\n      ...this._config,\n      states: newStates,\n    };\n    target.value = \"\";\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-alarm-panel-card-editor\": HuiAlarmPanelCardEditor;\n  }\n}\n"],"sourceRoot":""}