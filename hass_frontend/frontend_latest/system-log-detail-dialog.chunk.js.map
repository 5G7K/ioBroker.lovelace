{"version":3,"sources":["webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/panels/dev-info/dialog-system-log-detail.ts"],"names":["HaIronFocusablesHelper","getTabbableNodes","node","result","needsSortByTabIndex","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","element","tabIndex","_normalizedTabIndex","needsSort","push","children","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","HaPaperDialog","mixinBehaviors","define","DialogSystemLogDetail","LitElement","properties","_params","showDialog","params","updateComplete","render","html","item","_openedChanged","level","Date","timestamp","message","exception","ev","detail","value","undefined","styles","haStyleDialog","css"],"mappings":"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","file":"system-log-detail-dialog.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import {\n  LitElement,\n  html,\n  css,\n  PropertyDeclarations,\n  CSSResult,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\n\nimport \"../../components/dialog/ha-paper-dialog\";\n\nimport { SystemLogDetailDialogParams } from \"./show-dialog-system-log-detail\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { haStyleDialog } from \"../../resources/styles\";\n\nclass DialogSystemLogDetail extends LitElement {\n  private _params?: SystemLogDetailDialogParams;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      _params: {},\n    };\n  }\n\n  public async showDialog(params: SystemLogDetailDialogParams): Promise<void> {\n    this._params = params;\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n    const item = this._params.item;\n\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>Log Details (${item.level})</h2>\n        <paper-dialog-scrollable>\n          <p>${new Date(item.timestamp * 1000)}</p>\n          ${item.message\n            ? html`\n                <pre>${item.message}</pre>\n              `\n            : html``}\n          ${item.exception\n            ? html`\n                <pre>${item.exception}</pre>\n              `\n            : html``}\n        </paper-dialog-scrollable>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        ha-paper-dialog {\n          direction: ltr;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-system-log-detail\": DialogSystemLogDetail;\n  }\n}\n\ncustomElements.define(\"dialog-system-log-detail\", DialogSystemLogDetail);\n"],"sourceRoot":""}