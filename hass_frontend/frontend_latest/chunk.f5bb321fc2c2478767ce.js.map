{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/process-editor-entities.ts","webpack:///./src/panels/lovelace/components/hui-input-list-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-map-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","Object","index_es","types","entity-id","value","includes","icon","configElementStyle","rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_8__","entity_id","HaEntityPicker","lit_element__WEBPACK_IMPORTED_MODULE_9__","[object Object]","this","_getStates","memoize_one__WEBPACK_IMPORTED_MODULE_6__","hass","domainFilter","entityFilter","states","entityIds","keys","filter","eid","substr","indexOf","sort","map","key","changedProps","super","updated","has","_opened","_hass","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","ev","detail","setTimeout","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_10__","styles","tslib__WEBPACK_IMPORTED_MODULE_0__","type","Boolean","attribute","customElements","define","HuiEntityEditor","lit_element__WEBPACK_IMPORTED_MODULE_1__","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","target","newConfigEntities","concat","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_3__","newEntities","splice","assign","processEditorEntities","hui_input_list_editor_HuiInputListEditor","lit_element","listEntry","inputLabel","_consolidateEntries","_removeEntry","_addEntry","newEntries","fire_event","blur","stopPropagation","parent","currentTarget","parentElement","tslib_es6","entitiesConfigStruct","union","name","cardConfigStruct","title","aspect_ratio","default_zoom","dark_mode","geo_location_sources","hui_map_card_editor_HuiMapCardEditor","config","_config","_configEntities","process_editor_entities","_title","_aspect_ratio","_default_zoom","NaN","_geo_location_sources","_dark_mode","config_elements_style","_entitiesValueChanged","configValue","isNaN","Number","checked"],"mappings":"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","file":"chunk.f5bb321fc2c2478767ce.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Clear\"\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Show entities\"\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>Entities</h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import { EntityConfig } from \"../entity-rows/types\";\n\nexport function processEditorEntities(entities): EntityConfig[] {\n  return entities.map((entityConf) => {\n    if (typeof entityConf === \"string\") {\n      return { entity: entityConf };\n    }\n    return entityConf;\n  });\n}\n","import {\n  html,\n  css,\n  LitElement,\n  property,\n  TemplateResult,\n  CSSResult,\n  customElement,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\n\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-input-list-editor\")\nexport class HuiInputListEditor extends LitElement {\n  @property() protected value?: string[];\n  @property() protected hass?: HomeAssistant;\n  @property() protected inputLabel?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.value) {\n      return html``;\n    }\n\n    return html`\n      ${this.value.map((listEntry, index) => {\n        return html`\n          <paper-input\n            label=\"${this.inputLabel}\"\n            .value=\"${listEntry}\"\n            .configValue=\"${\"entry\"}\"\n            .index=\"${index}\"\n            @value-changed=\"${this._valueChanged}\"\n            @blur=\"${this._consolidateEntries}\"\n            ><paper-icon-button\n              slot=\"suffix\"\n              class=\"clear-button\"\n              icon=\"hass:close\"\n              no-ripple\n              @click=\"${this._removeEntry}\"\n              >Clear</paper-icon-button\n            ></paper-input\n          >\n        `;\n      })}\n      <paper-input\n        label=\"${this.inputLabel}\"\n        @change=\"${this._addEntry}\"\n      ></paper-input>\n    `;\n  }\n\n  private _addEntry(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newEntries = this.value!.concat(target.value as string);\n    target.value = \"\";\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n    (ev.target! as LitElement).blur();\n  }\n\n  private _valueChanged(ev: Event): void {\n    ev.stopPropagation();\n    const target = ev.target! as EditorTarget;\n    const newEntries = this.value!.concat();\n    newEntries[target.index!] = target.value!;\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  private _consolidateEntries(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      const newEntries = this.value!.concat();\n      newEntries.splice(target.index!, 1);\n      fireEvent(this, \"value-changed\", {\n        value: newEntries,\n      });\n    }\n  }\n\n  private _removeEntry(ev: Event): void {\n    const parent = (ev.currentTarget as any).parentElement;\n    const newEntries = this.value!.concat();\n    newEntries.splice(parent.index!, 1);\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-list-editor\": HuiInputListEditor;\n  }\n}\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-entity-editor\";\nimport \"../../components/hui-input-list-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { MapCardConfig } from \"../../cards/types\";\n\nconst entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  aspect_ratio: \"string?\",\n  default_zoom: \"number?\",\n  dark_mode: \"boolean?\",\n  entities: [entitiesConfigStruct],\n  geo_location_sources: \"array?\",\n});\n\n@customElement(\"hui-map-card-editor\")\nexport class HuiMapCardEditor extends LitElement implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MapCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: MapCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _default_zoom(): number {\n    return this._config!.default_zoom || NaN;\n  }\n\n  get _geo_location_sources(): string[] {\n    return this._config!.geo_location_sources || [];\n  }\n\n  get _dark_mode(): boolean {\n    return this._config!.dark_mode || false;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Aspect Ratio\"\n            .value=\"${this._aspect_ratio}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            label=\"Default Zoom\"\n            type=\"number\"\n            .value=\"${this._default_zoom}\"\n            .configValue=\"${\"default_zoom\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <paper-toggle-button\n          ?checked=\"${this._dark_mode !== false}\"\n          .configValue=\"${\"dark_mode\"}\"\n          @change=\"${this._valueChanged}\"\n          >Dark Mode?</paper-toggle-button\n        >\n        <hui-entity-editor\n          .hass=\"${this.hass}\"\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._entitiesValueChanged}\"\n        ></hui-entity-editor>\n        <h3>Geolocation Sources</h3>\n        <div class=\"geo_location_sources\">\n          <hui-input-list-editor\n            inputLabel=\"Source\"\n            .hass=\"${this.hass}\"\n            .value=\"${this._geo_location_sources}\"\n            .configValue=\"${\"geo_location_sources\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></hui-input-list-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _entitiesValueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<any>): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (\n      target.configValue &&\n      ev.detail &&\n      this[`_${target.configValue}`] === ev.detail.value\n    ) {\n      return;\n    }\n    if (target.configValue && ev.detail) {\n      if (\n        ev.detail.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(ev.detail.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = ev.detail.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue]:\n            target.checked !== undefined ? target.checked : value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .geo_location_sources {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-map-card-editor\": HuiMapCardEditor;\n  }\n}\n"],"sourceRoot":""}