{"version":3,"sources":["webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/panels/config/cloud/cloud-webhook-manage-dialog.ts"],"names":["HaIronFocusablesHelper","getTabbableNodes","node","result","needsSortByTabIndex","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","element","tabIndex","_normalizedTabIndex","needsSort","push","children","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","HaPaperDialog","mixinBehaviors","define","inputLabel","CloudWebhookManageDialog","LitElement","properties","_params","showDialog","params","updateComplete","_dialog","open","render","html","webhook","cloudhook","docsUrl","domain","name","cloudhook_url","_copyClipboard","_restoreLabel","managed","_disableWebhook","_closeDialog","querySelector","_paperInput","close","confirm","disableHook","ev","paperInput","currentTarget","input","inputElement","setSelectionRange","value","document","execCommand","label","err","styles","haStyle","css"],"mappings":"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","file":"cloud-webhook-manage-dialog.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  css,\n  CSSResult,\n} from \"lit-element\";\n\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"../../../components/dialog/ha-paper-dialog\";\n// This is not a duplicate import, one is for types, one is for element.\n// tslint:disable-next-line\nimport { HaPaperDialog } from \"../../../components/dialog/ha-paper-dialog\";\n// tslint:disable-next-line\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { WebhookDialogParams } from \"./show-cloud-webhook-manage-dialog\";\n\nconst inputLabel = \"Public URL – Click to copy to clipboard\";\n\nexport class CloudWebhookManageDialog extends LitElement {\n  protected hass?: HomeAssistant;\n  private _params?: WebhookDialogParams;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      _params: {},\n    };\n  }\n\n  public async showDialog(params: WebhookDialogParams) {\n    this._params = params;\n    // Wait till dialog is rendered.\n    await this.updateComplete;\n    this._dialog.open();\n  }\n\n  protected render() {\n    if (!this._params) {\n      return html``;\n    }\n    const { webhook, cloudhook } = this._params;\n    const docsUrl =\n      webhook.domain === \"automation\"\n        ? \"https://www.home-assistant.io/docs/automation/trigger/#webhook-trigger\"\n        : `https://www.home-assistant.io/components/${webhook.domain}/`;\n    return html`\n      <ha-paper-dialog with-backdrop>\n        <h2>Webhook for ${webhook.name}</h2>\n        <div>\n          <p>The webhook is available at the following url:</p>\n          <paper-input\n            label=\"${inputLabel}\"\n            value=\"${cloudhook.cloudhook_url}\"\n            @click=\"${this._copyClipboard}\"\n            @blur=\"${this._restoreLabel}\"\n          ></paper-input>\n          <p>\n            ${cloudhook.managed\n              ? html`\n                  This webhook is managed by an integration and cannot be\n                  disabled.\n                `\n              : html`\n                  If you no longer want to use this webhook, you can\n                  <button class=\"link\" @click=\"${this._disableWebhook}\">\n                    disable it</button\n                  >.\n                `}\n          </p>\n        </div>\n\n        <div class=\"paper-dialog-buttons\">\n          <a href=\"${docsUrl}\" target=\"_blank\"\n            ><mwc-button>VIEW DOCUMENTATION</mwc-button></a\n          >\n          <mwc-button @click=\"${this._closeDialog}\">CLOSE</mwc-button>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private get _paperInput(): PaperInputElement {\n    return this.shadowRoot!.querySelector(\"paper-input\")!;\n  }\n\n  private _closeDialog() {\n    this._dialog.close();\n  }\n\n  private async _disableWebhook() {\n    if (!confirm(\"Are you sure you want to disable this webhook?\")) {\n      return;\n    }\n\n    this._params!.disableHook();\n    this._closeDialog();\n  }\n\n  private _copyClipboard(ev: FocusEvent) {\n    // paper-input -> iron-input -> input\n    const paperInput = ev.currentTarget as PaperInputElement;\n    const input = (paperInput.inputElement as any)\n      .inputElement as HTMLInputElement;\n    input.setSelectionRange(0, input.value.length);\n    try {\n      document.execCommand(\"copy\");\n      paperInput.label = \"COPIED TO CLIPBOARD\";\n    } catch (err) {\n      // Copying failed. Oh no\n    }\n  }\n\n  private _restoreLabel() {\n    this._paperInput.label = inputLabel;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        ha-paper-dialog {\n          width: 650px;\n        }\n        paper-input {\n          margin-top: -8px;\n        }\n        button.link {\n          color: var(--primary-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-webhook-manage-dialog\": CloudWebhookManageDialog;\n  }\n}\n\ncustomElements.define(\"cloud-webhook-manage-dialog\", CloudWebhookManageDialog);\n"],"sourceRoot":""}