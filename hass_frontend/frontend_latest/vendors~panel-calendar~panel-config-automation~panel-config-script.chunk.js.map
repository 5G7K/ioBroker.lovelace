{"version":3,"sources":["webpack:///./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js","webpack:///./node_modules/@polymer/paper-item/paper-item-behavior.js","webpack:///./node_modules/@polymer/paper-item/paper-item-shared-styles.js","webpack:///./node_modules/@polymer/paper-item/paper-item.js","webpack:///../src/vnode.js","webpack:///../src/options.js","webpack:///../src/h.js","webpack:///../src/util.js","webpack:///../src/clone-element.js","webpack:///../src/constants.js","webpack:///../src/render-queue.js","webpack:///../src/vdom/index.js","webpack:///../src/dom/index.js","webpack:///../src/vdom/diff.js","webpack:///../src/vdom/component-recycler.js","webpack:///../src/vdom/component.js","webpack:///../src/component.js","webpack:///../src/render.js","webpack:///../src/preact.js"],"names":["Polymer","_template","html","is","behaviors","AppLayoutBehavior","properties","hasScrollingRegion","type","Boolean","value","reflectToAttribute","observers","header","dom","$","headerSlot","getDistributedNodes","_updateLayoutStates","isAttached","wrapper","classList","remove","scrollTarget","contentContainer","ownerDocument","documentElement","headerHeight","offsetHeight","requestAnimationFrame","rect","getBoundingClientRect","rightOffset","document","clientWidth","right","style","left","bind","containerStyle","fixed","condenses","marginTop","paddingTop","PaperItemBehaviorImpl","hostAttributes","role","tabindex","PaperItemBehavior","IronButtonState","IronControlState","$_documentContainer","createElement","setAttribute","innerHTML","head","appendChild","content","VNode","options","stack","EMPTY_CHILDREN","children","i","arguments","attributes","child","simple","String","p","props","ref","defer","Promise","h","vnode","extend","SYNC_RENDER","ASYNC_RENDER","IS_NON_DIMENSIONAL","items","isSameNodeType","node","_componentConstructor","isNamedNode","normalizedNodeName","undefined","createElementNS","nodeName","removeNode","parentNode","name","old","useCapture","toLowerCase","_listeners","ns","eventProxy","mounts","diffLevel","hydrating","flushMounts","c","ret","componentRoot","out","prevSvgMode","ATTR_KEY","buildComponentFromVNode","vnodeName","firstChild","vchildren","nodeValue","min","len","originalChildren","length","childrenLen","vlen","j","f","vchild","key","keyedLen","keyed","component","applyRef","unmountOnly","next","previousSibling","diffAttributes","attrs","recyclerComponents","Ctor","nextBase","doRender","constructor","setComponentProps","_disable","componentWillReceiveProps","context","prevContext","renderMode","syncComponentUpdates","renderComponent","state","isUpdate","initialBase","snapshot","rendered","inst","cbase","FORCE_RENDER","shouldComponentUpdate","prevProps","_dirty","getSnapshotBeforeUpdate","childComponent","toUnmount","base","childProps","initialChildComponent","_parentComponent","_component","diff","baseParent","replaceChild","componentRef","t","push","previousProps","afterUpdate","_renderCallbacks","isChild","originalComponent","oldDom","isDirectOwner","isOwner","getNodeProps","createComponent","beforeUnmount","callback"],"mappings":"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","file":"vendors~panel-calendar~panel-config-automation~panel-config-script.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {AppLayoutBehavior} from '../app-layout-behavior/app-layout-behavior.js';\n\n/**\napp-header-layout is a wrapper element that positions an app-header and other\ncontent. This element uses the document scroll by default, but it can also\ndefine its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of\nits container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n@group App Elements\n@element app-header-layout\n@demo app-header-layout/demo/simple.html Simple Demo\n@demo app-header-layout/demo/scrolling-region.html Scrolling Region\n@demo app-header-layout/demo/music.html Music Demo\n@demo app-header-layout/demo/footer.html Footer Demo\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n        position: relative;\n        z-index: 0;\n      }\n\n      #wrapper ::slotted([slot=header]) {\n        @apply --layout-fixed-top;\n        z-index: 1;\n      }\n\n      #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) {\n        height: 100%;\n      }\n\n      :host([has-scrolling-region]) #wrapper ::slotted([slot=header]) {\n        position: absolute;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) #wrapper #contentContainer {\n        @apply --layout-fit;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n        position: relative;\n      }\n\n      :host([fullbleed]) {\n        @apply --layout-vertical;\n        @apply --layout-fit;\n      }\n\n      :host([fullbleed]) #wrapper,\n      :host([fullbleed]) #wrapper #contentContainer {\n        @apply --layout-vertical;\n        @apply --layout-flex;\n      }\n\n      #contentContainer {\n        /* Create a stacking context here so that all children appear below the header. */\n        position: relative;\n        z-index: 0;\n      }\n\n      @media print {\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          overflow-y: visible;\n        }\n      }\n\n    </style>\n\n    <div id=\"wrapper\" class=\"initializing\">\n      <slot id=\"headerSlot\" name=\"header\"></slot>\n\n      <div id=\"contentContainer\">\n        <slot></slot>\n      </div>\n    </div>\n`,\n\n  is: 'app-header-layout',\n  behaviors: [AppLayoutBehavior],\n\n  properties: {\n    /**\n     * If true, the current element will have its own scrolling region.\n     * Otherwise, it will use the document scroll to control the header.\n     */\n    hasScrollingRegion: {type: Boolean, value: false, reflectToAttribute: true}\n  },\n\n  observers: ['resetLayout(isAttached, hasScrollingRegion)'],\n\n  /**\n   * A reference to the app-header element.\n   *\n   * @property header\n   */\n  get header() {\n    return dom(this.$.headerSlot).getDistributedNodes()[0];\n  },\n\n  _updateLayoutStates: function() {\n    var header = this.header;\n    if (!this.isAttached || !header) {\n      return;\n    }\n    // Remove the initializing class, which staticly positions the header and\n    // the content until the height of the header can be read.\n    this.$.wrapper.classList.remove('initializing');\n    // Update scroll target.\n    header.scrollTarget = this.hasScrollingRegion ?\n        this.$.contentContainer :\n        this.ownerDocument.documentElement;\n    // Get header height here so that style reads are batched together before\n    // style writes (i.e. getBoundingClientRect() below).\n    var headerHeight = header.offsetHeight;\n    // Update the header position.\n    if (!this.hasScrollingRegion) {\n      requestAnimationFrame(function() {\n        var rect = this.getBoundingClientRect();\n        var rightOffset = document.documentElement.clientWidth - rect.right;\n        header.style.left = rect.left + 'px';\n        header.style.right = rightOffset + 'px';\n      }.bind(this));\n    } else {\n      header.style.left = '';\n      header.style.right = '';\n    }\n    // Update the content container position.\n    var containerStyle = this.$.contentContainer.style;\n    if (header.fixed && !header.condenses && this.hasScrollingRegion) {\n      // If the header size does not change and we're using a scrolling region,\n      // exclude the header area from the scrolling region so that the header\n      // doesn't overlap the scrollbar.\n      containerStyle.marginTop = headerHeight + 'px';\n      containerStyle.paddingTop = '';\n    } else {\n      containerStyle.paddingTop = headerHeight + 'px';\n      containerStyle.marginTop = '';\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\n\n/*\n`PaperItemBehavior` is a convenience behavior shared by <paper-item> and\n<paper-icon-item> that manages the shared control states and attributes of\nthe items.\n*/\n/** @polymerBehavior PaperItemBehavior */\nexport const PaperItemBehaviorImpl = {\n  hostAttributes: {role: 'option', tabindex: '0'}\n};\n\n/** @polymerBehavior */\nexport const PaperItemBehavior =\n    [IronButtonState, IronControlState, PaperItemBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/color.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-item-shared-styles\">\n  <template>\n    <style>\n      :host, .paper-item {\n        display: block;\n        position: relative;\n        min-height: var(--paper-item-min-height, 48px);\n        padding: 0px 16px;\n      }\n\n      .paper-item {\n        @apply --paper-font-subhead;\n        border:none;\n        outline: none;\n        background: white;\n        width: 100%;\n        text-align: left;\n      }\n\n      :host([hidden]), .paper-item[hidden] {\n        display: none !important;\n      }\n\n      :host(.iron-selected), .paper-item.iron-selected {\n        font-weight: var(--paper-item-selected-weight, bold);\n\n        @apply --paper-item-selected;\n      }\n\n      :host([disabled]), .paper-item[disabled] {\n        color: var(--paper-item-disabled-color, var(--disabled-text-color));\n\n        @apply --paper-item-disabled;\n      }\n\n      :host(:focus), .paper-item:focus {\n        position: relative;\n        outline: 0;\n\n        @apply --paper-item-focused;\n      }\n\n      :host(:focus):before, .paper-item:focus:before {\n        @apply --layout-fit;\n\n        background: currentColor;\n        content: '';\n        opacity: var(--dark-divider-opacity);\n        pointer-events: none;\n\n        @apply --paper-item-focused-before;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/**\nMaterial design:\n[Lists](https://www.google.com/design/spec/components/lists.html)\n\n`<paper-item>` is an interactive list item. By default, it is a horizontal\nflexbox.\n\n    <paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled\ntwo-line and three-line items.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n      <iron-icon icon=\"warning\"></iron-icon>\n    </paper-item>\n\nTo use `paper-item` as a link, wrap it in an anchor tag. Since `paper-item` will\nalready receive focus, you may want to prevent the anchor tag from receiving\nfocus as well by setting its tabindex to -1.\n\n    <a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n      <paper-item raised>Polymer Project</paper-item>\n    </a>\n\nIf you are concerned about performance and want to use `paper-item` in a\n`paper-listbox` with many items, you can just use a native `button` with the\n`paper-item` class applied (provided you have correctly included the shared\nstyles):\n\n    <style is=\"custom-style\" include=\"paper-item-shared-styles\"></style>\n\n    <paper-listbox>\n      <button class=\"paper-item\" role=\"option\">Inbox</button>\n      <button class=\"paper-item\" role=\"option\">Starred</button>\n      <button class=\"paper-item\" role=\"option\">Sent mail</button>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be\nmore appropriate to set `role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or\n`role=\"menuitemradio\"`.\n\n    <paper-item role=\"menuitemcheckbox\">\n      <paper-item-body>\n        Show your status\n      </paper-item-body>\n      <paper-checkbox></paper-checkbox>\n    </paper-item>\n\n@group Paper Elements\n@element paper-item\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\">\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n      }\n    </style>\n    <slot></slot>\n`,\n\n  is: 'paper-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref!=null) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","import { diff } from './vdom/diff';\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').PreactElement} parent DOM element to render into\n * @param {import('./dom').PreactElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nfunction createRef() {\n\treturn {};\n}\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n"],"sourceRoot":""}