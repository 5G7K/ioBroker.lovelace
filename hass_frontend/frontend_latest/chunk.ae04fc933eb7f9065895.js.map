{"version":3,"sources":["webpack:///./src/panels/config/ha-config-section.js","webpack:///./src/common/string/compare.ts","webpack:///./src/panels/config/person/show-dialog-person-detail.ts","webpack:///./src/panels/config/person/ha-config-person.ts","webpack:///./src/data/person.ts"],"names":["_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_1__","customElements","define","PolymerElement","template","html","properties","hass","type","Object","narrow","Boolean","isWide","value","computeContentClasses","classes","computeClasses","d","__webpack_exports__","compare","caseInsensitiveCompare","a","b","toLowerCase","loadPersonDetailDialog","Promise","all","e","then","bind","HaConfigPerson","_LitElement","[object Object]","args","super","_initialize","this","property","undefined","_storageItems","_configItems","localize","length","map","entry","_openEditEntry","name","_createPerson","changedProps","_get","_getPrototypeOf","prototype","call","_fetchData","async","_usersLoad","fetchUsers","personData","callWS","fetchPersons","storage","sort","ent1","ent2","config","_openDialog","ev","currentTarget","users","currentPerson","used","Set","coll","pers","user_id","add","currentUserId","filter","user","id","has","element","systemLogDetailParams","_allowedUsers","createEntry","created","values","assign","createPerson","concat","updateEntry","updated","personId","updates","person_id","updatePerson","ent","removeEntry","confirm","deletePerson","err","fireEvent","dialogTag","dialogImport","dialogParams","css","LitElement"],"mappings":"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","file":"chunk.ae04fc933eb7f9065895.js","sourcesContent":["import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../resources/ha-style\";\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 28px 20px 0;\n          max-width: 1040px;\n          margin: 0 auto;\n        }\n\n        .header {\n          @apply --paper-font-display1;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .together {\n          margin-top: 32px;\n        }\n\n        .intro {\n          @apply --paper-font-subhead;\n          width: 100%;\n          max-width: 400px;\n          margin-right: 40px;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .panel {\n          margin-top: -24px;\n        }\n\n        .panel ::slotted(*) {\n          margin-top: 24px;\n          display: block;\n        }\n\n        .narrow.content {\n          max-width: 640px;\n        }\n        .narrow .together {\n          margin-top: 20px;\n        }\n        .narrow .header {\n          @apply --paper-font-headline;\n        }\n        .narrow .intro {\n          font-size: 14px;\n          padding-bottom: 20px;\n          margin-right: 0;\n          max-width: 500px;\n        }\n      </style>\n      <div class$=\"[[computeContentClasses(isWide)]]\">\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = \"content \";\n\n    return isWide ? classes : classes + \"narrow\";\n  }\n\n  computeClasses(isWide) {\n    var classes = \"together layout \";\n\n    return classes + (isWide ? \"horizontal\" : \"vertical narrow\");\n  }\n}\n\ncustomElements.define(\"ha-config-section\", HaConfigSection);\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { Person, PersonMutableParams } from \"../../../data/person\";\nimport { User } from \"../../../data/user\";\n\nexport interface PersonDetailDialogParams {\n  entry?: Person;\n  users: User[];\n  createEntry: (values: PersonMutableParams) => Promise<unknown>;\n  updateEntry: (updates: Partial<PersonMutableParams>) => Promise<unknown>;\n  removeEntry: () => Promise<boolean>;\n}\n\nexport const loadPersonDetailDialog = () =>\n  import(/* webpackChunkName: \"person-detail-dialog\" */ \"./dialog-person-detail\");\n\nexport const showPersonDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: PersonDetailDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-person-detail\",\n    dialogImport: loadPersonDetailDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport {\n  Person,\n  fetchPersons,\n  updatePerson,\n  deletePerson,\n  createPerson,\n} from \"../../../data/person\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../layouts/hass-loading-screen\";\nimport { compare } from \"../../../common/string/compare\";\nimport \"../ha-config-section\";\nimport {\n  showPersonDetailDialog,\n  loadPersonDetailDialog,\n} from \"./show-dialog-person-detail\";\nimport { User, fetchUsers } from \"../../../data/user\";\n\nclass HaConfigPerson extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public isWide?: boolean;\n  @property() private _storageItems?: Person[];\n  @property() private _configItems?: Person[];\n  private _usersLoad?: Promise<User[]>;\n\n  protected render(): TemplateResult | void {\n    if (\n      !this.hass ||\n      this._storageItems === undefined ||\n      this._configItems === undefined\n    ) {\n      return html`\n        <hass-loading-screen></hass-loading-screen>\n      `;\n    }\n    const hass = this.hass;\n    return html`\n      <hass-subpage header=${hass.localize(\"ui.panel.config.person.caption\")}>\n        <ha-config-section .isWide=${this.isWide}>\n          <span slot=\"header\"\n            >${hass.localize(\"ui.panel.config.person.caption\")}</span\n          >\n          <span slot=\"introduction\">\n            ${hass.localize(\"ui.panel.config.person.introduction\")}\n            ${this._configItems.length > 0\n              ? html`\n                  <p>\n                    ${hass.localize(\n                      \"ui.panel.config.person.note_about_persons_configured_in_yaml\"\n                    )}\n                  </p>\n                `\n              : \"\"}\n          </span>\n          <ha-card class=\"storage\">\n            ${this._storageItems.map((entry) => {\n              return html`\n                <paper-item @click=${this._openEditEntry} .entry=${entry}>\n                  <paper-item-body>\n                    ${entry.name}\n                  </paper-item-body>\n                </paper-item>\n              `;\n            })}\n            ${this._storageItems.length === 0\n              ? html`\n                  <div class=\"empty\">\n                    ${hass.localize(\n                      \"ui.panel.config.person.no_persons_created_yet\"\n                    )}\n                    <mwc-button @click=${this._createPerson}>\n                      ${hass.localize(\n                        \"ui.panel.config.person.create_person\"\n                      )}</mwc-button\n                    >\n                  </div>\n                `\n              : html``}\n          </ha-card>\n          ${this._configItems.length > 0\n            ? html`\n                <ha-card header=\"Configuration.yaml persons\">\n                  ${this._configItems.map((entry) => {\n                    return html`\n                      <paper-item>\n                        <paper-item-body>\n                          ${entry.name}\n                        </paper-item-body>\n                      </paper-item>\n                    `;\n                  })}\n                </ha-card>\n              `\n            : \"\"}\n        </ha-config-section>\n      </hass-subpage>\n\n      <ha-fab\n        ?is-wide=${this.isWide}\n        icon=\"hass:plus\"\n        title=\"${hass.localize(\"ui.panel.config.person.add_person\")}\"\n        @click=${this._createPerson}\n      ></ha-fab>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n    loadPersonDetailDialog();\n  }\n\n  private async _fetchData() {\n    this._usersLoad = fetchUsers(this.hass!);\n    const personData = await fetchPersons(this.hass!);\n\n    this._storageItems = personData.storage.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n    this._configItems = personData.config.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n  }\n\n  private _createPerson() {\n    this._openDialog();\n  }\n\n  private _openEditEntry(ev: MouseEvent) {\n    const entry: Person = (ev.currentTarget! as any).entry;\n    this._openDialog(entry);\n  }\n\n  private _allowedUsers(users: User[], currentPerson?: Person) {\n    const used = new Set();\n    for (const coll of [this._configItems, this._storageItems]) {\n      for (const pers of coll!) {\n        if (pers.user_id) {\n          used.add(pers.user_id);\n        }\n      }\n    }\n    const currentUserId = currentPerson ? currentPerson.user_id : undefined;\n    return users.filter(\n      (user) => user.id === currentUserId || !used.has(user.id)\n    );\n  }\n\n  private async _openDialog(entry?: Person) {\n    const users = await this._usersLoad!;\n\n    showPersonDetailDialog(this, {\n      entry,\n      users: this._allowedUsers(users, entry),\n      createEntry: async (values) => {\n        const created = await createPerson(this.hass!, values);\n        this._storageItems = this._storageItems!.concat(created).sort(\n          (ent1, ent2) => compare(ent1.name, ent2.name)\n        );\n      },\n      updateEntry: async (values) => {\n        const updated = await updatePerson(this.hass!, entry!.id, values);\n        this._storageItems = this._storageItems!.map((ent) =>\n          ent === entry ? updated : ent\n        );\n      },\n      removeEntry: async () => {\n        if (\n          !confirm(`${this.hass!.localize(\n            \"ui.panel.config.person.confirm_delete\"\n          )}\n\n${this.hass!.localize(\"ui.panel.config.person.confirm_delete2\")}`)\n        ) {\n          return false;\n        }\n\n        try {\n          await deletePerson(this.hass!, entry!.id);\n          this._storageItems = this._storageItems!.filter(\n            (ent) => ent !== entry\n          );\n          return true;\n        } catch (err) {\n          return false;\n        }\n      },\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card {\n        max-width: 600px;\n        margin: 16px auto;\n        overflow: hidden;\n      }\n      .empty {\n        text-align: center;\n        padding: 8px;\n      }\n      paper-item {\n        padding-top: 4px;\n        padding-bottom: 4px;\n      }\n      ha-card.storage paper-item {\n        cursor: pointer;\n      }\n      ha-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n\n      ha-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-config-person\", HaConfigPerson);\n","import { HomeAssistant } from \"../types\";\n\nexport interface Person {\n  id: string;\n  name: string;\n  user_id?: string;\n  device_trackers?: string[];\n}\n\nexport interface PersonMutableParams {\n  name: string;\n  user_id: string | null;\n  device_trackers: string[];\n}\n\nexport const fetchPersons = (hass: HomeAssistant) =>\n  hass.callWS<{\n    storage: Person[];\n    config: Person[];\n  }>({ type: \"person/list\" });\n\nexport const createPerson = (\n  hass: HomeAssistant,\n  values: PersonMutableParams\n) =>\n  hass.callWS<Person>({\n    type: \"person/create\",\n    ...values,\n  });\n\nexport const updatePerson = (\n  hass: HomeAssistant,\n  personId: string,\n  updates: Partial<PersonMutableParams>\n) =>\n  hass.callWS<Person>({\n    type: \"person/update\",\n    person_id: personId,\n    ...updates,\n  });\n\nexport const deletePerson = (hass: HomeAssistant, personId: string) =>\n  hass.callWS({\n    type: \"person/delete\",\n    person_id: personId,\n  });\n"],"sourceRoot":""}