{"version":3,"sources":["webpack:///./src/components/ha-fab.ts","webpack:///./src/common/search/search-input.ts","webpack:///./src/components/data-table/sort_filter_worker.ts","webpack:///./src/components/ha-checkbox.ts","webpack:///./src/components/data-table/ha-data-table.ts","webpack:///./src/panels/lovelace/common/compute-unused-entities.ts","webpack:///./src/panels/lovelace/editor/unused-entities/hui-unused-entities.ts","webpack:///./src/panels/lovelace/editor/select-view/show-select-view-dialog.ts"],"names":["MwcFab","customElements","get","_decorate","customElement","_initialize","_MwcFab","F","[object Object]","args","super","this","d","kind","key","value","classes","mdc-fab--mini","mini","mdc-fab--exited","exited","mdc-fab--extended","extended","showLabel","label","html","ripple","classMap","disabled","icon","showIconAtEnd","_LitElement","property","filter","_filterInputChanged","_clearSearch","async","fireEvent","String","e","_filterChanged","target","css","LitElement","addMethods","__webpack_require__","methods","module","exports","w","Worker","p","name","MwcCheckbox","_MwcCheckbox","HaCheckbox","_get","_getPrototypeOf","prototype","call","style","setProperty","static","ha_data_table_decorate","_BaseElement","HaDataTable","decorators","type","Object","Array","Boolean","MDCDataTableFoundation","query","queryAll","debounce","ev","_filter","detail","ha_data_table_get","ha_data_table_getPrototypeOf","_worker","sortFilterWorker","properties","has","_filterable","values","columns","some","column","filterable","columnId","direction","_sortDirection","_sortColumn","clonedColumns","deepClone","forEach","title","template","_sortColumns","_filterData","_handleSearchChange","selectable","_handleHeaderRowCheckboxChange","_headerIndeterminate","_headerChecked","entries","map","columnEntry","sorted","mdc-data-table__header-cell--numeric","mdc-data-table__header-cell--icon","sortable","not-sorted","_handleHeaderClick","repeat","_filteredData","row","id","_handleRowClick","_handleRowCheckboxChange","_checkedRows","includes","mdc-data-table__cell--numeric","mdc-data-table__cell--icon","addClassAtRowIndex","rowIndex","cssClasses","rowElements","classList","add","getRowCount","data","length","getRowElements","getRowIdAtIndex","_getRowIdAtIndex","getRowIndexByChildElement","el","indexOf","closest","getSelectedRowCount","isCheckboxAtRowIndexChecked","isHeaderRowCheckboxChecked","isRowsSelectable","notifyRowSelectionChanged","undefined","notifySelectedAll","notifyUnselectedAll","registerHeaderRowCheckbox","registerRowCheckboxes","removeClassAtRowIndex","remove","setAttributeAtRowIndex","attr","setAttribute","setHeaderRowCheckboxChecked","checked","setHeaderRowCheckboxIndeterminate","indeterminate","setRowCheckboxCheckedAtIndex","_setRowChecked","startTime","Date","getTime","curRequest","filterProm","filterSortData","Promise","all","nextRender","elapsed","resolve","setTimeout","getAttribute","_headerCheckbox","mdcFoundation","handleHeaderRowCheckboxChange","checkbox","rowId","handleRowCheckboxChange","bubbles","index","splice","selected","_debounceSearch","BaseElement","EXCLUDED_DOMAINS","addFromAction","entities","actionConfig","action","service_data","entity_id","entityIds","isArray","entityId","addEntityId","entity","camera_image","tap_action","hold_action","addEntities","obj","card","cards","elements","badges","badge","computeUnusedEntities","hass","config","usedEntities","Set","views","view","computeUsedEntities","keys","states","split","sort","HuiUnusedEntities","hui_unused_entities_decorate","lovelace","memoizeOne","narrow","localize","filterKey","stateObj","_handleEntityClicked","friendly_name","domain","last_changed","lastChanged","changedProperties","hui_unused_entities_get","hui_unused_entities_getPrototypeOf","_getUnusedEntities","mode","editMode","_columns","_unusedEntities","assign","computeStateName","computeDomain","_handleSelectionChanged","rtl","computeRTL","_selectView","_selectedEntities","_config","changedSelection","push","element","selectViewDialogParams","viewSelectedCallback","_addCard","dialogTag","dialogImport","then","bind","dialogParams","showEditCardDialog","path"],"mappings":"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","file":"chunk.2aedc81f99d3f3726d95.js","sourcesContent":["import { classMap } from \"lit-html/directives/class-map\";\nimport { html, customElement } from \"lit-element\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive.js\";\n\nimport \"@material/mwc-fab\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nimport { Fab } from \"@material/mwc-fab\";\n// tslint:disable-next-line\nconst MwcFab = customElements.get(\"mwc-fab\") as Constructor<Fab>;\n\n@customElement(\"ha-fab\")\nexport class HaFab extends MwcFab {\n  // We override the render method because we don't have an icon font and mwc-fab doesn't support our svg-icon sets.\n  // Based on version mwc-fab 0.8\n  protected render() {\n    const classes = {\n      \"mdc-fab--mini\": this.mini,\n      \"mdc-fab--exited\": this.exited,\n      \"mdc-fab--extended\": this.extended,\n    };\n    const showLabel = this.label !== \"\" && this.extended;\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-fab ${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label || this.icon}\"\n      >\n        ${showLabel && this.showIconAtEnd ? this.label : \"\"}\n        ${this.icon\n          ? html`\n              <ha-icon .icon=${this.icon}></ha-icon>\n            `\n          : \"\"}\n        ${showLabel && !this.showIconAtEnd ? this.label : \"\"}\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { TemplateResult, html } from \"lit-html\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  LitElement,\n  property,\n} from \"lit-element\";\nimport { fireEvent } from \"../dom/fire_event\";\nimport \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@material/mwc-button\";\n\n@customElement(\"search-input\")\nclass SearchInput extends LitElement {\n  @property() private filter?: string;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div class=\"search-container\">\n        <paper-input\n          autofocus\n          label=\"Search\"\n          .value=${this.filter}\n          @value-changed=${this._filterInputChanged}\n        >\n          <iron-icon\n            icon=\"hass:magnify\"\n            slot=\"prefix\"\n            class=\"prefix\"\n          ></iron-icon>\n          ${this.filter &&\n            html`\n              <paper-icon-button\n                slot=\"suffix\"\n                class=\"suffix\"\n                @click=${this._clearSearch}\n                icon=\"hass:close\"\n                alt=\"Clear\"\n                title=\"Clear\"\n              ></paper-icon-button>\n            `}\n        </paper-input>\n      </div>\n    `;\n  }\n\n  private async _filterChanged(value: string) {\n    fireEvent(this, \"value-changed\", { value: String(value) });\n  }\n\n  private async _filterInputChanged(e) {\n    this._filterChanged(e.target.value);\n  }\n\n  private async _clearSearch() {\n    this._filterChanged(\"\");\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input {\n        flex: 1 1 auto;\n        margin: 0 16px;\n      }\n      .search-container {\n        display: inline-flex;\n        width: 100%;\n        align-items: center;\n      }\n      .prefix {\n        margin: 8px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"search-input\": SearchInput;\n  }\n}\n","\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"filterSortData\",\"filterData\",\"sortData\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"1d8c8c6f94d2e5128c94.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import { customElement, CSSResult, css } from \"lit-element\";\nimport \"@material/mwc-checkbox\";\n// tslint:disable-next-line\nimport { Checkbox } from \"@material/mwc-checkbox\";\nimport { style } from \"@material/mwc-checkbox/mwc-checkbox-css\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nconst MwcCheckbox = customElements.get(\"mwc-checkbox\") as Constructor<Checkbox>;\n\n@customElement(\"ha-checkbox\")\nexport class HaCheckbox extends MwcCheckbox {\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\"--mdc-theme-secondary\", \"var(--primary-color)\");\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate)\n          ~ .mdc-checkbox__background {\n          border-color: rgba(var(--rgb-primary-text-color), 0.54);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-checkbox\": HaCheckbox;\n  }\n}\n","import { repeat } from \"lit-html/directives/repeat\";\nimport deepClone from \"deep-clone-simple\";\n\nimport {\n  MDCDataTableAdapter,\n  MDCDataTableFoundation,\n} from \"@material/data-table\";\n\nimport { classMap } from \"lit-html/directives/class-map\";\n\nimport {\n  html,\n  query,\n  queryAll,\n  CSSResult,\n  css,\n  customElement,\n  property,\n  TemplateResult,\n  PropertyValues,\n} from \"lit-element\";\n\nimport { BaseElement } from \"@material/mwc-base/base-element\";\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// @ts-ignore\n// tslint:disable-next-line: no-implicit-dependencies\nimport sortFilterWorker from \"workerize-loader!./sort_filter_worker\";\n\nimport \"../ha-icon\";\nimport \"../../common/search/search-input\";\nimport \"../ha-checkbox\";\n// tslint:disable-next-line\nimport { HaCheckbox } from \"../ha-checkbox\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { nextRender } from \"../../common/util/render-status\";\nimport { debounce } from \"../../common/util/debounce\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"selection-changed\": SelectionChangedEvent;\n    \"row-click\": RowClickedEvent;\n    \"sorting-changed\": SortingChangedEvent;\n  }\n}\n\nexport interface RowClickedEvent {\n  id: string;\n}\n\nexport interface SelectionChangedEvent {\n  id: string;\n  selected: boolean;\n}\n\nexport interface SortingChangedEvent {\n  column: string;\n  direction: SortingDirection;\n}\n\nexport type SortingDirection = \"desc\" | \"asc\" | null;\n\nexport interface DataTableColumnContainer {\n  [key: string]: DataTableColumnData;\n}\n\nexport interface DataTableSortColumnData {\n  sortable?: boolean;\n  filterable?: boolean;\n  filterKey?: string;\n  direction?: SortingDirection;\n}\n\nexport interface DataTableColumnData extends DataTableSortColumnData {\n  title: string;\n  type?: \"numeric\" | \"icon\";\n  template?: <T>(data: any, row: T) => TemplateResult;\n}\n\nexport interface DataTableRowData {\n  [key: string]: any;\n}\n\n@customElement(\"ha-data-table\")\nexport class HaDataTable extends BaseElement {\n  @property({ type: Object }) public columns: DataTableColumnContainer = {};\n  @property({ type: Array }) public data: DataTableRowData[] = [];\n  @property({ type: Boolean }) public selectable = false;\n  @property({ type: String }) public id = \"id\";\n  protected mdcFoundation!: MDCDataTableFoundation;\n  protected readonly mdcFoundationClass = MDCDataTableFoundation;\n  @query(\".mdc-data-table\") protected mdcRoot!: HTMLElement;\n  @queryAll(\".mdc-data-table__row\") protected rowElements!: HTMLElement[];\n  @query(\"#header-checkbox\") private _headerCheckbox!: HaCheckbox;\n  @property({ type: Boolean }) private _filterable = false;\n  @property({ type: Boolean }) private _headerChecked = false;\n  @property({ type: Boolean }) private _headerIndeterminate = false;\n  @property({ type: Array }) private _checkedRows: string[] = [];\n  @property({ type: String }) private _filter = \"\";\n  @property({ type: String }) private _sortColumn?: string;\n  @property({ type: String }) private _sortDirection: SortingDirection = null;\n  @property({ type: Array }) private _filteredData: DataTableRowData[] = [];\n  private _sortColumns: {\n    [key: string]: DataTableSortColumnData;\n  } = {};\n  private curRequest = 0;\n  private _worker: any | undefined;\n\n  private _debounceSearch = debounce(\n    (ev) => {\n      this._filter = ev.detail.value;\n    },\n    200,\n    false\n  );\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this._worker = sortFilterWorker();\n  }\n\n  protected updated(properties: PropertyValues) {\n    super.updated(properties);\n\n    if (properties.has(\"columns\")) {\n      this._filterable = Object.values(this.columns).some(\n        (column) => column.filterable\n      );\n\n      for (const columnId in this.columns) {\n        if (this.columns[columnId].direction) {\n          this._sortDirection = this.columns[columnId].direction!;\n          this._sortColumn = columnId;\n          break;\n        }\n      }\n\n      const clonedColumns: DataTableColumnContainer = deepClone(this.columns);\n      Object.values(clonedColumns).forEach((column: DataTableColumnData) => {\n        delete column.title;\n        delete column.type;\n        delete column.template;\n      });\n\n      this._sortColumns = clonedColumns;\n    }\n\n    if (\n      properties.has(\"data\") ||\n      properties.has(\"columns\") ||\n      properties.has(\"_filter\") ||\n      properties.has(\"_sortColumn\") ||\n      properties.has(\"_sortDirection\")\n    ) {\n      this._filterData();\n    }\n  }\n\n  protected render() {\n    return html`\n      ${this._filterable\n        ? html`\n            <search-input\n              @value-changed=${this._handleSearchChange}\n            ></search-input>\n          `\n        : \"\"}\n      <div class=\"mdc-data-table\">\n        <table class=\"mdc-data-table__table\">\n          <thead>\n            <tr class=\"mdc-data-table__header-row\">\n              ${this.selectable\n                ? html`\n                    <th\n                      class=\"mdc-data-table__header-cell mdc-data-table__header-cell--checkbox\"\n                      role=\"columnheader\"\n                      scope=\"col\"\n                    >\n                      <ha-checkbox\n                        id=\"header-checkbox\"\n                        class=\"mdc-data-table__row-checkbox\"\n                        @change=${this._handleHeaderRowCheckboxChange}\n                        .indeterminate=${this._headerIndeterminate}\n                        .checked=${this._headerChecked}\n                      >\n                      </ha-checkbox>\n                    </th>\n                  `\n                : \"\"}\n              ${Object.entries(this.columns).map((columnEntry) => {\n                const [key, column] = columnEntry;\n                const sorted = key === this._sortColumn;\n                const classes = {\n                  \"mdc-data-table__header-cell--numeric\": Boolean(\n                    column.type && column.type === \"numeric\"\n                  ),\n                  \"mdc-data-table__header-cell--icon\": Boolean(\n                    column.type && column.type === \"icon\"\n                  ),\n                  sortable: Boolean(column.sortable),\n                  \"not-sorted\": Boolean(column.sortable && !sorted),\n                };\n                return html`\n                  <th\n                    class=\"mdc-data-table__header-cell ${classMap(classes)}\"\n                    role=\"columnheader\"\n                    scope=\"col\"\n                    @click=${this._handleHeaderClick}\n                    data-column-id=\"${key}\"\n                  >\n                    ${column.sortable\n                      ? html`\n                          <ha-icon\n                            .icon=${sorted && this._sortDirection === \"desc\"\n                              ? \"hass:arrow-down\"\n                              : \"hass:arrow-up\"}\n                          ></ha-icon>\n                        `\n                      : \"\"}\n                    <span>${column.title}</span>\n                  </th>\n                `;\n              })}\n            </tr>\n          </thead>\n          <tbody class=\"mdc-data-table__content\">\n            ${repeat(\n              this._filteredData!,\n              (row: DataTableRowData) => row[this.id],\n              (row: DataTableRowData) => html`\n                <tr\n                  data-row-id=\"${row[this.id]}\"\n                  @click=${this._handleRowClick}\n                  class=\"mdc-data-table__row\"\n                >\n                  ${this.selectable\n                    ? html`\n                        <td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--checkbox\"\n                        >\n                          <ha-checkbox\n                            class=\"mdc-data-table__row-checkbox\"\n                            @change=${this._handleRowCheckboxChange}\n                            .checked=${this._checkedRows.includes(row[this.id])}\n                          >\n                          </ha-checkbox>\n                        </td>\n                      `\n                    : \"\"}\n                  ${Object.entries(this.columns).map((columnEntry) => {\n                    const [key, column] = columnEntry;\n                    return html`\n                      <td\n                        class=\"mdc-data-table__cell ${classMap({\n                          \"mdc-data-table__cell--numeric\": Boolean(\n                            column.type && column.type === \"numeric\"\n                          ),\n                          \"mdc-data-table__cell--icon\": Boolean(\n                            column.type && column.type === \"icon\"\n                          ),\n                        })}\"\n                      >\n                        ${column.template\n                          ? column.template(row[key], row)\n                          : row[key]}\n                      </td>\n                    `;\n                  })}\n                </tr>\n              `\n            )}\n          </tbody>\n        </table>\n      </div>\n    `;\n  }\n\n  protected createAdapter(): MDCDataTableAdapter {\n    return {\n      addClassAtRowIndex: (rowIndex: number, cssClasses: string) => {\n        this.rowElements[rowIndex].classList.add(cssClasses);\n      },\n      getRowCount: () => this.data.length,\n      getRowElements: () => this.rowElements,\n      getRowIdAtIndex: (rowIndex: number) => this._getRowIdAtIndex(rowIndex),\n      getRowIndexByChildElement: (el: Element) =>\n        Array.prototype.indexOf.call(this.rowElements, el.closest(\"tr\")),\n      getSelectedRowCount: () => this._checkedRows.length,\n      isCheckboxAtRowIndexChecked: (rowIndex: number) =>\n        this._checkedRows.includes(this._getRowIdAtIndex(rowIndex)),\n      isHeaderRowCheckboxChecked: () => this._headerChecked,\n      isRowsSelectable: () => true,\n      notifyRowSelectionChanged: () => undefined,\n      notifySelectedAll: () => undefined,\n      notifyUnselectedAll: () => undefined,\n      registerHeaderRowCheckbox: () => undefined,\n      registerRowCheckboxes: () => undefined,\n      removeClassAtRowIndex: (rowIndex: number, cssClasses: string) => {\n        this.rowElements[rowIndex].classList.remove(cssClasses);\n      },\n      setAttributeAtRowIndex: (\n        rowIndex: number,\n        attr: string,\n        value: string\n      ) => {\n        this.rowElements[rowIndex].setAttribute(attr, value);\n      },\n      setHeaderRowCheckboxChecked: (checked: boolean) => {\n        this._headerChecked = checked;\n      },\n      setHeaderRowCheckboxIndeterminate: (indeterminate: boolean) => {\n        this._headerIndeterminate = indeterminate;\n      },\n      setRowCheckboxCheckedAtIndex: (rowIndex: number, checked: boolean) => {\n        this._setRowChecked(this._getRowIdAtIndex(rowIndex), checked);\n      },\n    };\n  }\n\n  private async _filterData() {\n    const startTime = new Date().getTime();\n    this.curRequest++;\n    const curRequest = this.curRequest;\n\n    const filterProm = this._worker.filterSortData(\n      this.data,\n      this._sortColumns,\n      this._filter,\n      this._sortDirection,\n      this._sortColumn\n    );\n\n    const [data] = await Promise.all([filterProm, nextRender]);\n\n    const curTime = new Date().getTime();\n    const elapsed = curTime - startTime;\n\n    if (elapsed < 100) {\n      await new Promise((resolve) => setTimeout(resolve, 100 - elapsed));\n    }\n    if (this.curRequest !== curRequest) {\n      return;\n    }\n    this._filteredData = data;\n  }\n\n  private _getRowIdAtIndex(rowIndex: number): string {\n    return this.rowElements[rowIndex].getAttribute(\"data-row-id\")!;\n  }\n\n  private _handleHeaderClick(ev: Event) {\n    const columnId = (ev.target as HTMLElement)\n      .closest(\"th\")!\n      .getAttribute(\"data-column-id\")!;\n    if (!this.columns[columnId].sortable) {\n      return;\n    }\n    if (!this._sortDirection || this._sortColumn !== columnId) {\n      this._sortDirection = \"asc\";\n    } else if (this._sortDirection === \"asc\") {\n      this._sortDirection = \"desc\";\n    } else {\n      this._sortDirection = null;\n    }\n\n    this._sortColumn = this._sortDirection === null ? undefined : columnId;\n\n    fireEvent(this, \"sorting-changed\", {\n      column: columnId,\n      direction: this._sortDirection,\n    });\n  }\n\n  private _handleHeaderRowCheckboxChange() {\n    this._headerChecked = this._headerCheckbox.checked;\n    this._headerIndeterminate = this._headerCheckbox.indeterminate;\n    this.mdcFoundation.handleHeaderRowCheckboxChange();\n  }\n\n  private _handleRowCheckboxChange(ev: Event) {\n    const checkbox = ev.target as HaCheckbox;\n    const rowId = checkbox.closest(\"tr\")!.getAttribute(\"data-row-id\");\n\n    this._setRowChecked(rowId!, checkbox.checked);\n    this.mdcFoundation.handleRowCheckboxChange(ev);\n  }\n\n  private _handleRowClick(ev: Event) {\n    const rowId = (ev.target as HTMLElement)\n      .closest(\"tr\")!\n      .getAttribute(\"data-row-id\")!;\n    fireEvent(this, \"row-click\", { id: rowId }, { bubbles: false });\n  }\n\n  private _setRowChecked(rowId: string, checked: boolean) {\n    if (checked && !this._checkedRows.includes(rowId)) {\n      this._checkedRows = [...this._checkedRows, rowId];\n    } else if (!checked) {\n      const index = this._checkedRows.indexOf(rowId);\n      if (index !== -1) {\n        this._checkedRows.splice(index, 1);\n      }\n    }\n    fireEvent(this, \"selection-changed\", {\n      id: rowId,\n      selected: checked,\n    });\n  }\n\n  private _handleSearchChange(ev: CustomEvent): void {\n    this._debounceSearch(ev);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      /* default mdc styles, colors changed, without checkbox styles */\n\n      .mdc-data-table__content {\n        font-family: Roboto, sans-serif;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        font-weight: 400;\n        letter-spacing: 0.0178571429em;\n        text-decoration: inherit;\n        text-transform: inherit;\n      }\n\n      .mdc-data-table {\n        background-color: var(--data-table-background-color);\n        border-radius: 4px;\n        border-width: 1px;\n        border-style: solid;\n        border-color: rgba(var(--rgb-primary-text-color), 0.12);\n        display: inline-flex;\n        flex-direction: column;\n        box-sizing: border-box;\n        overflow-x: auto;\n      }\n\n      .mdc-data-table__row--selected {\n        background-color: rgba(var(--rgb-primary-color), 0.04);\n      }\n\n      .mdc-data-table__row {\n        border-top-color: rgba(var(--rgb-primary-text-color), 0.12);\n      }\n\n      .mdc-data-table__row {\n        border-top-width: 1px;\n        border-top-style: solid;\n      }\n\n      .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n        background-color: rgba(var(--rgb-primary-text-color), 0.04);\n      }\n\n      .mdc-data-table__header-cell {\n        color: var(--primary-text-color);\n      }\n\n      .mdc-data-table__cell {\n        color: var(--primary-text-color);\n      }\n\n      .mdc-data-table__header-row {\n        height: 56px;\n      }\n\n      .mdc-data-table__row {\n        height: 52px;\n      }\n\n      .mdc-data-table__cell,\n      .mdc-data-table__header-cell {\n        padding-right: 16px;\n        padding-left: 16px;\n      }\n\n      .mdc-data-table__header-cell--checkbox,\n      .mdc-data-table__cell--checkbox {\n        /* @noflip */\n        padding-left: 16px;\n        /* @noflip */\n        padding-right: 0;\n      }\n      [dir=\"rtl\"] .mdc-data-table__header-cell--checkbox,\n      .mdc-data-table__header-cell--checkbox[dir=\"rtl\"],\n      [dir=\"rtl\"] .mdc-data-table__cell--checkbox,\n      .mdc-data-table__cell--checkbox[dir=\"rtl\"] {\n        /* @noflip */\n        padding-left: 0;\n        /* @noflip */\n        padding-right: 16px;\n      }\n\n      .mdc-data-table__table {\n        width: 100%;\n        border: 0;\n        white-space: nowrap;\n        border-collapse: collapse;\n      }\n\n      .mdc-data-table__cell {\n        font-family: Roboto, sans-serif;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        font-weight: 400;\n        letter-spacing: 0.0178571429em;\n        text-decoration: inherit;\n        text-transform: inherit;\n      }\n\n      .mdc-data-table__cell--numeric {\n        text-align: right;\n      }\n      [dir=\"rtl\"] .mdc-data-table__cell--numeric,\n      .mdc-data-table__cell--numeric[dir=\"rtl\"] {\n        /* @noflip */\n        text-align: left;\n      }\n\n      .mdc-data-table__cell--icon {\n        color: var(--secondary-text-color);\n        text-align: center;\n      }\n\n      .mdc-data-table__header-cell {\n        font-family: Roboto, sans-serif;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        font-size: 0.875rem;\n        line-height: 1.375rem;\n        font-weight: 500;\n        letter-spacing: 0.0071428571em;\n        text-decoration: inherit;\n        text-transform: inherit;\n        text-align: left;\n      }\n      [dir=\"rtl\"] .mdc-data-table__header-cell,\n      .mdc-data-table__header-cell[dir=\"rtl\"] {\n        /* @noflip */\n        text-align: right;\n      }\n\n      .mdc-data-table__header-cell--numeric {\n        text-align: right;\n      }\n      [dir=\"rtl\"] .mdc-data-table__header-cell--numeric,\n      .mdc-data-table__header-cell--numeric[dir=\"rtl\"] {\n        /* @noflip */\n        text-align: left;\n      }\n\n      .mdc-data-table__header-cell--icon {\n        text-align: center;\n      }\n\n      /* custom from here */\n\n      .mdc-data-table {\n        display: block;\n      }\n      .mdc-data-table__header-cell {\n        overflow: hidden;\n      }\n      .mdc-data-table__header-cell.sortable {\n        cursor: pointer;\n      }\n      .mdc-data-table__header-cell.not-sorted:not(.mdc-data-table__header-cell--numeric):not(.mdc-data-table__header-cell--icon)\n        span {\n        position: relative;\n        left: -24px;\n      }\n      .mdc-data-table__header-cell.not-sorted > * {\n        transition: left 0.2s ease 0s;\n      }\n      .mdc-data-table__header-cell.not-sorted ha-icon {\n        left: -36px;\n      }\n      .mdc-data-table__header-cell.not-sorted:not(.mdc-data-table__header-cell--numeric):not(.mdc-data-table__header-cell--icon):hover\n        span {\n        left: 0px;\n      }\n      .mdc-data-table__header-cell:hover.not-sorted ha-icon {\n        left: 0px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-data-table\": HaDataTable;\n  }\n}\n","import { LovelaceConfig, ActionConfig } from \"../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../types\";\n\nconst EXCLUDED_DOMAINS = [\"zone\", \"persistent_notification\"];\n\nconst addFromAction = (entities: Set<string>, actionConfig: ActionConfig) => {\n  if (\n    actionConfig.action !== \"call-service\" ||\n    !actionConfig.service_data ||\n    !actionConfig.service_data.entity_id\n  ) {\n    return;\n  }\n  let entityIds = actionConfig.service_data.entity_id;\n  if (!Array.isArray(entityIds)) {\n    entityIds = [entityIds];\n  }\n  for (const entityId of entityIds) {\n    entities.add(entityId);\n  }\n};\n\nconst addEntityId = (entities: Set<string>, entity) => {\n  if (typeof entity === \"string\") {\n    entities.add(entity);\n    return;\n  }\n\n  if (entity.entity) {\n    entities.add(entity.entity);\n  }\n  if (entity.camera_image) {\n    entities.add(entity.camera_image);\n  }\n  if (entity.tap_action) {\n    addFromAction(entities, entity.tap_action);\n  }\n  if (entity.hold_action) {\n    addFromAction(entities, entity.hold_action);\n  }\n};\n\nconst addEntities = (entities: Set<string>, obj) => {\n  if (obj.entity) {\n    addEntityId(entities, obj.entity);\n  }\n  if (obj.entities) {\n    obj.entities.forEach((entity) => addEntityId(entities, entity));\n  }\n  if (obj.card) {\n    addEntities(entities, obj.card);\n  }\n  if (obj.cards) {\n    obj.cards.forEach((card) => addEntities(entities, card));\n  }\n  if (obj.elements) {\n    obj.elements.forEach((card) => addEntities(entities, card));\n  }\n  if (obj.badges) {\n    obj.badges.forEach((badge) => addEntityId(entities, badge));\n  }\n};\n\nconst computeUsedEntities = (config) => {\n  const entities = new Set<string>();\n  config.views.forEach((view) => addEntities(entities, view));\n  return entities;\n};\n\nexport const computeUnusedEntities = (\n  hass: HomeAssistant,\n  config: LovelaceConfig\n): string[] => {\n  const usedEntities = computeUsedEntities(config);\n  return Object.keys(hass.states)\n    .filter(\n      (entity) =>\n        !usedEntities.has(entity) &&\n        !EXCLUDED_DOMAINS.includes(entity.split(\".\", 1)[0])\n    )\n    .sort();\n};\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  PropertyValues,\n  property,\n  customElement,\n  css,\n  CSSResult,\n} from \"lit-element\";\n\nimport { classMap } from \"lit-html/directives/class-map\";\n\nimport memoizeOne from \"memoize-one\";\n\nimport \"../../../../components/ha-fab\";\nimport \"../../../../components/entity/state-badge\";\nimport \"../../../../components/ha-relative-time\";\nimport \"../../../../components/ha-icon\";\n\nimport \"../../../../components/data-table/ha-data-table\";\n// tslint:disable-next-line\nimport {\n  SelectionChangedEvent,\n  DataTableColumnContainer,\n} from \"../../../../components/data-table/ha-data-table\";\n\nimport { computeStateName } from \"../../../../common/entity/compute_state_name\";\nimport { computeDomain } from \"../../../../common/entity/compute_domain\";\n\nimport { computeRTL } from \"../../../../common/util/compute_rtl\";\nimport { computeUnusedEntities } from \"../../common/compute-unused-entities\";\nimport { showSelectViewDialog } from \"../select-view/show-select-view-dialog\";\nimport { showEditCardDialog } from \"../card-editor/show-edit-card-dialog\";\n\nimport { HomeAssistant } from \"../../../../types\";\nimport { Lovelace } from \"../../types\";\nimport { LovelaceConfig } from \"../../../../data/lovelace\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\n\n@customElement(\"hui-unused-entities\")\nexport class HuiUnusedEntities extends LitElement {\n  @property() public lovelace?: Lovelace;\n\n  @property() public hass?: HomeAssistant;\n\n  @property() public narrow?: boolean;\n\n  @property() private _unusedEntities: string[] = [];\n\n  private _selectedEntities: string[] = [];\n\n  private get _config(): LovelaceConfig {\n    return this.lovelace!.config;\n  }\n\n  private _columns = memoizeOne((narrow: boolean) => {\n    const columns: DataTableColumnContainer = {\n      entity: {\n        title: this.hass!.localize(\"ui.panel.lovelace.unused_entities.entity\"),\n        sortable: true,\n        filterable: true,\n        filterKey: \"friendly_name\",\n        direction: \"asc\",\n        template: (stateObj) => html`\n          <div @click=${this._handleEntityClicked} style=\"cursor: pointer;\">\n            <state-badge\n              .hass=${this.hass!}\n              .stateObj=${stateObj}\n            ></state-badge>\n            ${stateObj.friendly_name}\n          </div>\n        `,\n      },\n    };\n\n    if (narrow) {\n      return columns;\n    }\n\n    columns.entity_id = {\n      title: this.hass!.localize(\"ui.panel.lovelace.unused_entities.entity_id\"),\n      sortable: true,\n      filterable: true,\n    };\n    columns.domain = {\n      title: this.hass!.localize(\"ui.panel.lovelace.unused_entities.domain\"),\n      sortable: true,\n      filterable: true,\n    };\n    columns.last_changed = {\n      title: this.hass!.localize(\n        \"ui.panel.lovelace.unused_entities.last_changed\"\n      ),\n      type: \"numeric\",\n      sortable: true,\n      template: (lastChanged: string) => html`\n        <ha-relative-time\n          .hass=${this.hass!}\n          .datetime=${lastChanged}\n        ></ha-relative-time>\n      `,\n    };\n\n    return columns;\n  });\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n\n    if (changedProperties.has(\"lovelace\")) {\n      this._getUnusedEntities();\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass || !this.lovelace) {\n      return html``;\n    }\n\n    if (this.lovelace.mode === \"storage\" && this.lovelace.editMode === false) {\n      return html``;\n    }\n\n    return html`\n      <ha-card\n        header=\"${this.hass.localize(\n          \"ui.panel.lovelace.unused_entities.title\"\n        )}\"\n      >\n        <div class=\"card-content\">\n          ${this.hass.localize(\n            \"ui.panel.lovelace.unused_entities.available_entities\"\n          )}\n          ${this.lovelace.mode === \"storage\"\n            ? html`\n                <br />${this.hass.localize(\n                  \"ui.panel.lovelace.unused_entities.select_to_add\"\n                )}\n              `\n            : \"\"}\n        </div>\n      </ha-card>\n      <ha-data-table\n        .columns=${this._columns(this.narrow!)}\n        .data=${this._unusedEntities.map((entity) => {\n          const stateObj = this.hass!.states[entity];\n          return {\n            entity_id: entity,\n            entity: {\n              ...stateObj,\n              friendly_name: computeStateName(stateObj),\n            },\n            domain: computeDomain(entity),\n            last_changed: stateObj!.last_changed,\n          };\n        })}\n        .id=${\"entity_id\"}\n        .selectable=${this.lovelace!.mode === \"storage\"}\n        @selection-changed=${this._handleSelectionChanged}\n      ></ha-data-table>\n      ${this.lovelace.mode === \"storage\"\n        ? html`\n            <ha-fab\n              class=\"${classMap({\n                rtl: computeRTL(this.hass),\n              })}\"\n              icon=\"hass:plus\"\n              label=\"${this.hass.localize(\n                \"ui.panel.lovelace.editor.edit_card.add\"\n              )}\"\n              @click=\"${this._selectView}\"\n            ></ha-fab>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _getUnusedEntities(): void {\n    if (!this.hass || !this.lovelace) {\n      return;\n    }\n    this._selectedEntities = [];\n    this._unusedEntities = computeUnusedEntities(this.hass, this._config!);\n  }\n\n  private _handleSelectionChanged(ev: CustomEvent): void {\n    const changedSelection = ev.detail as SelectionChangedEvent;\n    const entity = changedSelection.id;\n    if (changedSelection.selected) {\n      this._selectedEntities.push(entity);\n    } else {\n      const index = this._selectedEntities.indexOf(entity);\n      if (index !== -1) {\n        this._selectedEntities.splice(index, 1);\n      }\n    }\n  }\n\n  private _handleEntityClicked(ev: Event) {\n    const entityId = (ev.target as HTMLElement)\n      .closest(\"tr\")!\n      .getAttribute(\"data-row-id\")!;\n    fireEvent(this, \"hass-more-info\", {\n      entityId,\n    });\n  }\n\n  private _selectView(): void {\n    showSelectViewDialog(this, {\n      lovelace: this.lovelace!,\n      viewSelectedCallback: (view) => this._addCard(view),\n    });\n  }\n\n  private _addCard(view: number): void {\n    showEditCardDialog(this, {\n      lovelace: this.lovelace!,\n      path: [view],\n      entities: this._selectedEntities,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(--lovelace-background);\n        padding: 16px;\n      }\n      ha-fab {\n        position: sticky;\n        float: right;\n        bottom: 16px;\n        z-index: 1;\n      }\n      ha-fab.rtl {\n        float: left;\n      }\n      ha-card {\n        margin-bottom: 16px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-unused-entities\": HuiUnusedEntities;\n  }\n}\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { Lovelace } from \"../../types\";\n\nexport interface SelectViewDialogParams {\n  lovelace: Lovelace;\n  viewSelectedCallback: (view: number) => void;\n}\n\nexport const showSelectViewDialog = (\n  element: HTMLElement,\n  selectViewDialogParams: SelectViewDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"hui-dialog-select-view\",\n    dialogImport: () =>\n      import(\n        /* webpackChunkName: \"hui-dialog-select-view\" */ \"./hui-dialog-select-view\"\n      ),\n    dialogParams: selectViewDialogParams,\n  });\n};\n"],"sourceRoot":""}