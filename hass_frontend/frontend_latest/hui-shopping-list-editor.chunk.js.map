{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-shopping-list-editor.ts"],"names":["isEntityId","value","includes","isIcon","struct","superstruct","types","icon","cardConfigStruct","type","title","HuiShoppingListEditor","customElement","property","config","_config","hass","html","_title","_valueChanged","ev","target","configValue","fireEvent","LitElement"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAO,SAASA,UAAT,CAAoBC,KAApB,EAAkD;AACvD,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAO,8BAAP;AACD;;AACD,MAAI,CAACA,KAAK,CAACC,QAAN,CAAe,GAAf,CAAL,EAA0B;AACxB,WAAO,mDAAP;AACD;;AACD,SAAO,IAAP;AACD,C;;;;;;;;;;;;ACRD;AAAA;AAAO,SAASC,MAAT,CAAgBF,KAAhB,EAA8C;AACnD,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAO,yBAAP;AACD;;AACD,MAAI,CAACA,KAAK,CAACC,QAAN,CAAe,GAAf,CAAL,EAA0B;AACxB,WAAO,yCAAP;AACD;;AACD,SAAO,IAAP;AACD,C;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEO,MAAME,MAAM,GAAGC,+DAAW,CAAC;AAChCC,OAAK,EAAE;AACL,iBAAaN,wDADR;AAELO,QAAI,EAAEJ,+CAAMA;AAFP;AADyB,CAAD,CAA1B,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJP;AAOA;AAEA;AAIA;AAGA,MAAMK,gBAAgB,GAAGJ,qEAAM,CAAC;AAC9BK,MAAI,EAAE,QADwB;AAE9BC,OAAK,EAAE;AAFuB,CAAD,CAA/B;AAMO,IAAMC,qBAAb,cADCC,iEAAa,CAAC,+BAAD,CACd;AADA,QACaD,qBADb,qBAEgC;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AADhC;AAAA,OAAaA,qBAAb;AAAA;AAAA;AAAA,mBAEGE,4DAAQ,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIGA,4DAAQ,EAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAME,mBAAiBC,MAAjB,EAAuD;AACrDA,cAAM,GAAGN,gBAAgB,CAACM,MAAD,CAAzB;AACA,aAAKC,OAAL,GAAeD,MAAf;AACD;AATH;AAAA;AAAA;AAAA,aAWE,kBAAqB;AACnB,eAAO,KAAKC,OAAL,CAAcL,KAAd,IAAuB,EAA9B;AACD;AAbH;AAAA;AAAA;AAAA,aAeE,kBAA0C;AACxC,YAAI,CAAC,KAAKM,IAAV,EAAgB;AACd,iBAAOC,gDAAK,EAAZ;AACD;;AAED,eAAOA,gDAAK;;;;oBAII,KAAKC,MAAO;0BACN,OAAQ;4BACN,KAAKC,aAAc;;;KAN3C;AAUD;AA9BH;AAAA;AAAA;AAAA,aAgCE,uBAAsBC,EAAtB,EAAqD;AACnD,YAAI,CAAC,KAAKL,OAAN,IAAiB,CAAC,KAAKC,IAA3B,EAAiC;AAC/B;AACD;;AACD,cAAMK,MAAM,GAAGD,EAAE,CAACC,MAAlB;;AAEA,YAAI,KAAM,IAAGA,MAAM,CAACC,WAAY,EAA5B,MAAmCD,MAAM,CAACpB,KAA9C,EAAqD;AACnD;AACD;;AACD,YAAIoB,MAAM,CAACC,WAAX,EAAwB;AACtB,cAAID,MAAM,CAACpB,KAAP,KAAiB,EAArB,EAAyB;AACvB,mBAAO,KAAKc,OAAL,CAAaM,MAAM,CAACC,WAApB,CAAP;AACD,WAFD,MAEO;AACL,iBAAKP,OAAL,qBACK,KAAKA,OADV;AAEE,eAACM,MAAM,CAACC,WAAR,GAAuBD,MAAM,CAACpB;AAFhC;AAID;AACF;;AACDsB,gFAAS,CAAC,IAAD,EAAO,gBAAP,EAAyB;AAAET,gBAAM,EAAE,KAAKC;AAAf,SAAzB,CAAT;AACD;AApDH;AAAA;AAAA,GAA2CS,sDAA3C,E","file":"hui-shopping-list-editor.chunk.js","sourcesContent":["export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { ShoppingListCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n});\n\n@customElement(\"hui-shopping-list-card-editor\")\nexport class HuiShoppingListEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: ShoppingListCardConfig;\n\n  public setConfig(config: ShoppingListCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-shopping-list-card-editor\": HuiShoppingListEditor;\n  }\n}\n"],"sourceRoot":""}