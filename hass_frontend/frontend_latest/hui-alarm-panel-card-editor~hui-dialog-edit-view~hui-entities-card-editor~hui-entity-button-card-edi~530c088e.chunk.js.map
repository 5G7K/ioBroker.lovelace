{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts"],"names":["rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","computeStateName","entity_id","HaEntityPicker","property","type","Boolean","attribute","memoizeOne","hass","domainFilter","entityFilter","states","entityIds","Object","keys","filter","eid","substr","indexOf","sort","map","key","value","changedProps","has","_opened","_hass","_getStates","html","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","label","undefined","localize","disabled","length","ev","detail","newValue","setTimeout","fireEvent","css","LitElement","customElements","define"],"mappings":"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","file":"hui-alarm-panel-card-editor~hui-dialog-edit-view~hui-entities-card-editor~hui-entity-button-card-edi~530c088e.chunk.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n"],"sourceRoot":""}