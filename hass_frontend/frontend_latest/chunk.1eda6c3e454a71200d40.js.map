{"version":3,"sources":["webpack:///./src/panels/config/ha-config-section.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/components/ha-fab.ts","webpack:///./src/data/user.ts","webpack:///./src/panels/config/person/show-dialog-person-detail.ts","webpack:///./src/panels/config/person/ha-config-person.ts","webpack:///./src/data/person.ts"],"names":["_decorate","customElement","_initialize","_HTMLElement","F","constructor","super","this","attachShadow","mode","shadowRoot","innerHTML","d","HTMLElement","__webpack_require__","__webpack_exports__","compare","caseInsensitiveCompare","a","b","toLowerCase","MwcFab","customElements","get","_MwcFab","[object Object]","args","kind","key","value","classes","mdc-fab--mini","mini","mdc-fab--exited","exited","mdc-fab--extended","extended","showLabel","label","html","ripple","classMap","disabled","icon","showIconAtEnd","SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","fetchUsers","updateUser","deleteUser","async","hass","callWS","type","userId","params","Object","assign","user_id","loadPersonDetailDialog","Promise","all","e","then","bind","HaConfigPerson","_LitElement","property","undefined","_storageItems","_configItems","localize","isWide","length","map","entry","_openEditEntry","name","_createPerson","changedProps","_get","_getPrototypeOf","prototype","call","_fetchData","_usersLoad","personData","fetchPersons","storage","sort","ent1","ent2","config","_openDialog","ev","currentTarget","users","currentPerson","used","Set","coll","pers","add","currentUserId","filter","user","id","has","element","systemLogDetailParams","_allowedUsers","createEntry","created","values","createPerson","concat","updateEntry","updated","personId","updates","person_id","updatePerson","ent","removeEntry","confirm","deletePerson","err","fireEvent","dialogTag","dialogImport","dialogParams","css","LitElement","define"],"mappings":"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","file":"chunk.1eda6c3e454a71200d40.js","sourcesContent":["import { customElement } from \"lit-element\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = `\n    <style>\n      .content {\n        padding: 28px 20px 0;\n        max-width: 640px;\n        margin: 0 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 20px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        width: 100%;\n        max-width: 500px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n    </style>\n    <div class=\"content\">\n      <div class=\"header\"><slot name=\"header\"></slot></div>\n      <div class=\"together\">\n        <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n        <div class=\"panel\"><slot></slot></div>\n      </div>\n    </div>\n    `;\n  }\n}\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { classMap } from \"lit-html/directives/class-map\";\nimport { html, customElement } from \"lit-element\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive.js\";\n\nimport \"@material/mwc-fab\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nimport { Fab } from \"@material/mwc-fab\";\n// tslint:disable-next-line\nconst MwcFab = customElements.get(\"mwc-fab\") as Constructor<Fab>;\n\n@customElement(\"ha-fab\")\nexport class HaFab extends MwcFab {\n  // We override the render method because we don't have an icon font and mwc-fab doesn't support our svg-icon sets.\n  // Based on version mwc-fab 0.8\n  protected render() {\n    const classes = {\n      \"mdc-fab--mini\": this.mini,\n      \"mdc-fab--exited\": this.exited,\n      \"mdc-fab--extended\": this.extended,\n    };\n    const showLabel = this.label !== \"\" && this.extended;\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-fab ${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label || this.icon}\"\n      >\n        ${showLabel && this.showIconAtEnd ? this.label : \"\"}\n        ${this.icon\n          ? html`\n              <ha-icon .icon=${this.icon}></ha-icon>\n            `\n          : \"\"}\n        ${showLabel && !this.showIconAtEnd ? this.label : \"\"}\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { Credential } from \"./auth\";\n\nexport const SYSTEM_GROUP_ID_ADMIN = \"system-admin\";\nexport const SYSTEM_GROUP_ID_USER = \"system-users\";\nexport const SYSTEM_GROUP_ID_READ_ONLY = \"system-read-only\";\n\nexport interface User {\n  id: string;\n  name: string;\n  is_owner: boolean;\n  is_active: boolean;\n  system_generated: boolean;\n  group_ids: string[];\n  credentials: Credential[];\n}\n\ninterface UpdateUserParams {\n  name?: User[\"name\"];\n  group_ids?: User[\"group_ids\"];\n}\n\nexport const fetchUsers = async (hass: HomeAssistant) =>\n  hass.callWS<User[]>({\n    type: \"config/auth/list\",\n  });\n\nexport const createUser = async (hass: HomeAssistant, name: string) =>\n  hass.callWS<{ user: User }>({\n    type: \"config/auth/create\",\n    name,\n  });\n\nexport const updateUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  params: UpdateUserParams\n) =>\n  hass.callWS<{ user: User }>({\n    ...params,\n    type: \"config/auth/update\",\n    user_id: userId,\n  });\n\nexport const deleteUser = async (hass: HomeAssistant, userId: string) =>\n  hass.callWS<void>({\n    type: \"config/auth/delete\",\n    user_id: userId,\n  });\n","import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { Person, PersonMutableParams } from \"../../../data/person\";\nimport { User } from \"../../../data/user\";\n\nexport interface PersonDetailDialogParams {\n  entry?: Person;\n  users: User[];\n  createEntry: (values: PersonMutableParams) => Promise<unknown>;\n  updateEntry: (updates: Partial<PersonMutableParams>) => Promise<unknown>;\n  removeEntry: () => Promise<boolean>;\n}\n\nexport const loadPersonDetailDialog = () =>\n  import(\n    /* webpackChunkName: \"person-detail-dialog\" */ \"./dialog-person-detail\"\n  );\n\nexport const showPersonDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: PersonDetailDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-person-detail\",\n    dialogImport: loadPersonDetailDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport {\n  Person,\n  fetchPersons,\n  updatePerson,\n  deletePerson,\n  createPerson,\n} from \"../../../data/person\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../layouts/hass-loading-screen\";\nimport { compare } from \"../../../common/string/compare\";\nimport \"../ha-config-section\";\nimport {\n  showPersonDetailDialog,\n  loadPersonDetailDialog,\n} from \"./show-dialog-person-detail\";\nimport { User, fetchUsers } from \"../../../data/user\";\n\nclass HaConfigPerson extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public isWide?: boolean;\n  @property() private _storageItems?: Person[];\n  @property() private _configItems?: Person[];\n  private _usersLoad?: Promise<User[]>;\n\n  protected render(): TemplateResult | void {\n    if (\n      !this.hass ||\n      this._storageItems === undefined ||\n      this._configItems === undefined\n    ) {\n      return html`\n        <hass-loading-screen></hass-loading-screen>\n      `;\n    }\n    const hass = this.hass;\n    return html`\n      <hass-subpage\n        .header=${hass.localize(\"ui.panel.config.person.caption\")}\n        .showBackButton=${!this.isWide}\n      >\n        <ha-config-section .isWide=${this.isWide}>\n          <span slot=\"header\"\n            >${hass.localize(\"ui.panel.config.person.caption\")}</span\n          >\n          <span slot=\"introduction\">\n            ${hass.localize(\"ui.panel.config.person.introduction\")}\n            ${this._configItems.length > 0\n              ? html`\n                  <p>\n                    ${hass.localize(\n                      \"ui.panel.config.person.note_about_persons_configured_in_yaml\"\n                    )}\n                  </p>\n                `\n              : \"\"}\n          </span>\n          <ha-card class=\"storage\">\n            ${this._storageItems.map((entry) => {\n              return html`\n                <paper-item @click=${this._openEditEntry} .entry=${entry}>\n                  <paper-item-body>\n                    ${entry.name}\n                  </paper-item-body>\n                </paper-item>\n              `;\n            })}\n            ${this._storageItems.length === 0\n              ? html`\n                  <div class=\"empty\">\n                    ${hass.localize(\n                      \"ui.panel.config.person.no_persons_created_yet\"\n                    )}\n                    <mwc-button @click=${this._createPerson}>\n                      ${hass.localize(\n                        \"ui.panel.config.person.create_person\"\n                      )}</mwc-button\n                    >\n                  </div>\n                `\n              : html``}\n          </ha-card>\n          ${this._configItems.length > 0\n            ? html`\n                <ha-card header=\"Configuration.yaml persons\">\n                  ${this._configItems.map((entry) => {\n                    return html`\n                      <paper-item>\n                        <paper-item-body>\n                          ${entry.name}\n                        </paper-item-body>\n                      </paper-item>\n                    `;\n                  })}\n                </ha-card>\n              `\n            : \"\"}\n        </ha-config-section>\n      </hass-subpage>\n\n      <ha-fab\n        ?is-wide=${this.isWide}\n        icon=\"hass:plus\"\n        title=\"${hass.localize(\"ui.panel.config.person.add_person\")}\"\n        @click=${this._createPerson}\n      ></ha-fab>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n    loadPersonDetailDialog();\n  }\n\n  private async _fetchData() {\n    this._usersLoad = fetchUsers(this.hass!);\n    const personData = await fetchPersons(this.hass!);\n\n    this._storageItems = personData.storage.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n    this._configItems = personData.config.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n  }\n\n  private _createPerson() {\n    this._openDialog();\n  }\n\n  private _openEditEntry(ev: MouseEvent) {\n    const entry: Person = (ev.currentTarget! as any).entry;\n    this._openDialog(entry);\n  }\n\n  private _allowedUsers(users: User[], currentPerson?: Person) {\n    const used = new Set();\n    for (const coll of [this._configItems, this._storageItems]) {\n      for (const pers of coll!) {\n        if (pers.user_id) {\n          used.add(pers.user_id);\n        }\n      }\n    }\n    const currentUserId = currentPerson ? currentPerson.user_id : undefined;\n    return users.filter(\n      (user) => user.id === currentUserId || !used.has(user.id)\n    );\n  }\n\n  private async _openDialog(entry?: Person) {\n    const users = await this._usersLoad!;\n\n    showPersonDetailDialog(this, {\n      entry,\n      users: this._allowedUsers(users, entry),\n      createEntry: async (values) => {\n        const created = await createPerson(this.hass!, values);\n        this._storageItems = this._storageItems!.concat(\n          created\n        ).sort((ent1, ent2) => compare(ent1.name, ent2.name));\n      },\n      updateEntry: async (values) => {\n        const updated = await updatePerson(this.hass!, entry!.id, values);\n        this._storageItems = this._storageItems!.map((ent) =>\n          ent === entry ? updated : ent\n        );\n      },\n      removeEntry: async () => {\n        if (\n          !confirm(`${this.hass!.localize(\n            \"ui.panel.config.person.confirm_delete\"\n          )}\n\n${this.hass!.localize(\"ui.panel.config.person.confirm_delete2\")}`)\n        ) {\n          return false;\n        }\n\n        try {\n          await deletePerson(this.hass!, entry!.id);\n          this._storageItems = this._storageItems!.filter(\n            (ent) => ent !== entry\n          );\n          return true;\n        } catch (err) {\n          return false;\n        }\n      },\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card {\n        max-width: 600px;\n        margin: 16px auto;\n        overflow: hidden;\n      }\n      .empty {\n        text-align: center;\n        padding: 8px;\n      }\n      paper-item {\n        padding-top: 4px;\n        padding-bottom: 4px;\n      }\n      ha-card.storage paper-item {\n        cursor: pointer;\n      }\n      ha-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n\n      ha-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-config-person\", HaConfigPerson);\n","import { HomeAssistant } from \"../types\";\n\nexport interface Person {\n  id: string;\n  name: string;\n  user_id?: string;\n  device_trackers?: string[];\n}\n\nexport interface PersonMutableParams {\n  name: string;\n  user_id: string | null;\n  device_trackers: string[];\n}\n\nexport const fetchPersons = (hass: HomeAssistant) =>\n  hass.callWS<{\n    storage: Person[];\n    config: Person[];\n  }>({ type: \"person/list\" });\n\nexport const createPerson = (\n  hass: HomeAssistant,\n  values: PersonMutableParams\n) =>\n  hass.callWS<Person>({\n    type: \"person/create\",\n    ...values,\n  });\n\nexport const updatePerson = (\n  hass: HomeAssistant,\n  personId: string,\n  updates: Partial<PersonMutableParams>\n) =>\n  hass.callWS<Person>({\n    type: \"person/update\",\n    person_id: personId,\n    ...updates,\n  });\n\nexport const deletePerson = (hass: HomeAssistant, personId: string) =>\n  hass.callWS({\n    type: \"person/delete\",\n    person_id: personId,\n  });\n"],"sourceRoot":""}