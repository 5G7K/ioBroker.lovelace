{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/process-editor-entities.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-glance-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","Object","index_es","types","entity-id","value","includes","icon","configElementStyle","rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_8__","entity_id","HaEntityPicker","lit_element__WEBPACK_IMPORTED_MODULE_9__","[object Object]","this","_getStates","memoize_one__WEBPACK_IMPORTED_MODULE_6__","hass","domainFilter","entityFilter","states","entityIds","keys","filter","eid","substr","indexOf","sort","map","key","changedProps","super","updated","has","_opened","_hass","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","ev","detail","setTimeout","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_10__","styles","tslib__WEBPACK_IMPORTED_MODULE_0__","type","Boolean","attribute","customElements","define","HuiThemeSelectEditor","lit_element__WEBPACK_IMPORTED_MODULE_1__","themes","concat","_changed","theme","target","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_3__","HuiEntityEditor","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","newConfigEntities","newEntities","splice","assign","processEditorEntities","entitiesConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_11__","union","name","cardConfigStruct","title","columns","show_name","show_state","show_icon","HuiGlanceCardEditor","config","_config","_configEntities","_process_editor_entities__WEBPACK_IMPORTED_MODULE_12__","_title","_theme","_columns","NaN","_show_name","_show_icon","_show_state","_config_elements_style__WEBPACK_IMPORTED_MODULE_14__","configValue","isNaN","Number","checked","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_13__"],"mappings":"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","file":"chunk.ec8d9477e21d71695636.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Clear\"\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Show entities\"\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        label=\"Theme\"\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>Entities</h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import { EntityConfig } from \"../entity-rows/types\";\n\nexport function processEditorEntities(entities): EntityConfig[] {\n  return entities.map((entityConf) => {\n    if (typeof entityConf === \"string\") {\n      return { entity: entityConf };\n    }\n    return entityConf;\n  });\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../../../components/entity/state-badge\";\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-icon\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { GlanceCardConfig, ConfigEntity } from \"../../cards/types\";\n\nconst entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string|number?\",\n  theme: \"string?\",\n  columns: \"number?\",\n  show_name: \"boolean?\",\n  show_state: \"boolean?\",\n  show_icon: \"boolean?\",\n  entities: [entitiesConfigStruct],\n});\n\n@customElement(\"hui-glance-card-editor\")\nexport class HuiGlanceCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GlanceCardConfig;\n\n  @property() private _configEntities?: ConfigEntity[];\n\n  public setConfig(config: GlanceCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  get _columns(): number {\n    return this._config!.columns || NaN;\n  }\n\n  get _show_name(): boolean {\n    return this._config!.show_name || true;\n  }\n\n  get _show_icon(): boolean {\n    return this._config!.show_icon || true;\n  }\n\n  get _show_state(): boolean {\n    return this._config!.show_state || true;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n          <paper-input\n            label=\"Columns\"\n            type=\"number\"\n            .value=\"${this._columns}\"\n            .configValue=\"${\"columns\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-toggle-button\n            ?checked=\"${this._show_name !== false}\"\n            .configValue=\"${\"show_name\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show Name?</paper-toggle-button\n          >\n          <paper-toggle-button\n            ?checked=\"${this._show_icon !== false}\"\n            .configValue=\"${\"show_icon\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show Icon?</paper-toggle-button\n          >\n          <paper-toggle-button\n            ?checked=\"${this._show_state !== false}\"\n            .configValue=\"${\"show_state\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show State?</paper-toggle-button\n          >\n        </div>\n      </div>\n      <hui-entity-editor\n        .hass=\"${this.hass}\"\n        .entities=\"${this._configEntities}\"\n        @entities-changed=\"${this._valueChanged}\"\n      ></hui-entity-editor>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue!]:\n            target.checked !== undefined ? target.checked : value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-glance-card-editor\": HuiGlanceCardEditor;\n  }\n}\n"],"sourceRoot":""}