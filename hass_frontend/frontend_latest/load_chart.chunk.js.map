{"version":3,"sources":["webpack:///./src/resources/ha-chart-scripts.js"],"names":["Chart","Interaction","modes","neareach","chart","e","options","getRange","x","a","b","Math","abs","y","xy","pow","getRangeMax","r","position","native","helpers","getRelativePosition","elements","elementsRange","datasets","data","meta","axis","rangeFunc","rangeMaxFunc","i","ilen","length","isDatasetVisible","getDatasetMeta","j","jlen","element","_view","skip","vm","range","oldRange","radius","hitRadius","undefined","ret","filter","n"],"mappings":"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","file":"load_chart.chunk.js","sourcesContent":["import Chart from \"chart.js\";\nimport \"chartjs-chart-timeline\";\n\n// This function add a new interaction mode to Chart.js that\n// returns one point for every dataset.\nChart.Interaction.modes.neareach = function(chart, e, options) {\n  const getRange = {\n    x: (a, b) => Math.abs(a.x - b.x),\n    y: (a, b) => Math.abs(a.y - b.y),\n    // eslint-disable-next-line no-restricted-properties\n    xy: (a, b) => Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2),\n  };\n  const getRangeMax = {\n    x: (r) => r,\n    y: (r) => r,\n    xy: (r) => r * r,\n  };\n  let position;\n  if (e.native) {\n    position = {\n      x: e.x,\n      y: e.y,\n    };\n  } else {\n    position = Chart.helpers.getRelativePosition(e, chart);\n  }\n  const elements = [];\n  const elementsRange = [];\n  const datasets = chart.data.datasets;\n  let meta;\n  options.axis = options.axis || \"xy\";\n  const rangeFunc = getRange[options.axis];\n  const rangeMaxFunc = getRangeMax[options.axis];\n\n  for (let i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n    for (let j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      const element = meta.data[j];\n      if (!element._view.skip) {\n        const vm = element._view;\n        const range = rangeFunc(vm, position);\n        const oldRange = elementsRange[i];\n        if (range < rangeMaxFunc(vm.radius + vm.hitRadius)) {\n          if (oldRange === undefined || oldRange > range) {\n            elementsRange[i] = range;\n            elements[i] = element;\n          }\n        }\n      }\n    }\n  }\n  const ret = elements.filter((n) => n !== undefined);\n  return ret;\n};\n\nexport default Chart;\n"],"sourceRoot":""}