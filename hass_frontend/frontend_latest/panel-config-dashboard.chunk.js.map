{"version":3,"sources":["webpack:///./src/components/ha-icon-next.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/mixins/navigate-mixin.js","webpack:///./src/panels/config/dashboard/ha-config-dashboard.js","webpack:///./src/panels/config/dashboard/ha-config-navigation.js","webpack:///./src/panels/config/ha-config-section.js"],"names":["HaIconNext","HaIcon","connectedCallback","icon","window","getComputedStyle","direction","customElements","define","ironIconClass","get","loaded","listen","node","eventName","methodName","_iconsetName","dedupingMixin","superClass","properties","hass","Object","localize","type","Function","computed","__computeLocalize","navigate","args","HaConfigDashboard","NavigateMixin","LocalizeMixin","PolymerElement","template","html","isWide","Boolean","cloudStatus","computeIsLoaded","component","isComponentLoaded","CORE_PAGES","HaConfigNavigation","pages","Array","value","_computeLoaded","page","includes","_computeCaption","_computeDescription","_navigate","ev","model","item","HaConfigSection","narrow","computeContentClasses","classes","computeClasses"],"mappings":"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","file":"panel-config-dashboard.chunk.js","sourcesContent":["import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    this.icon =\n      window.getComputedStyle(this).direction === \"ltr\"\n        ? \"hass:chevron-right\"\n        : \"hass:chevron-left\";\n\n    // calling super after setting icon to have it consistently show the icon (otherwise not always shown)\n    super.connectedCallback();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\nimport { navigate } from \"../common/navigate\";\n\n/*\n * @polymerMixin\n * @appliesMixin EventsMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      navigate(...args) {\n        navigate(this, ...args);\n      }\n    }\n);\n","import \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-menu-button\";\nimport \"../../../components/ha-icon-next\";\n\nimport \"../ha-config-section\";\nimport \"./ha-config-navigation\";\n\nimport isComponentLoaded from \"../../../common/config/is_component_loaded\";\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\nimport NavigateMixin from \"../../../mixins/navigate-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigDashboard extends NavigateMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      ha-card {\n        overflow: hidden;\n      }\n      .content {\n        padding-bottom: 32px;\n      }\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <ha-menu-button></ha-menu-button>\n          <div main-title=\"\">[[localize('panel.config')]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class=\"content\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">[[localize('ui.panel.config.header')]]</span>\n          <span slot=\"introduction\">[[localize('ui.panel.config.introduction')]]</span>\n\n          <template is=\"dom-if\" if=\"[[computeIsLoaded(hass, 'cloud')]]\">\n            <ha-card>\n              <a href='/config/cloud' tabindex=\"-1\">\n                <paper-item>\n                  <paper-item-body two-line=\"\">\n                    [[localize('ui.panel.config.cloud.caption')]]\n                    <template is=\"dom-if\" if=\"[[cloudStatus.logged_in]]\">\n                      <div secondary=\"\">\n                        [[localize('ui.panel.config.cloud.description_login', 'email', cloudStatus.email)]]\n                      </div>\n                    </template>\n                    <template is=\"dom-if\" if=\"[[!cloudStatus.logged_in]]\">\n                      <div secondary=\"\">\n                        [[localize('ui.panel.config.cloud.description_features')]]\n                      </div>\n                    </template>\n                  </paper-item-body>\n                  <ha-icon-next></ha-icon-next>\n                </paper-item>\n              </ha-card>\n            </a>\n          </template>\n\n          <ha-card>\n            <a href='/config/integrations/dashboard' tabindex=\"-1\">\n              <paper-item>\n                <paper-item-body two-line>\n                  [[localize('ui.panel.config.integrations.caption')]]\n                  <div secondary>\n                    [[localize('ui.panel.config.integrations.description')]]\n                  </div>\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            </a>\n\n            <a href='/config/users' tabindex=\"-1\">\n              <paper-item>\n                <paper-item-body two-line>\n                  [[localize('ui.panel.config.users.caption')]]\n                  <div secondary>\n                    [[localize('ui.panel.config.users.description')]]\n                  </div>\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            </a>\n          </ha-card>\n\n          <ha-config-navigation hass=\"[[hass]]\"></ha-config-navigation>\n        </ha-config-section>\n      </div>\n    </app-header-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      cloudStatus: Object,\n    };\n  }\n\n  computeIsLoaded(hass, component) {\n    return isComponentLoaded(hass, component);\n  }\n}\n\ncustomElements.define(\"ha-config-dashboard\", HaConfigDashboard);\n","import \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport NavigateMixin from \"../../../mixins/navigate-mixin\";\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\n\nimport isComponentLoaded from \"../../../common/config/is_component_loaded\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\n\nconst CORE_PAGES = [\"core\", \"customize\", \"entity_registry\", \"area_registry\"];\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin NavigateMixin\n */\nclass HaConfigNavigation extends LocalizeMixin(NavigateMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex\">\n        ha-card {\n          overflow: hidden;\n        }\n        paper-item {\n          cursor: pointer;\n        }\n      </style>\n      <ha-card>\n        <template is=\"dom-repeat\" items=\"[[pages]]\">\n          <template is=\"dom-if\" if=\"[[_computeLoaded(hass, item)]]\">\n            <paper-item on-click=\"_navigate\">\n              <paper-item-body two-line=\"\">\n                [[_computeCaption(item, localize)]]\n                <div secondary=\"\">[[_computeDescription(item, localize)]]</div>\n              </paper-item-body>\n              <ha-icon-next></ha-icon-next>\n            </paper-item>\n          </template>\n        </template>\n      </ha-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      pages: {\n        type: Array,\n        value: [\n          \"core\",\n          \"person\",\n          \"entity_registry\",\n          \"area_registry\",\n          \"automation\",\n          \"script\",\n          \"zha\",\n          \"zwave\",\n          \"customize\",\n        ],\n      },\n    };\n  }\n\n  _computeLoaded(hass, page) {\n    return CORE_PAGES.includes(page) || isComponentLoaded(hass, page);\n  }\n\n  _computeCaption(page, localize) {\n    return localize(`ui.panel.config.${page}.caption`);\n  }\n\n  _computeDescription(page, localize) {\n    return localize(`ui.panel.config.${page}.description`);\n  }\n\n  _navigate(ev) {\n    this.navigate(\"/config/\" + ev.model.item);\n  }\n}\n\ncustomElements.define(\"ha-config-navigation\", HaConfigNavigation);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../resources/ha-style\";\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 28px 20px 0;\n          max-width: 1040px;\n          margin: 0 auto;\n        }\n\n        .header {\n          @apply --paper-font-display1;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .together {\n          margin-top: 32px;\n        }\n\n        .intro {\n          @apply --paper-font-subhead;\n          width: 100%;\n          max-width: 400px;\n          margin-right: 40px;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .panel {\n          margin-top: -24px;\n        }\n\n        .panel ::slotted(*) {\n          margin-top: 24px;\n          display: block;\n        }\n\n        .narrow.content {\n          max-width: 640px;\n        }\n        .narrow .together {\n          margin-top: 20px;\n        }\n        .narrow .header {\n          @apply --paper-font-headline;\n        }\n        .narrow .intro {\n          font-size: 14px;\n          padding-bottom: 20px;\n          margin-right: 0;\n          max-width: 500px;\n        }\n      </style>\n      <div class$=\"[[computeContentClasses(isWide)]]\">\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = \"content \";\n\n    return isWide ? classes : classes + \"narrow\";\n  }\n\n  computeClasses(isWide) {\n    var classes = \"together layout \";\n\n    return classes + (isWide ? \"horizontal\" : \"vertical narrow\");\n  }\n}\n\ncustomElements.define(\"ha-config-section\", HaConfigSection);\n"],"sourceRoot":""}