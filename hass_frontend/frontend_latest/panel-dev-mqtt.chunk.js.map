{"version":3,"sources":["webpack:///./src/panels/dev-mqtt/ha-panel-dev-mqtt.js","webpack:///./src/util/app-localstorage-document.js"],"names":["HaPanelDevMqtt","PolymerElement","template","html","properties","hass","Object","topic","String","payload","_publish","callService","payload_template","customElements","define","Polymer","is","behaviors","AppStorageBehavior","key","type","notify","sessionOnly","Boolean","value","storage","computed","observers","attached","listen","window","top","detached","unlisten","isNew","saveValue","__setStorageValue","data","e","Promise","reject","resolve","reset","zeroValue","destroy","removeItem","getStoredValue","path","__parseValueFromStorage","get","undefined","setStoredValue","fire","node","__computeStorage","sessionStorage","localStorage","__storageSourceChanged","_initializeStoredValue","__onStorage","event","storageArea","syncToMemory","set","__onAppLocalStorageChanged","detail","JSON","parse","getItem","console","error","setItem","stringify"],"mappings":"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","file":"panel-dev-mqtt.chunk.js","sourcesContent":["import \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-input/paper-textarea\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../components/ha-card\";\nimport \"../../components/ha-menu-button\";\nimport \"../../resources/ha-style\";\nimport \"../../util/app-localstorage-document\";\n\nclass HaPanelDevMqtt extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .content {\n          padding: 24px 0 32px;\n          max-width: 600px;\n          margin: 0 auto;\n          direction: ltr;\n        }\n\n        mwc-button {\n          background-color: white;\n        }\n      </style>\n\n      <app-header-layout has-scrolling-region>\n        <app-header slot=\"header\" fixed>\n          <app-toolbar>\n            <ha-menu-button></ha-menu-button>\n            <div main-title>MQTT</div>\n          </app-toolbar>\n        </app-header>\n\n        <app-localstorage-document key=\"panel-dev-mqtt-topic\" data=\"{{topic}}\">\n        </app-localstorage-document>\n        <app-localstorage-document\n          key=\"panel-dev-mqtt-payload\"\n          data=\"{{payload}}\"\n        >\n        </app-localstorage-document>\n\n        <div class=\"content\">\n          <ha-card header=\"Publish a packet\">\n            <div class=\"card-content\">\n              <paper-input label=\"topic\" value=\"{{topic}}\"></paper-input>\n\n              <paper-textarea\n                always-float-label\n                label=\"Payload (template allowed)\"\n                value=\"{{payload}}\"\n              ></paper-textarea>\n            </div>\n            <div class=\"card-actions\">\n              <mwc-button on-click=\"_publish\">Publish</mwc-button>\n            </div>\n          </ha-card>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      topic: String,\n      payload: String,\n    };\n  }\n\n  _publish() {\n    this.hass.callService(\"mqtt\", \"publish\", {\n      topic: this.topic,\n      payload_template: this.payload,\n    });\n  }\n}\n\ncustomElements.define(\"ha-panel-dev-mqtt\", HaPanelDevMqtt);\n","/* Forked because it contained an import.meta which webpack doesn't support. */\n/* eslint-disable */\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { AppStorageBehavior } from \"@polymer/app-storage/app-storage-behavior\";\nimport { Polymer } from \"@polymer/polymer/lib/legacy/polymer-fn\";\nimport \"@polymer/polymer/polymer-legacy\";\n\n/**\n * app-localstorage-document synchronizes storage between an in-memory\n * value and a location in the browser's localStorage system.\n *\n * localStorage is a simple and widely supported storage API that provides both\n * permanent and session-based storage options. Using app-localstorage-document\n * you can easily integrate localStorage into your app via normal Polymer\n * databinding.\n *\n * app-localstorage-document is the reference implementation of an element\n * that uses `AppStorageBehavior`. Reading its code is a good way to get\n * started writing your own storage element.\n *\n * Example use:\n *\n *     <paper-input value=\"{{search}}\"></paper-input>\n *     <app-localstorage-document key=\"search\" data=\"{{search}}\">\n *     </app-localstorage-document>\n *\n * app-localstorage-document automatically synchronizes changes to the\n * same key across multiple tabs.\n *\n * Only supports storing JSON-serializable values.\n */\nPolymer({\n  is: \"app-localstorage-document\",\n  behaviors: [AppStorageBehavior],\n\n  properties: {\n    /**\n     * Defines the logical location to store the data.\n     *\n     * @type{String}\n     */\n    key: { type: String, notify: true },\n\n    /**\n     * If true, the data will automatically be cleared from storage when\n     * the page session ends (i.e. when the user has navigated away from\n     * the page).\n     */\n    sessionOnly: { type: Boolean, value: false },\n\n    /**\n     * Either `window.localStorage` or `window.sessionStorage`, depending on\n     * `this.sessionOnly`.\n     */\n    storage: { type: Object, computed: \"__computeStorage(sessionOnly)\" },\n  },\n\n  observers: [\"__storageSourceChanged(storage, key)\"],\n\n  attached: function() {\n    this.listen(window, \"storage\", \"__onStorage\");\n    this.listen(\n      window.top,\n      \"app-local-storage-changed\",\n      \"__onAppLocalStorageChanged\"\n    );\n  },\n\n  detached: function() {\n    this.unlisten(window, \"storage\", \"__onStorage\");\n    this.unlisten(\n      window.top,\n      \"app-local-storage-changed\",\n      \"__onAppLocalStorageChanged\"\n    );\n  },\n\n  get isNew() {\n    return !this.key;\n  },\n\n  /**\n   * Stores a value at the given key, and if successful, updates this.key.\n   *\n   * @param {*} key The new key to use.\n   * @return {Promise}\n   */\n  saveValue: function(key) {\n    try {\n      this.__setStorageValue(/*{@type if (key ty){String}}*/ key, this.data);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    this.key = /** @type {String} */ (key);\n\n    return Promise.resolve();\n  },\n\n  reset: function() {\n    this.key = null;\n    this.data = this.zeroValue;\n  },\n\n  destroy: function() {\n    try {\n      this.storage.removeItem(this.key);\n      this.reset();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    return Promise.resolve();\n  },\n\n  getStoredValue: function(path) {\n    var value;\n\n    if (this.key != null) {\n      try {\n        value = this.__parseValueFromStorage();\n\n        if (value != null) {\n          value = this.get(path, { data: value });\n        } else {\n          value = undefined;\n        }\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n\n    return Promise.resolve(value);\n  },\n\n  setStoredValue: function(path, value) {\n    if (this.key != null) {\n      try {\n        this.__setStorageValue(this.key, this.data);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n\n      this.fire(\"app-local-storage-changed\", this, { node: window.top });\n    }\n\n    return Promise.resolve(value);\n  },\n\n  __computeStorage: function(sessionOnly) {\n    return sessionOnly ? window.sessionStorage : window.localStorage;\n  },\n\n  __storageSourceChanged: function(storage, key) {\n    this._initializeStoredValue();\n  },\n\n  __onStorage: function(event) {\n    if (event.key !== this.key || event.storageArea !== this.storage) {\n      return;\n    }\n\n    this.syncToMemory(function() {\n      this.set(\"data\", this.__parseValueFromStorage());\n    });\n  },\n\n  __onAppLocalStorageChanged: function(event) {\n    if (\n      event.detail === this ||\n      event.detail.key !== this.key ||\n      event.detail.storage !== this.storage\n    ) {\n      return;\n    }\n    this.syncToMemory(function() {\n      this.set(\"data\", event.detail.data);\n    });\n  },\n\n  __parseValueFromStorage: function() {\n    try {\n      return JSON.parse(this.storage.getItem(this.key));\n    } catch (e) {\n      console.error(\"Failed to parse value from storage for\", this.key);\n    }\n  },\n\n  __setStorageValue: function(key, value) {\n    if (typeof value === \"undefined\") value = null;\n    this.storage.setItem(key, JSON.stringify(value));\n  },\n});\n"],"sourceRoot":""}