{"version":3,"sources":["webpack:///./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js","webpack:///./node_modules/@polymer/app-storage/app-storage-behavior.js"],"names":["Polymer","_template","html","is","behaviors","AppLayoutBehavior","properties","hasScrollingRegion","type","Boolean","value","reflectToAttribute","observers","header","dom","$","headerSlot","getDistributedNodes","_updateLayoutStates","isAttached","wrapper","classList","remove","scrollTarget","contentContainer","ownerDocument","documentElement","headerHeight","offsetHeight","requestAnimationFrame","rect","getBoundingClientRect","rightOffset","document","clientWidth","right","style","left","bind","containerStyle","fixed","condenses","marginTop","paddingTop","SPLICES_RX","LENGTH_RX","NUMBER_RX","AppStorageBehavior","data","Object","notify","zeroValue","sequentialTransactions","log","created","__initialized","__syncingToMemory","__initializingStoredValue","__transactionQueueAdvances","Promise","resolve","ready","_initializeStoredValue","isNew","transactionsComplete","undefined","saveValue","args","reset","destroy","initializeStoredValue","_getStoredValue","then","_log","_setStoredValue","syncToMemory","set","getStoredValue","storagePath","setStoredValue","memoryPathToStoragePath","path","storagePathToMemoryPath","operation","_group","call","_groupEnd","valueIsEmpty","Array","isArray","length","prototype","isPrototypeOf","keys","_enqueueTransaction","transaction","result","catch","error","_error","console","apply","group","groupEnd","initializingStoredValue","e","__dataChanged","change","__pathCanBeIgnored","__normalizeMemoryPath","indexSplices","__pathIsSplices","__parentPath","get","parts","split","parentPath","currentPath","normalizedPath","index","i","push","test","indexOf","join","slice","__pathRefersToArray","__pathTailToIndex","tail","pop","window","parseInt","replace"],"mappings":"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","file":"vendors~panel-dev-mqtt~panel-dev-service.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {AppLayoutBehavior} from '../app-layout-behavior/app-layout-behavior.js';\n\n/**\napp-header-layout is a wrapper element that positions an app-header and other\ncontent. This element uses the document scroll by default, but it can also\ndefine its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of\nits container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n@group App Elements\n@element app-header-layout\n@demo app-header-layout/demo/simple.html Simple Demo\n@demo app-header-layout/demo/scrolling-region.html Scrolling Region\n@demo app-header-layout/demo/music.html Music Demo\n@demo app-header-layout/demo/footer.html Footer Demo\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n        position: relative;\n        z-index: 0;\n      }\n\n      #wrapper ::slotted([slot=header]) {\n        @apply --layout-fixed-top;\n        z-index: 1;\n      }\n\n      #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) {\n        height: 100%;\n      }\n\n      :host([has-scrolling-region]) #wrapper ::slotted([slot=header]) {\n        position: absolute;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) #wrapper #contentContainer {\n        @apply --layout-fit;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n        position: relative;\n      }\n\n      :host([fullbleed]) {\n        @apply --layout-vertical;\n        @apply --layout-fit;\n      }\n\n      :host([fullbleed]) #wrapper,\n      :host([fullbleed]) #wrapper #contentContainer {\n        @apply --layout-vertical;\n        @apply --layout-flex;\n      }\n\n      #contentContainer {\n        /* Create a stacking context here so that all children appear below the header. */\n        position: relative;\n        z-index: 0;\n      }\n\n      @media print {\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          overflow-y: visible;\n        }\n      }\n\n    </style>\n\n    <div id=\"wrapper\" class=\"initializing\">\n      <slot id=\"headerSlot\" name=\"header\"></slot>\n\n      <div id=\"contentContainer\">\n        <slot></slot>\n      </div>\n    </div>\n`,\n\n  is: 'app-header-layout',\n  behaviors: [AppLayoutBehavior],\n\n  properties: {\n    /**\n     * If true, the current element will have its own scrolling region.\n     * Otherwise, it will use the document scroll to control the header.\n     */\n    hasScrollingRegion: {type: Boolean, value: false, reflectToAttribute: true}\n  },\n\n  observers: ['resetLayout(isAttached, hasScrollingRegion)'],\n\n  /**\n   * A reference to the app-header element.\n   *\n   * @property header\n   */\n  get header() {\n    return dom(this.$.headerSlot).getDistributedNodes()[0];\n  },\n\n  _updateLayoutStates: function() {\n    var header = this.header;\n    if (!this.isAttached || !header) {\n      return;\n    }\n    // Remove the initializing class, which staticly positions the header and\n    // the content until the height of the header can be read.\n    this.$.wrapper.classList.remove('initializing');\n    // Update scroll target.\n    header.scrollTarget = this.hasScrollingRegion ?\n        this.$.contentContainer :\n        this.ownerDocument.documentElement;\n    // Get header height here so that style reads are batched together before\n    // style writes (i.e. getBoundingClientRect() below).\n    var headerHeight = header.offsetHeight;\n    // Update the header position.\n    if (!this.hasScrollingRegion) {\n      requestAnimationFrame(function() {\n        var rect = this.getBoundingClientRect();\n        var rightOffset = document.documentElement.clientWidth - rect.right;\n        header.style.left = rect.left + 'px';\n        header.style.right = rightOffset + 'px';\n      }.bind(this));\n    } else {\n      header.style.left = '';\n      header.style.right = '';\n    }\n    // Update the content container position.\n    var containerStyle = this.$.contentContainer.style;\n    if (header.fixed && !header.condenses && this.hasScrollingRegion) {\n      // If the header size does not change and we're using a scrolling region,\n      // exclude the header area from the scrolling region so that the header\n      // doesn't overlap the scrollbar.\n      containerStyle.marginTop = headerHeight + 'px';\n      containerStyle.paddingTop = '';\n    } else {\n      containerStyle.paddingTop = headerHeight + 'px';\n      containerStyle.marginTop = '';\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nvar SPLICES_RX = /\\.splices$/;\nvar LENGTH_RX = /\\.length$/;\nvar NUMBER_RX = /\\.?#?([0-9]+)$/;\n\n/**\n * AppStorageBehavior is an abstract behavior that makes it easy to\n * synchronize in-memory data and a persistent storage system, such as\n * the browser's IndexedDB, or a remote database like Firebase.\n *\n * For examples of how to use this behavior to write your own app storage\n * elements see `<app-localstorage-document>` here, or check out\n * [polymerfire](https://github.com/Firebase/polymerfire) and\n * [app-pouchdb](https://github.com/PolymerElements/app-pouchdb).\n *\n * @polymerBehavior\n */\nexport const AppStorageBehavior = {\n  properties: {\n    /**\n     * The data to synchronize.\n     */\n    data: {\n      type: Object,\n      notify: true,\n      value: function() {\n        return this.zeroValue;\n      }\n    },\n\n    /**\n     * If this is true transactions will happen one after the other,\n     * never in parallel.\n     *\n     * Specifically, no transaction will begin until every previously\n     * enqueued transaction by this element has completed.\n     *\n     * If it is false, new transactions will be executed as they are\n     * received.\n     */\n    sequentialTransactions: {type: Boolean, value: false},\n\n    /**\n     * When true, will perform detailed logging.\n     */\n    log: {type: Boolean, value: false}\n  },\n\n  observers: ['__dataChanged(data.*)'],\n\n  created: function() {\n    this.__initialized = false;\n    this.__syncingToMemory = false;\n    this.__initializingStoredValue = null;\n    this.__transactionQueueAdvances = Promise.resolve();\n  },\n\n  ready: function() {\n    this._initializeStoredValue();\n  },\n\n  /**\n   * Override this getter to return true if the value has never been\n   * persisted to storage.\n   *\n   * @return {boolean}\n   */\n  get isNew() {\n    return true;\n  },\n\n  /**\n   * A promise that will resolve once all queued transactions\n   * have completed.\n   *\n   * This field is updated as new transactions are enqueued, so it will\n   * only wait for transactions which were enqueued when the field\n   * was accessed.\n   *\n   * This promise never rejects.\n   *\n   * @return {Promise}\n   */\n  get transactionsComplete() {\n    return this.__transactionQueueAdvances;\n  },\n\n  /**\n   * Override this getter to define the default value to use when\n   * there's no data stored.\n   *\n   * @return {*}\n   */\n  get zeroValue() {\n    return undefined;\n  },\n\n  /**\n   * Override this method.\n   *\n   * If the data value represented by this storage instance is new, this\n   * method generates an attempt to write the value to storage.\n   *\n   *\n   * @param {*} args\n   * @return {Promise} a Promise that settles only once the write has.\n   */\n  saveValue: function(args) {\n    return Promise.resolve();\n  },\n\n  /**\n   * Optional. Override this method to clear out the mapping of this\n   * storage object and a logical location within storage.\n   *\n   * If this method is supported, after it's called, isNew() should be\n   * true.\n   */\n  reset: function() {},\n\n  /**\n   * Remove the data from storage.\n   *\n   * @return {Promise} A promise that settles once the destruction is\n   *   complete.\n   */\n  destroy: function() {\n    this.data = this.zeroValue;\n    return this.saveValue();\n  },\n\n  /**\n   * Perform the initial sync between storage and memory. This method\n   * is called automatically while the element is being initialized.\n   * Implementations may override it.\n   *\n   * If an implementation intends to call this method, it should instead\n   * call _initializeStoredValue, which provides reentrancy protection.\n   *\n   * @return {Promise} A promise that settles once this process is\n   *     complete.\n   */\n  initializeStoredValue: function() {\n    if (this.isNew) {\n      return Promise.resolve();\n    }\n\n    // If this is not a \"new\" model, then we should attempt\n    // to read an initial value from storage:\n    return this._getStoredValue('data').then(function(data) {\n      this._log('Got stored value!', data, this.data);\n      if (data == null) {\n        return this._setStoredValue('data', this.data || this.zeroValue);\n      } else {\n        this.syncToMemory(function() {\n          this.set('data', data);\n        });\n      }\n    }.bind(this));\n  },\n\n  /**\n   * Override this method to implement reading a value from storage.\n   *\n   *\n   * @param {string} storagePath The path (through storage) of the value to\n   *   create, relative to the root of storage associated with this instance.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. _If there is no\n   *   such value at the provided path through storage, then the promise will\n   *   resolve to `undefined`._ The promise will be rejected if the transaction\n   *   fails for any reason.\n   */\n  getStoredValue: function(storagePath) {\n    return Promise.resolve();\n  },\n\n  /**\n   * Override this method to implement creating and updating\n   * stored values.\n   *\n   *\n   * @param {string} storagePath The path of the value to update, relative\n   *   to the root storage path configured for this instance.\n   * @param {*} value The updated in-memory value to apply to the stored value\n   *   at the provided path.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. The promise\n   *   will be rejected if the transaction fails for any reason.\n   */\n  setStoredValue: function(storagePath, value) {\n    return Promise.resolve(value);\n  },\n\n  /**\n   * Maps a Polymer databinding path to the corresponding path in the\n   * storage system. Override to define a custom mapping.\n   *\n   * The inverse of storagePathToMemoryPath.\n   *\n   * @param {string} path An in-memory path through a storage object.\n   * @return {string} The provided path mapped to the equivalent location in\n   *   storage. This mapped version of the path is suitable for use with the\n   *   CRUD operations on both memory and storage.\n   */\n  memoryPathToStoragePath: function(path) {\n    return path;\n  },\n\n  /**\n   * Maps a storage path to the corresponding Polymer databinding path.\n   * Override to define a custom mapping.\n   *\n   * The inverse of memoryPathToStoragePath.\n   *\n   * @param {string} path The storage path through a storage object.\n   * @return {string} The provided path through storage mapped to the\n   *   equivalent Polymer path through the in-memory representation of storage.\n   */\n  storagePathToMemoryPath: function(path) {\n    return path;\n  },\n\n  /**\n   * Enables performing transformations on the in-memory representation of\n   * storage without activating observers that will cause those\n   * transformations to be re-applied to the storage backend. This is useful\n   * for preventing redundant (or cyclical) application of transformations.\n   *\n   * @param {Function} operation A function that will perform the desired\n   *   transformation. It will be called synchronously, when it is safe to\n   *   apply the transformation.\n   */\n  syncToMemory: function(operation) {\n    if (this.__syncingToMemory) {\n      return;\n    }\n\n    this._group('Sync to memory.');\n\n    this.__syncingToMemory = true;\n    operation.call(this);\n    this.__syncingToMemory = false;\n\n    this._groupEnd('Sync to memory.');\n  },\n\n  /**\n   * A convenience method. Returns true iff value is null, undefined,\n   * an empty array, or an object with no keys.\n   */\n  valueIsEmpty: function(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else if (Object.prototype.isPrototypeOf(value)) {\n      return Object.keys(value).length === 0;\n    } else {\n      return value == null;\n    }\n  },\n\n  /**\n   * Like `getStoredValue` but called with a Polymer path rather than\n   * a storage path.\n   *\n   * @param {string} path The Polymer path to get.\n   * @return {Promise} A Promise of the value stored at that path.\n   */\n  _getStoredValue: function(path) {\n    return this.getStoredValue(this.memoryPathToStoragePath(path));\n  },\n\n  /**\n   * Like `setStoredValue` but called with a Polymer path rather than\n   * a storage path.\n   *\n   * @param {string} path The Polymer path to update.\n   * @param {*} value The updated in-memory value to apply to the stored value\n   *   at the provided path.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. The promise\n   *   will be rejected if the transaction fails for any reason.\n   */\n  _setStoredValue: function(path, value) {\n    return this.setStoredValue(this.memoryPathToStoragePath(path), value);\n  },\n\n  /**\n   * Enqueues the given function in the transaction queue.\n   *\n   * The transaction queue allows for optional parallelism/sequentiality\n   * via the `sequentialTransactions` boolean property, as well as giving\n   * the user a convenient way to wait for all pending transactions to\n   * finish.\n   *\n   * The given function may be called immediately or after an arbitrary\n   * delay. Its `this` context will be bound to the element.\n   *\n   * If the transaction performs any asynchronous operations it must\n   * return a promise.\n   *\n   * @param {Function} transaction A function implementing the transaction.\n   * @return {Promise} A promise that resolves once the transaction has\n   *   finished. This promise will never reject.\n   */\n  _enqueueTransaction: function(transaction) {\n    if (this.sequentialTransactions) {\n      transaction = transaction.bind(this);\n    } else {\n      var result = transaction.call(this);\n      transaction = function() {\n        return result;\n      };\n    }\n\n    return this.__transactionQueueAdvances =\n               this.__transactionQueueAdvances.then(transaction)\n                   .catch(function(error) {\n                     this._error('Error performing queued transaction.', error);\n                   }.bind(this));\n  },\n\n  /**\n   * A wrapper around `console.log`.\n   */\n  _log: function(...args) {\n    if (this.log) {\n      console.log.apply(console, args);\n    }\n  },\n\n  /**\n   * A wrapper around `console.error`.\n   */\n  _error: function(...args) {\n    if (this.log) {\n      console.error.apply(console, args);\n    }\n  },\n\n  /**\n   * A wrapper around `console.group`.\n   */\n  _group: function(...args) {\n    if (this.log) {\n      console.group.apply(console, args);\n    }\n  },\n\n  /**\n   * A wrapper around `console.groupEnd`.\n   */\n  _groupEnd: function(...args) {\n    if (this.log) {\n      console.groupEnd.apply(console, args);\n    }\n  },\n\n  /**\n   * A reentrancy-save wrapper around `this.initializeStoredValue`.\n   * Prefer calling this method over that one.\n   *\n   * @return {Promise} The result of calling `initializeStoredValue`,\n   *   or `undefined` if called while initializing.\n   */\n  _initializeStoredValue: function() {\n    if (this.__initializingStoredValue) {\n      return;\n    }\n\n    this._group('Initializing stored value.');\n\n    var initializingStoredValue = this.__initializingStoredValue =\n        this.initializeStoredValue()\n            .then(function() {\n              this.__initialized = true;\n              this.__initializingStoredValue = null;\n              this._groupEnd('Initializing stored value.');\n            }.bind(this))\n            .catch(function(e) {\n              this.__initializingStoredValue = null;\n              this._groupEnd('Initializing stored value.');\n            }.bind(this));\n\n    return this._enqueueTransaction(function() {\n      return initializingStoredValue;\n    });\n  },\n\n  __dataChanged: function(change) {\n    if (this.isNew || this.__syncingToMemory || !this.__initialized ||\n        this.__pathCanBeIgnored(change.path)) {\n      return;\n    }\n\n    var path = this.__normalizeMemoryPath(change.path);\n    var value = change.value;\n    var indexSplices = value && value.indexSplices;\n\n    this._enqueueTransaction(function() {\n      this._log('Setting', path + ':', indexSplices || value);\n\n      if (indexSplices && this.__pathIsSplices(path)) {\n        path = this.__parentPath(path);\n        value = this.get(path);\n      }\n\n      return this._setStoredValue(path, value);\n    });\n  },\n\n  __normalizeMemoryPath: function(path) {\n    var parts = path.split('.');\n    var parentPath = [];\n    var currentPath = [];\n    var normalizedPath = [];\n    var index;\n\n    for (var i = 0; i < parts.length; ++i) {\n      currentPath.push(parts[i]);\n      if (/^#/.test(parts[i])) {\n        normalizedPath.push(\n            this.get(parentPath).indexOf(this.get(currentPath)));\n      } else {\n        normalizedPath.push(parts[i]);\n      }\n      parentPath.push(parts[i]);\n    }\n\n    return normalizedPath.join('.');\n  },\n\n  __parentPath: function(path) {\n    var parentPath = path.split('.');\n    return parentPath.slice(0, parentPath.length - 1).join('.');\n  },\n\n  __pathCanBeIgnored: function(path) {\n    return LENGTH_RX.test(path) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathIsSplices: function(path) {\n    return SPLICES_RX.test(path) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathRefersToArray: function(path) {\n    return (SPLICES_RX.test(path) || LENGTH_RX.test(path)) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathTailToIndex: function(path) {\n    var tail = path.split('.').pop();\n    return window.parseInt(tail.replace(NUMBER_RX, '$1'), 10);\n  }\n};\n"],"sourceRoot":""}