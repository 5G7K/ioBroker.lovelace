{"version":3,"sources":["webpack:///./src/common/config/is_component_loaded.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/components/ha-sidebar.ts","webpack:///./src/components/user/ha-user-badge.ts","webpack:///./src/external_app/external_config.ts"],"names":["isComponentLoaded","hass","component","config","components","indexOf","ironIconClass","customElements","get","loaded","HaIcon","listen","node","eventName","methodName","_iconsetName","define","computeUrl","urlPath","computePanels","panels","sortValue","map","logbook","history","result","Object","values","filter","panel","title","sort","a","b","aBuiltIn","component_name","bBuiltIn","HaSidebar","property","localStorage","defaultPage","DEFAULT_PANEL","html","user","panelUrl","_defaultPage","localize","url_path","icon","_externalConfig","hasSettingsScreen","_handleExternalAppConfiguration","_handleLogOut","is_admin","changedProps","has","oldHass","auth","external","getExternalConfig","then","conf","fireEvent","ev","preventDefault","fireMessage","type","css","LitElement","computeInitials","name","trim","split","slice","s","substr","join","StateBadge","customElement","initials","classMap","long","length","bus","cache","cfg","sendMessage"],"mappings":"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","file":"ha-sidebar.chunk.js","sourcesContent":["import { HomeAssistant } from \"../../types\";\n\n/** Return if a component is loaded. */\nexport default function isComponentLoaded(\n  hass: HomeAssistant,\n  component: string\n): boolean {\n  return hass && hass.config.components.indexOf(component) !== -1;\n}\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  PropertyValues,\n  property,\n} from \"lit-element\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"./ha-icon\";\n\nimport \"../components/user/ha-user-badge\";\nimport isComponentLoaded from \"../common/config/is_component_loaded\";\nimport { HomeAssistant, PanelInfo } from \"../types\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { DEFAULT_PANEL } from \"../common/const\";\nimport {\n  getExternalConfig,\n  ExternalConfig,\n} from \"../external_app/external_config\";\n\nconst computeUrl = (urlPath) => `/${urlPath}`;\n\nconst computePanels = (hass: HomeAssistant) => {\n  const panels = hass.panels;\n  if (!panels) {\n    return [];\n  }\n\n  const sortValue = {\n    map: 1,\n    logbook: 2,\n    history: 3,\n  };\n  const result: PanelInfo[] = Object.values(panels).filter(\n    (panel) => panel.title\n  );\n\n  result.sort((a, b) => {\n    const aBuiltIn = a.component_name in sortValue;\n    const bBuiltIn = b.component_name in sortValue;\n\n    if (aBuiltIn && bBuiltIn) {\n      return sortValue[a.component_name] - sortValue[b.component_name];\n    }\n    if (aBuiltIn) {\n      return -1;\n    }\n    if (bBuiltIn) {\n      return 1;\n    }\n    // both not built in, sort by title\n    if (a.title! < b.title!) {\n      return -1;\n    }\n    if (a.title! > b.title!) {\n      return 1;\n    }\n    return 0;\n  });\n\n  return result;\n};\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaSidebar extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public _defaultPage?: string =\n    localStorage.defaultPage || DEFAULT_PANEL;\n  @property() private _externalConfig?: ExternalConfig;\n\n  protected render() {\n    const hass = this.hass;\n\n    if (!hass) {\n      return html``;\n    }\n\n    return html`\n      <app-toolbar>\n        <div main-title>Home Assistant</div>\n        ${hass.user\n          ? html`\n              <a href=\"/profile\">\n                <ha-user-badge .user=${hass.user}></ha-user-badge>\n              </a>\n            `\n          : \"\"}\n      </app-toolbar>\n\n      <paper-listbox attr-for-selected=\"data-panel\" .selected=${hass.panelUrl}>\n        <a\n          href=\"${computeUrl(this._defaultPage)}\"\n          data-panel=${this._defaultPage}\n          tabindex=\"-1\"\n        >\n          <paper-icon-item>\n            <ha-icon slot=\"item-icon\" icon=\"hass:apps\"></ha-icon>\n            <span class=\"item-text\">${hass.localize(\"panel.states\")}</span>\n          </paper-icon-item>\n        </a>\n\n        ${computePanels(hass).map(\n          (panel) => html`\n            <a\n              href=\"${computeUrl(panel.url_path)}\"\n              data-panel=\"${panel.url_path}\"\n              tabindex=\"-1\"\n            >\n              <paper-icon-item>\n                <ha-icon slot=\"item-icon\" .icon=\"${panel.icon}\"></ha-icon>\n                <span class=\"item-text\"\n                  >${hass.localize(`panel.${panel.title}`) || panel.title}</span\n                >\n              </paper-icon-item>\n            </a>\n          `\n        )}\n        ${this._externalConfig && this._externalConfig.hasSettingsScreen\n          ? html`\n              <a\n                href=\"#external-app-configuration\"\n                tabindex=\"-1\"\n                @click=${this._handleExternalAppConfiguration}\n              >\n                <paper-icon-item>\n                  <ha-icon\n                    slot=\"item-icon\"\n                    icon=\"hass:cellphone-settings-variant\"\n                  ></ha-icon>\n                  <span class=\"item-text\"\n                    >${hass.localize(\n                      \"ui.sidebar.external_app_configuration\"\n                    )}</span\n                  >\n                </paper-icon-item>\n              </a>\n            `\n          : \"\"}\n        ${!hass.user\n          ? html`\n              <paper-icon-item @click=${this._handleLogOut} class=\"logout\">\n                <ha-icon slot=\"item-icon\" icon=\"hass:exit-to-app\"></ha-icon>\n                <span class=\"item-text\"\n                  >${hass.localize(\"ui.sidebar.log_out\")}</span\n                >\n              </paper-icon-item>\n            `\n          : html``}\n      </paper-listbox>\n\n      ${hass.user && hass.user.is_admin\n        ? html`\n            <div>\n              <div class=\"divider\"></div>\n\n              <div class=\"subheader\">\n                ${hass.localize(\"ui.sidebar.developer_tools\")}\n              </div>\n\n              <div class=\"dev-tools\">\n                <a href=\"/dev-service\" tabindex=\"-1\">\n                  <paper-icon-button\n                    icon=\"hass:remote\"\n                    alt=\"${hass.localize(\"panel.dev-services\")}\"\n                    title=\"${hass.localize(\"panel.dev-services\")}\"\n                  ></paper-icon-button>\n                </a>\n                <a href=\"/dev-state\" tabindex=\"-1\">\n                  <paper-icon-button\n                    icon=\"hass:code-tags\"\n                    alt=\"${hass.localize(\"panel.dev-states\")}\"\n                    title=\"${hass.localize(\"panel.dev-states\")}\"\n                  ></paper-icon-button>\n                </a>\n                <a href=\"/dev-event\" tabindex=\"-1\">\n                  <paper-icon-button\n                    icon=\"hass:radio-tower\"\n                    alt=\"${hass.localize(\"panel.dev-events\")}\"\n                    title=\"${hass.localize(\"panel.dev-events\")}\"\n                  ></paper-icon-button>\n                </a>\n                <a href=\"/dev-template\" tabindex=\"-1\">\n                  <paper-icon-button\n                    icon=\"hass:file-xml\"\n                    alt=\"${hass.localize(\"panel.dev-templates\")}\"\n                    title=\"${hass.localize(\"panel.dev-templates\")}\"\n                  ></paper-icon-button>\n                </a>\n                ${isComponentLoaded(hass, \"mqtt\")\n                  ? html`\n                      <a href=\"/dev-mqtt\" tabindex=\"-1\">\n                        <paper-icon-button\n                          icon=\"hass:altimeter\"\n                          alt=\"${hass.localize(\"panel.dev-mqtt\")}\"\n                          title=\"${hass.localize(\"panel.dev-mqtt\")}\"\n                        ></paper-icon-button>\n                      </a>\n                    `\n                  : html``}\n                <a href=\"/dev-info\" tabindex=\"-1\">\n                  <paper-icon-button\n                    icon=\"hass:information-outline\"\n                    alt=\"${hass.localize(\"panel.dev-info\")}\"\n                    title=\"${hass.localize(\"panel.dev-info\")}\"\n                  ></paper-icon-button>\n                </a>\n              </div>\n            </div>\n          `\n        : \"\"}\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.has(\"_externalConfig\")) {\n      return true;\n    }\n    if (!this.hass || !changedProps.has(\"hass\")) {\n      return false;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant;\n    if (!oldHass) {\n      return true;\n    }\n    const hass = this.hass;\n    return (\n      hass.panels !== oldHass.panels ||\n      hass.panelUrl !== oldHass.panelUrl ||\n      hass.config.components !== oldHass.config.components ||\n      hass.user !== oldHass.user ||\n      hass.localize !== oldHass.localize\n    );\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    if (this.hass && this.hass.auth.external) {\n      getExternalConfig(this.hass.auth.external).then((conf) => {\n        this._externalConfig = conf;\n      });\n    }\n  }\n\n  private _handleLogOut() {\n    fireEvent(this, \"hass-logout\");\n  }\n\n  private _handleExternalAppConfiguration(ev: Event) {\n    ev.preventDefault();\n    this.hass!.auth.external!.fireMessage({\n      type: \"config_screen/show\",\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        height: 100%;\n        display: block;\n        overflow: auto;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        border-right: 1px solid var(--divider-color);\n        background-color: var(\n          --sidebar-background-color,\n          var(--primary-background-color)\n        );\n      }\n\n      app-toolbar {\n        font-weight: 400;\n        color: var(--primary-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        background-color: var(--primary-background-color);\n      }\n\n      app-toolbar a {\n        color: var(--primary-text-color);\n      }\n\n      paper-listbox {\n        padding: 0;\n      }\n\n      paper-listbox > a {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n        text-decoration: none;\n      }\n\n      paper-icon-item {\n        margin: 8px;\n        padding-left: 9px;\n        border-radius: 4px;\n        --paper-item-min-height: 40px;\n      }\n\n      ha-icon[slot=\"item-icon\"] {\n        color: var(--sidebar-icon-color);\n      }\n\n      .iron-selected paper-icon-item:before {\n        border-radius: 4px;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        content: \"\";\n        background-color: var(--sidebar-selected-icon-color);\n        opacity: 0.12;\n        transition: opacity 15ms linear;\n        will-change: opacity;\n      }\n\n      .iron-selected paper-icon-item[pressed]:before {\n        opacity: 0.37;\n      }\n\n      paper-icon-item span {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n      }\n\n      a.iron-selected paper-icon-item ha-icon {\n        color: var(--sidebar-selected-icon-color);\n      }\n\n      a.iron-selected .item-text {\n        color: var(--sidebar-selected-text-color);\n      }\n\n      paper-icon-item.logout {\n        margin-top: 16px;\n      }\n\n      .divider {\n        height: 1px;\n        background-color: var(--divider-color);\n        margin: 4px 0;\n      }\n\n      .subheader {\n        color: var(--sidebar-text-color);\n        font-weight: 500;\n        font-size: 14px;\n        padding: 16px;\n      }\n\n      .dev-tools {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        padding: 0 8px;\n      }\n\n      .dev-tools a {\n        color: var(--sidebar-icon-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-sidebar\": HaSidebar;\n  }\n}\n\ncustomElements.define(\"ha-sidebar\", HaSidebar);\n","import {\n  LitElement,\n  TemplateResult,\n  css,\n  CSSResult,\n  html,\n  property,\n  customElement,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { User } from \"../../data/user\";\nimport { CurrentUser } from \"../../types\";\n\nconst computeInitials = (name: string) => {\n  if (!name) {\n    return \"user\";\n  }\n  return (\n    name\n      .trim()\n      // Split by space and take first 3 words\n      .split(\" \")\n      .slice(0, 3)\n      // Of each word, take first letter\n      .map((s) => s.substr(0, 1))\n      .join(\"\")\n  );\n};\n\n@customElement(\"ha-user-badge\")\nclass StateBadge extends LitElement {\n  @property() public user?: User | CurrentUser;\n\n  protected render(): TemplateResult | void {\n    const user = this.user;\n\n    const initials = user ? computeInitials(user.name) : \"?\";\n\n    return html`\n      <div\n        class=\"${classMap({\n          \"profile-badge\": true,\n          long: initials.length > 2,\n        })}\"\n      >\n        ${initials}\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .profile-badge {\n        display: inline-block;\n        box-sizing: border-box;\n        width: 40px;\n        line-height: 40px;\n        border-radius: 50%;\n        text-align: center;\n        background-color: var(--light-primary-color);\n        text-decoration: none;\n        color: var(--primary-text-color);\n        overflow: hidden;\n      }\n\n      .profile-badge.long {\n        font-size: 80%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-user-badge\": StateBadge;\n  }\n}\n","import { ExternalMessaging } from \"./external_messaging\";\n\nexport interface ExternalConfig {\n  hasSettingsScreen: boolean;\n}\n\nexport const getExternalConfig = (\n  bus: ExternalMessaging\n): Promise<ExternalConfig> => {\n  if (!bus.cache.cfg) {\n    bus.cache.cfg = bus.sendMessage<ExternalConfig>({\n      type: \"config/get\",\n    });\n  }\n  return bus.cache.cfg;\n};\n"],"sourceRoot":""}