{"version":3,"sources":["webpack:///./node_modules/@polymer/iron-menu-behavior/iron-menu-behavior.js","webpack:///./node_modules/@polymer/iron-selector/iron-multi-selectable.js","webpack:///./node_modules/@polymer/iron-selector/iron-selectable.js","webpack:///./node_modules/@polymer/iron-selector/iron-selection.js"],"names":["IronMenuBehaviorImpl","properties","focusedItem","observer","readOnly","type","Object","attrForItemTitle","String","disabled","Boolean","value","_MODIFIER_KEYS","_SEARCH_RESET_TIMEOUT_MS","_previousTabIndex","hostAttributes","observers","listeners","keyBindings","attached","_resetTabindices","select","_defaultFocusAsync","cancelAsync","item","_valueToItem","hasAttribute","_setFocusedItem","IronMultiSelectableBehaviorImpl","apply","arguments","firstSelectedItem","multi","selectedItems","selectedItem","items","forEach","setAttribute","_selection","isSelected","_updateMultiselectable","removeAttribute","_focusWithKeyboardEvent","event","indexOf","key","cancelDebouncer","searchText","_searchText","length","fromCharCode","keyCode","toLocaleLowerCase","searchLength","i","attr","title","getAttribute","trim","slice","debounce","_clearSearchText","_focusPrevious","curFocusIndex","Number","owner","dom","getOwnerRoot","document","activeElement","_focusNext","_applySelection","IronSelectableBehavior","_focusedItemChanged","old","focus","_onIronItemsChanged","detail","addedNodes","_onShiftTabDown","oldTabIndex","_shiftTabPressed","async","_onFocus","rootTarget","tabIndex","isLightDescendant","_onUpKey","keyboardEvent","preventDefault","_onDownKey","_onEscKey","blur","_onKeydown","keyboardEventMatchesKeys","stopPropagation","_activateHandler","call","_disabledChanged","IronMenuBehavior","IronMultiSelectableBehavior","IronA11yKeysBehavior","selectedValues","Array","notify","_toggleSelected","selected","multiChanged","_updateSelected","_shouldUpdateSelection","_updateAttrForSelected","map","_indexToValue","filter","unfilteredValue","_selectMulti","_selectSelected","values","_valuesToItems","undefined","clear","setItemSelected","fallbackSelection","get","fallback","_selectionChange","s","_setSelectedItems","_setSelectedItem","unselected","push","splice","attrForSelected","activateEvent","selectable","selectedClass","selectedAttribute","_excludedLocalNames","created","_bindFilterItem","_filterItem","bind","IronSelection","_observer","_observeItems","_addListener","detached","unobserveNodes","_removeListener","selectPrevious","index","_valueToIndex","selectNext","selectIndex","forceSynchronousItemUpdate","flush","_updateItems","_checkFallback","eventName","listen","unlisten","_activateEventChanged","nodes","queryDistributedElements","prototype","_setItems","_valueForItem","node","localName","propValue","dashToCamelCase","toggleClass","toggleAttribute","fire","observeNodes","mutation","bubbles","cancelable","e","t","target","_itemActivate","parentNode","defaultPrevented","constructor","selectCallback","selection","excludes","toggle"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AAUA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;AAMO,MAAMA,oBAAoB,GAAG;AAElCC,YAAU,EAAE;AAEV;;;;AAIAC,eAAW,EACP;AAACC,cAAQ,EAAE,qBAAX;AAAkCC,cAAQ,EAAE,IAA5C;AAAkDC,UAAI,EAAEC;AAAxD,KAPM;;AASV;;;;;AAKAC,oBAAgB,EAAE;AAACF,UAAI,EAAEG;AAAP,KAdR;;AAgBV;;;AAGAC,YAAQ,EAAE;AACRJ,UAAI,EAAEK,OADE;AAERC,WAAK,EAAE,KAFC;AAGRR,cAAQ,EAAE;AAHF;AAnBA,GAFsB;;AA4BlC;;;;;AAKAS,gBAAc,EAAE,CACd,KADc,EAEd,UAFc,EAGd,UAHc,EAId,SAJc,EAKd,IALc,EAMd,QANc,EAOd,OAPc,EAQd,MARc,EASd,SATc,EAUd,IAVc,EAWd,YAXc,EAYd,OAZc,EAad,OAbc,EAcd,QAdc,EAed,YAfc,CAjCkB;;AAmDlC;AACAC,0BAAwB,EAAE,IApDQ;;AAsDlC;AACAC,mBAAiB,EAAE,CAvDe;AAyDlCC,gBAAc,EAAE;AACd,YAAQ;AADM,GAzDkB;AA6DlCC,WAAS,EAAE,CAAC,+BAAD,CA7DuB;AA+DlCC,WAAS,EAAE;AACT,aAAS,UADA;AAET,eAAW,YAFF;AAGT,0BAAsB;AAHb,GA/DuB;;AAqElC;;;AAGAC,aAAW,EAAE;AACX,UAAM,UADK;AAEX,YAAQ,YAFG;AAGX,WAAO,WAHI;AAIX,yBAAqB;AAJV,GAxEqB;AA+ElCC,UAAQ,EAAE,YAAW;AACnB,SAAKC,gBAAL;AACD,GAjFiC;;AAmFlC;;;;;;;AAOAC,QAAM,EAAE,UAASV,KAAT,EAAgB;AACtB;AACA;AACA,QAAI,KAAKW,kBAAT,EAA6B;AAC3B,WAAKC,WAAL,CAAiB,KAAKD,kBAAtB;AACA,WAAKA,kBAAL,GAA0B,IAA1B;AACD;;AACD,QAAIE,IAAI,GAAG,KAAKC,YAAL,CAAkBd,KAAlB,CAAX;;AACA,QAAIa,IAAI,IAAIA,IAAI,CAACE,YAAL,CAAkB,UAAlB,CAAZ,EACE;;AACF,SAAKC,eAAL,CAAqBH,IAArB;;AACAI,mHAA+B,CAACP,MAAhC,CAAuCQ,KAAvC,CAA6C,IAA7C,EAAmDC,SAAnD;AACD,GAtGiC;;AAwGlC;;;;;;;AAOAV,kBAAgB,EAAE,YAAW;AAC3B,QAAIW,iBAAiB,GAAG,KAAKC,KAAL,GACnB,KAAKC,aAAL,IAAsB,KAAKA,aAAL,CAAmB,CAAnB,CADH,GAEpB,KAAKC,YAFT;AAIA,SAAKC,KAAL,CAAWC,OAAX,CAAmB,UAASZ,IAAT,EAAe;AAChCA,UAAI,CAACa,YAAL,CAAkB,UAAlB,EAA8Bb,IAAI,KAAKO,iBAAT,GAA6B,GAA7B,GAAmC,IAAjE;AACAP,UAAI,CAACa,YAAL,CAAkB,eAAlB,EAAmC,KAAKC,UAAL,CAAgBC,UAAhB,CAA2Bf,IAA3B,CAAnC;AACD,KAHD,EAGG,IAHH;AAID,GAxHiC;;AA0HlC;;;;;;AAMAgB,wBAAsB,EAAE,UAASR,KAAT,EAAgB;AACtC,QAAIA,KAAJ,EAAW;AACT,WAAKK,YAAL,CAAkB,sBAAlB,EAA0C,MAA1C;AACD,KAFD,MAEO;AACL,WAAKI,eAAL,CAAqB,sBAArB;AACD;AACF,GAtIiC;;AAwIlC;;;;;;AAMAC,yBAAuB,EAAE,UAASC,KAAT,EAAgB;AACvC;AACA;AACA;AACA,QAAI,KAAK/B,cAAL,CAAoBgC,OAApB,CAA4BD,KAAK,CAACE,GAAlC,MAA2C,CAAC,CAAhD,EACE;AAEF,SAAKC,eAAL,CAAqB,kBAArB;AAEA,QAAIC,UAAU,GAAG,KAAKC,WAAL,IAAoB,EAArC;AACA,QAAIH,GAAG,GAAGF,KAAK,CAACE,GAAN,IAAaF,KAAK,CAACE,GAAN,CAAUI,MAAV,IAAoB,CAAjC,GACNN,KAAK,CAACE,GADA,GAENrC,MAAM,CAAC0C,YAAP,CAAoBP,KAAK,CAACQ,OAA1B,CAFJ;AAGAJ,cAAU,IAAIF,GAAG,CAACO,iBAAJ,EAAd;AAEA,QAAIC,YAAY,GAAGN,UAAU,CAACE,MAA9B;;AAEA,SAAK,IAAIK,CAAC,GAAG,CAAR,EAAW9B,IAAhB,EAAsBA,IAAI,GAAG,KAAKW,KAAL,CAAWmB,CAAX,CAA7B,EAA4CA,CAAC,EAA7C,EAAiD;AAC/C,UAAI9B,IAAI,CAACE,YAAL,CAAkB,UAAlB,CAAJ,EAAmC;AACjC;AACD;;AAED,UAAI6B,IAAI,GAAG,KAAKhD,gBAAL,IAAyB,aAApC;AACA,UAAIiD,KAAK,GAAG,CAAChC,IAAI,CAAC+B,IAAD,CAAJ,IAAc/B,IAAI,CAACiC,YAAL,CAAkBF,IAAlB,CAAd,IAAyC,EAA1C,EAA8CG,IAA9C,EAAZ;;AAEA,UAAIF,KAAK,CAACP,MAAN,GAAeI,YAAnB,EAAiC;AAC/B;AACD;;AAED,UAAIG,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeN,YAAf,EAA6BD,iBAA7B,MAAoDL,UAAxD,EAAoE;AAClE,aAAKpB,eAAL,CAAqBH,IAArB;;AACA;AACD;AACF;;AAED,SAAKwB,WAAL,GAAmBD,UAAnB;AACA,SAAKa,QAAL,CACI,kBADJ,EAEI,KAAKC,gBAFT,EAGI,KAAKhD,wBAHT;AAID,GAtLiC;AAwLlCgD,kBAAgB,EAAE,YAAW;AAC3B,SAAKb,WAAL,GAAmB,EAAnB;AACD,GA1LiC;;AA4LlC;;;;;AAKAc,gBAAc,EAAE,YAAW;AACzB,QAAIb,MAAM,GAAG,KAAKd,KAAL,CAAWc,MAAxB;AACA,QAAIc,aAAa,GAAGC,MAAM,CAAC,KAAKpB,OAAL,CAAa,KAAK1C,WAAlB,CAAD,CAA1B;;AAEA,SAAK,IAAIoD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,GAAG,CAA7B,EAAgCK,CAAC,EAAjC,EAAqC;AACnC,UAAI9B,IAAI,GAAG,KAAKW,KAAL,CAAW,CAAC4B,aAAa,GAAGT,CAAhB,GAAoBL,MAArB,IAA+BA,MAA1C,CAAX;;AACA,UAAI,CAACzB,IAAI,CAACE,YAAL,CAAkB,UAAlB,CAAL,EAAoC;AAClC,YAAIuC,KAAK,GAAGC,sFAAG,CAAC1C,IAAD,CAAH,CAAU2C,YAAV,MAA4BC,QAAxC;;AACA,aAAKzC,eAAL,CAAqBH,IAArB,EAFkC,CAIlC;AACA;;;AACA,YAAI0C,sFAAG,CAACD,KAAD,CAAH,CAAWI,aAAX,IAA4B7C,IAAhC,EAAsC;AACpC;AACD;AACF;AACF;AACF,GAlNiC;;AAoNlC;;;;;AAKA8C,YAAU,EAAE,YAAW;AACrB,QAAIrB,MAAM,GAAG,KAAKd,KAAL,CAAWc,MAAxB;AACA,QAAIc,aAAa,GAAGC,MAAM,CAAC,KAAKpB,OAAL,CAAa,KAAK1C,WAAlB,CAAD,CAA1B;;AAEA,SAAK,IAAIoD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,GAAG,CAA7B,EAAgCK,CAAC,EAAjC,EAAqC;AACnC,UAAI9B,IAAI,GAAG,KAAKW,KAAL,CAAW,CAAC4B,aAAa,GAAGT,CAAjB,IAAsBL,MAAjC,CAAX;;AACA,UAAI,CAACzB,IAAI,CAACE,YAAL,CAAkB,UAAlB,CAAL,EAAoC;AAClC,YAAIuC,KAAK,GAAGC,sFAAG,CAAC1C,IAAD,CAAH,CAAU2C,YAAV,MAA4BC,QAAxC;;AACA,aAAKzC,eAAL,CAAqBH,IAArB,EAFkC,CAIlC;AACA;;;AACA,YAAI0C,sFAAG,CAACD,KAAD,CAAH,CAAWI,aAAX,IAA4B7C,IAAhC,EAAsC;AACpC;AACD;AACF;AACF;AACF,GA1OiC;;AA4OlC;;;;;;;;AAQA+C,iBAAe,EAAE,UAAS/C,IAAT,EAAee,UAAf,EAA2B;AAC1C,QAAIA,UAAJ,EAAgB;AACdf,UAAI,CAACa,YAAL,CAAkB,eAAlB,EAAmC,MAAnC;AACD,KAFD,MAEO;AACLb,UAAI,CAACa,YAAL,CAAkB,eAAlB,EAAmC,OAAnC;AACD;;AACDmC,oGAAsB,CAACD,eAAvB,CAAuC1C,KAAvC,CAA6C,IAA7C,EAAmDC,SAAnD;AACD,GA3PiC;;AA6PlC;;;;;;;;AAQA2C,qBAAmB,EAAE,UAASvE,WAAT,EAAsBwE,GAAtB,EAA2B;AAC9CA,OAAG,IAAIA,GAAG,CAACrC,YAAJ,CAAiB,UAAjB,EAA6B,IAA7B,CAAP;;AACA,QAAInC,WAAW,IAAI,CAACA,WAAW,CAACwB,YAAZ,CAAyB,UAAzB,CAAhB,IACA,CAAC,KAAKjB,QADV,EACoB;AAClBP,iBAAW,CAACmC,YAAZ,CAAyB,UAAzB,EAAqC,GAArC;AACAnC,iBAAW,CAACyE,KAAZ;AACD;AACF,GA5QiC;;AA8QlC;;;;;;;AAOAC,qBAAmB,EAAE,UAASjC,KAAT,EAAgB;AACnC,QAAIA,KAAK,CAACkC,MAAN,CAAaC,UAAb,CAAwB7B,MAA5B,EAAoC;AAClC,WAAK7B,gBAAL;AACD;AACF,GAzRiC;;AA2RlC;;;;;AAKA2D,iBAAe,EAAE,UAASpC,KAAT,EAAgB;AAC/B,QAAIqC,WAAW,GAAG,KAAKvB,YAAL,CAAkB,UAAlB,CAAlB;AAEAzD,wBAAoB,CAACiF,gBAArB,GAAwC,IAAxC;;AAEA,SAAKtD,eAAL,CAAqB,IAArB;;AAEA,SAAKU,YAAL,CAAkB,UAAlB,EAA8B,IAA9B;AAEA,SAAK6C,KAAL,CAAW,YAAW;AACpB,WAAK7C,YAAL,CAAkB,UAAlB,EAA8B2C,WAA9B;AACAhF,0BAAoB,CAACiF,gBAArB,GAAwC,KAAxC,CAFoB,CAGpB;AACD,KAJD,EAIG,CAJH;AAKD,GA9SiC;;AAgTlC;;;;;AAKAE,UAAQ,EAAE,UAASxC,KAAT,EAAgB;AACxB,QAAI3C,oBAAoB,CAACiF,gBAAzB,EAA2C;AACzC;AACA;AACD,KAJuB,CAMxB;AACA;;;AACA,QAAIG,UAAU;AACV;AAA6BlB,0FAAG,CAACvB,KAAD,CAAH,CAAWyC,UAD5C;;AAEA,QAAIA,UAAU,KAAK,IAAf,IAAuB,OAAOA,UAAU,CAACC,QAAlB,KAA+B,WAAtD,IACA,CAAC,KAAKC,iBAAL,CAAuBF,UAAvB,CADL,EACyC;AACvC;AACD,KAbuB,CAexB;;;AACA,SAAK9D,kBAAL,GAA0B,KAAK4D,KAAL,CAAW,YAAW;AAC9C;AACA;AACA,UAAInD,iBAAiB,GAAG,KAAKC,KAAL,GACnB,KAAKC,aAAL,IAAsB,KAAKA,aAAL,CAAmB,CAAnB,CADH,GAEpB,KAAKC,YAFT;;AAIA,WAAKP,eAAL,CAAqB,IAArB;;AAEA,UAAII,iBAAJ,EAAuB;AACrB,aAAKJ,eAAL,CAAqBI,iBAArB;AACD,OAFD,MAEO,IAAI,KAAKI,KAAL,CAAW,CAAX,CAAJ,EAAmB;AACxB;AACA,aAAKmC,UAAL;AACD;AACF,KAfyB,CAA1B;AAgBD,GArViC;;AAuVlC;;;;;AAKAiB,UAAQ,EAAE,UAAS5C,KAAT,EAAgB;AACxB;AACA,SAAKmB,cAAL;;AACAnB,SAAK,CAACkC,MAAN,CAAaW,aAAb,CAA2BC,cAA3B;AACD,GAhWiC;;AAkWlC;;;;;AAKAC,YAAU,EAAE,UAAS/C,KAAT,EAAgB;AAC1B,SAAK2B,UAAL;;AACA3B,SAAK,CAACkC,MAAN,CAAaW,aAAb,CAA2BC,cAA3B;AACD,GA1WiC;;AA4WlC;;;;;AAKAE,WAAS,EAAE,UAAShD,KAAT,EAAgB;AACzB,QAAIzC,WAAW,GAAG,KAAKA,WAAvB;;AACA,QAAIA,WAAJ,EAAiB;AACfA,iBAAW,CAAC0F,IAAZ;AACD;AACF,GAtXiC;;AAwXlC;;;;;AAKAC,YAAU,EAAE,UAASlD,KAAT,EAAgB;AAC1B,QAAI,CAAC,KAAKmD,wBAAL,CAA8BnD,KAA9B,EAAqC,aAArC,CAAL,EAA0D;AACxD;AACA,WAAKD,uBAAL,CAA6BC,KAA7B;AACD;;AACDA,SAAK,CAACoD,eAAN;AACD,GAnYiC;AAqYlC;AACAC,kBAAgB,EAAE,UAASrD,KAAT,EAAgB;AAChC6B,oGAAsB,CAACwB,gBAAvB,CAAwCC,IAAxC,CAA6C,IAA7C,EAAmDtD,KAAnD;;AACAA,SAAK,CAACoD,eAAN;AACD,GAzYiC;;AA2YlC;;;;AAIAG,kBAAgB,EAAE,UAASzF,QAAT,EAAmB;AACnC,QAAIA,QAAJ,EAAc;AACZ,WAAKK,iBAAL,GACI,KAAKY,YAAL,CAAkB,UAAlB,IAAgC,KAAK2D,QAArC,GAAgD,CADpD;AAEA,WAAK5C,eAAL,CACI,UADJ,EAHY,CAIM;AACnB,KALD,MAKO,IAAI,CAAC,KAAKf,YAAL,CAAkB,UAAlB,CAAL,EAAoC;AACzC,WAAKW,YAAL,CAAkB,UAAlB,EAA8B,KAAKvB,iBAAnC;AACD;AACF;AAxZiC,CAA7B;AA2ZPd,oBAAoB,CAACiF,gBAArB,GAAwC,KAAxC;AAEA;;AACO,MAAMkB,gBAAgB,GACzB,CAACC,2GAAD,EAA8BC,gHAA9B,EAAoDrG,oBAApD,CADG,C;;;;;;;;;;;;ACrbP;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AAUA;AAEA;AAEA;;;;AAGO,MAAM4B,+BAA+B,GAAG;AAC7C3B,YAAU,EAAE;AAEV;;;AAGA+B,SAAK,EAAE;AAAC3B,UAAI,EAAEK,OAAP;AAAgBC,WAAK,EAAE,KAAvB;AAA8BR,cAAQ,EAAE;AAAxC,KALG;;AAOV;;;;AAIAmG,kBAAc,EAAE;AACdjG,UAAI,EAAEkG,KADQ;AAEdC,YAAM,EAAE,IAFM;AAGd7F,WAAK,EAAE,YAAW;AAChB,eAAO,EAAP;AACD;AALa,KAXN;;AAmBV;;;AAGAsB,iBAAa,EAAE;AACb5B,UAAI,EAAEkG,KADO;AAEbnG,cAAQ,EAAE,IAFG;AAGboG,YAAM,EAAE,IAHK;AAIb7F,WAAK,EAAE,YAAW;AAChB,eAAO,EAAP;AACD;AANY;AAtBL,GADiC;AAkC7CK,WAAS,EAAE,CAAC,yCAAD,CAlCkC;;AAoC7C;;;;;;;;AAQAK,QAAM,EAAE,UAASV,KAAT,EAAgB;AACtB,QAAI,KAAKqB,KAAT,EAAgB;AACd,WAAKyE,eAAL,CAAqB9F,KAArB;AACD,KAFD,MAEO;AACL,WAAK+F,QAAL,GAAgB/F,KAAhB;AACD;AACF,GAlD4C;AAoD7CgG,cAAY,EAAE,UAAS3E,KAAT,EAAgB;AAC5B,SAAKM,UAAL,CAAgBN,KAAhB,GAAwBA,KAAxB;;AACA,SAAK4E,eAAL;AACD,GAvD4C;;AAyD7C;AACA,MAAIC,sBAAJ,GAA6B;AAC3B,WAAO,KAAKH,QAAL,IAAiB,IAAjB,IACF,KAAKJ,cAAL,IAAuB,IAAvB,IAA+B,KAAKA,cAAL,CAAoBrD,MADxD;AAED,GA7D4C;;AA+D7C6D,wBAAsB,EAAE,YAAW;AACjC,QAAI,CAAC,KAAK9E,KAAV,EAAiB;AACfwC,gFAAsB,CAACsC,sBAAvB,CAA8CjF,KAA9C,CAAoD,IAApD;AACD,KAFD,MAEO,IAAI,KAAKI,aAAL,IAAsB,KAAKA,aAAL,CAAmBgB,MAAnB,GAA4B,CAAtD,EAAyD;AAC9D,WAAKqD,cAAL,GACI,KAAKrE,aAAL,CACK8E,GADL,CAEQ,UAAS7E,YAAT,EAAuB;AACrB,eAAO,KAAK8E,aAAL,CAAmB,KAAKpE,OAAL,CAAaV,YAAb,CAAnB,CAAP;AACD,OAJT,EAKQ,IALR,EAMK+E,MANL,CAMY,UAASC,eAAT,EAA0B;AAChC,eAAOA,eAAe,IAAI,IAA1B;AACD,OARL,EAQO,IARP,CADJ;AAUD;AACF,GA9E4C;AAgF7CN,iBAAe,EAAE,YAAW;AAC1B,QAAI,KAAK5E,KAAT,EAAgB;AACd,WAAKmF,YAAL,CAAkB,KAAKb,cAAvB;AACD,KAFD,MAEO;AACL,WAAKc,eAAL,CAAqB,KAAKV,QAA1B;AACD;AACF,GAtF4C;AAwF7CS,cAAY,EAAE,UAASE,MAAT,EAAiB;AAC7BA,UAAM,GAAGA,MAAM,IAAI,EAAnB;AAEA,QAAIpF,aAAa,GACb,CAAC,KAAKqF,cAAL,CAAoBD,MAApB,KAA+B,EAAhC,EAAoCJ,MAApC,CAA2C,UAASzF,IAAT,EAAe;AACxD,aAAOA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK+F,SAAjC;AACD,KAFD,CADJ,CAH6B,CAQ7B;;AACA,SAAKjF,UAAL,CAAgBkF,KAAhB,CAAsBvF,aAAtB,EAT6B,CAW7B;;;AACA,SAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,aAAa,CAACgB,MAAlC,EAA0CK,CAAC,EAA3C,EAA+C;AAC7C,WAAKhB,UAAL,CAAgBmF,eAAhB,CAAgCxF,aAAa,CAACqB,CAAD,CAA7C,EAAkD,IAAlD;AACD,KAd4B,CAgB7B;;;AACA,QAAI,KAAKoE,iBAAL,IAA0B,CAAC,KAAKpF,UAAL,CAAgBqF,GAAhB,GAAsB1E,MAArD,EAA6D;AAC3D,UAAI2E,QAAQ,GAAG,KAAKnG,YAAL,CAAkB,KAAKiG,iBAAvB,CAAf;;AACA,UAAIE,QAAJ,EAAc;AACZ,aAAKvG,MAAL,CAAY,KAAKqG,iBAAjB;AACD;AACF;AACF,GA/G4C;AAiH7CG,kBAAgB,EAAE,YAAW;AAC3B,QAAIC,CAAC,GAAG,KAAKxF,UAAL,CAAgBqF,GAAhB,EAAR;;AACA,QAAI,KAAK3F,KAAT,EAAgB;AACd,WAAK+F,iBAAL,CAAuBD,CAAvB;;AACA,WAAKE,gBAAL,CAAsBF,CAAC,CAAC7E,MAAF,GAAW6E,CAAC,CAAC,CAAD,CAAZ,GAAkB,IAAxC;AACD,KAHD,MAGO;AACL,UAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKP,SAAxB,EAAmC;AACjC,aAAKQ,iBAAL,CAAuB,CAACD,CAAD,CAAvB;;AACA,aAAKE,gBAAL,CAAsBF,CAAtB;AACD,OAHD,MAGO;AACL,aAAKC,iBAAL,CAAuB,EAAvB;;AACA,aAAKC,gBAAL,CAAsB,IAAtB;AACD;AACF;AACF,GA/H4C;AAiI7CvB,iBAAe,EAAE,UAAS9F,KAAT,EAAgB;AAC/B,QAAI2C,CAAC,GAAG,KAAKgD,cAAL,CAAoB1D,OAApB,CAA4BjC,KAA5B,CAAR;AACA,QAAIsH,UAAU,GAAG3E,CAAC,GAAG,CAArB;;AACA,QAAI2E,UAAJ,EAAgB;AACd,WAAKC,IAAL,CAAU,gBAAV,EAA4BvH,KAA5B;AACD,KAFD,MAEO;AACL,WAAKwH,MAAL,CAAY,gBAAZ,EAA8B7E,CAA9B,EAAiC,CAAjC;AACD;AACF,GAzI4C;AA2I7CgE,gBAAc,EAAE,UAASD,MAAT,EAAiB;AAC/B,WAAQA,MAAM,IAAI,IAAX,GAAmB,IAAnB,GAA0BA,MAAM,CAACN,GAAP,CAAW,UAASpG,KAAT,EAAgB;AAC1D,aAAO,KAAKc,YAAL,CAAkBd,KAAlB,CAAP;AACD,KAFgC,EAE9B,IAF8B,CAAjC;AAGD;AA/I4C,CAAxC;AAkJP;;AACO,MAAMyF,2BAA2B,GACpC,CAAC5B,0EAAD,EAAyB5C,+BAAzB,CADG,C;;;;;;;;;;;;ACpKP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AAUA;AAEA;AACA;AAEA;AAEA;;;;AAGO,MAAM4C,sBAAsB,GAAG;AAEpC;;;;;;;;AAQA;;;;;;AAMA;;;;;;AAMA;;;;;;;AAQAvE,YAAU,EAAE;AAEV;;;;;;;;;;AAUAmI,mBAAe,EAAE;AAAC/H,UAAI,EAAEG,MAAP;AAAeG,WAAK,EAAE;AAAtB,KAZP;;AAcV;;;;;AAKA+F,YAAQ,EAAE;AAACrG,UAAI,EAAEG,MAAP;AAAegG,YAAM,EAAE;AAAvB,KAnBA;;AAqBV;;;;;AAKAtE,gBAAY,EAAE;AAAC7B,UAAI,EAAEC,MAAP;AAAeF,cAAQ,EAAE,IAAzB;AAA+BoG,YAAM,EAAE;AAAvC,KA1BJ;;AA4BV;;;;;AAKA6B,iBAAa,EACT;AAAChI,UAAI,EAAEG,MAAP;AAAeG,WAAK,EAAE,KAAtB;AAA6BR,cAAQ,EAAE;AAAvC,KAlCM;;AAoCV;;;;AAIAmI,cAAU,EAAE9H,MAxCF;;AA0CV;;;AAGA+H,iBAAa,EAAE;AAAClI,UAAI,EAAEG,MAAP;AAAeG,WAAK,EAAE;AAAtB,KA7CL;;AA+CV;;;AAGA6H,qBAAiB,EAAE;AAACnI,UAAI,EAAEG,MAAP;AAAeG,WAAK,EAAE;AAAtB,KAlDT;;AAoDV;;;;AAIA+G,qBAAiB,EAAE;AAACrH,UAAI,EAAEG,MAAP;AAAeG,WAAK,EAAE;AAAtB,KAxDT;;AA0DV;;;AAGAwB,SAAK,EAAE;AACL9B,UAAI,EAAEkG,KADD;AAELnG,cAAQ,EAAE,IAFL;AAGLoG,YAAM,EAAE,IAHH;AAIL7F,WAAK,EAAE,YAAW;AAChB,eAAO,EAAP;AACD;AANI,KA7DG;;AAsEV;;;;;;AAMA8H,uBAAmB,EAAE;AACnBpI,UAAI,EAAEC,MADa;AAEnBK,WAAK,EAAE,YAAW;AAChB,eAAO;AACL,sBAAY,CADP;AAEL,sBAAY,CAFP;AAGL,oBAAU,CAHL;AAIL,wBAAc;AAJT,SAAP;AAMD;AATkB;AA5EX,GA9BwB;AAuHpCK,WAAS,EAAE,CACT,yCADS,EAET,2BAFS,EAGT,mCAHS,CAvHyB;AA6HpC0H,SAAO,EAAE,YAAW;AAClB,SAAKC,eAAL,GAAuB,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAvB;AACA,SAAKvG,UAAL,GAAkB,IAAIwG,gEAAJ,CAAkB,KAAKvE,eAAL,CAAqBsE,IAArB,CAA0B,IAA1B,CAAlB,CAAlB;AACD,GAhImC;AAkIpC1H,UAAQ,EAAE,YAAW;AACnB,SAAK4H,SAAL,GAAiB,KAAKC,aAAL,CAAmB,IAAnB,CAAjB;;AACA,SAAKC,YAAL,CAAkB,KAAKZ,aAAvB;AACD,GArImC;AAuIpCa,UAAQ,EAAE,YAAW;AACnB,QAAI,KAAKH,SAAT,EAAoB;AAClB7E,4FAAG,CAAC,IAAD,CAAH,CAAUiF,cAAV,CAAyB,KAAKJ,SAA9B;AACD;;AACD,SAAKK,eAAL,CAAqB,KAAKf,aAA1B;AACD,GA5ImC;;AA8IpC;;;;;;;AAOAzF,SAAO,EAAE,UAASpB,IAAT,EAAe;AACtB,WAAO,KAAKW,KAAL,GAAa,KAAKA,KAAL,CAAWS,OAAX,CAAmBpB,IAAnB,CAAb,GAAwC,CAAC,CAAhD;AACD,GAvJmC;;AAyJpC;;;;;;AAMAH,QAAM,EAAE,UAASV,KAAT,EAAgB;AACtB,SAAK+F,QAAL,GAAgB/F,KAAhB;AACD,GAjKmC;;AAmKpC;;;;;AAKA0I,gBAAc,EAAE,YAAW;AACzB,QAAIpG,MAAM,GAAG,KAAKd,KAAL,CAAWc,MAAxB;AACA,QAAIqG,KAAK,GAAGrG,MAAM,GAAG,CAArB;;AACA,QAAI,KAAKyD,QAAL,KAAkBa,SAAtB,EAAiC;AAC/B+B,WAAK,GAAG,CAACtF,MAAM,CAAC,KAAKuF,aAAL,CAAmB,KAAK7C,QAAxB,CAAD,CAAN,GAA4C,CAA5C,GAAgDzD,MAAjD,IAA2DA,MAAnE;AACD;;AACD,SAAKyD,QAAL,GAAgB,KAAKM,aAAL,CAAmBsC,KAAnB,CAAhB;AACD,GA/KmC;;AAiLpC;;;;;AAKAE,YAAU,EAAE,YAAW;AACrB,QAAIF,KAAK,GAAG,CAAZ;;AACA,QAAI,KAAK5C,QAAL,KAAkBa,SAAtB,EAAiC;AAC/B+B,WAAK,GACD,CAACtF,MAAM,CAAC,KAAKuF,aAAL,CAAmB,KAAK7C,QAAxB,CAAD,CAAN,GAA4C,CAA7C,IAAkD,KAAKvE,KAAL,CAAWc,MADjE;AAED;;AACD,SAAKyD,QAAL,GAAgB,KAAKM,aAAL,CAAmBsC,KAAnB,CAAhB;AACD,GA7LmC;;AA+LpC;;;;;AAKAG,aAAW,EAAE,UAASH,KAAT,EAAgB;AAC3B,SAAKjI,MAAL,CAAY,KAAK2F,aAAL,CAAmBsC,KAAnB,CAAZ;AACD,GAtMmC;;AAwMpC;;;;;;;;;;;;AAYAI,4BAA0B,EAAE,YAAW;AACrC,QAAI,KAAKX,SAAL,IAAkB,OAAO,KAAKA,SAAL,CAAeY,KAAtB,KAAgC,UAAtD,EAAkE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,WAAKZ,SAAL,CAAeY,KAAf;AACD,KARD,MAQO;AACL,WAAKC,YAAL;AACD;AACF,GAhOmC;;AAkOpC;AACA,MAAI/C,sBAAJ,GAA6B;AAC3B,WAAO,KAAKH,QAAL,IAAiB,IAAxB;AACD,GArOmC;;AAuOpCmD,gBAAc,EAAE,YAAW;AACzB,SAAKjD,eAAL;AACD,GAzOmC;AA2OpCqC,cAAY,EAAE,UAASa,SAAT,EAAoB;AAChC,SAAKC,MAAL,CAAY,IAAZ,EAAkBD,SAAlB,EAA6B,kBAA7B;AACD,GA7OmC;AA+OpCV,iBAAe,EAAE,UAASU,SAAT,EAAoB;AACnC,SAAKE,QAAL,CAAc,IAAd,EAAoBF,SAApB,EAA+B,kBAA/B;AACD,GAjPmC;AAmPpCG,uBAAqB,EAAE,UAASH,SAAT,EAAoBpF,GAApB,EAAyB;AAC9C,SAAK0E,eAAL,CAAqB1E,GAArB;;AACA,SAAKuE,YAAL,CAAkBa,SAAlB;AACD,GAtPmC;AAwPpCF,cAAY,EAAE,YAAW;AACvB,QAAIM,KAAK,GAAGhG,sFAAG,CAAC,IAAD,CAAH,CAAUiG,wBAAV,CAAmC,KAAK7B,UAAL,IAAmB,GAAtD,CAAZ;AACA4B,SAAK,GAAG3D,KAAK,CAAC6D,SAAN,CAAgBnD,MAAhB,CAAuBhB,IAAvB,CAA4BiE,KAA5B,EAAmC,KAAKvB,eAAxC,CAAR;;AACA,SAAK0B,SAAL,CAAeH,KAAf;AACD,GA5PmC;AA8PpCpD,wBAAsB,EAAE,YAAW;AACjC,QAAI,KAAK5E,YAAT,EAAuB;AACrB,WAAKwE,QAAL,GAAgB,KAAK4D,aAAL,CAAmB,KAAKpI,YAAxB,CAAhB;AACD;AACF,GAlQmC;AAoQpC0E,iBAAe,EAAE,YAAW;AAC1B,SAAKQ,eAAL,CAAqB,KAAKV,QAA1B;AACD,GAtQmC;AAwQpCU,iBAAe,EAAE,UAASV,QAAT,EAAmB;AAClC,QAAI,CAAC,KAAKvE,KAAV,EAAiB;AACf;AACD;;AAED,QAAIX,IAAI,GAAG,KAAKC,YAAL,CAAkB,KAAKiF,QAAvB,CAAX;;AACA,QAAIlF,IAAJ,EAAU;AACR,WAAKc,UAAL,CAAgBjB,MAAhB,CAAuBG,IAAvB;AACD,KAFD,MAEO;AACL,WAAKc,UAAL,CAAgBkF,KAAhB;AACD,KAViC,CAWlC;AACA;;;AACA,QAAI,KAAKE,iBAAL,IAA0B,KAAKvF,KAAL,CAAWc,MAArC,IACC,KAAKX,UAAL,CAAgBqF,GAAhB,OAA0BJ,SAD/B,EAC2C;AACzC,WAAKb,QAAL,GAAgB,KAAKgB,iBAArB;AACD;AACF,GAzRmC;AA2RpCkB,aAAW,EAAE,UAAS2B,IAAT,EAAe;AAC1B,WAAO,CAAC,KAAK9B,mBAAL,CAAyB8B,IAAI,CAACC,SAA9B,CAAR;AACD,GA7RmC;AA+RpC/I,cAAY,EAAE,UAASd,KAAT,EAAgB;AAC5B,WAAQA,KAAK,IAAI,IAAV,GAAkB,IAAlB,GAAyB,KAAKwB,KAAL,CAAW,KAAKoH,aAAL,CAAmB5I,KAAnB,CAAX,CAAhC;AACD,GAjSmC;AAmSpC4I,eAAa,EAAE,UAAS5I,KAAT,EAAgB;AAC7B,QAAI,KAAKyH,eAAT,EAA0B;AACxB,WAAK,IAAI9E,CAAC,GAAG,CAAR,EAAW9B,IAAhB,EAAsBA,IAAI,GAAG,KAAKW,KAAL,CAAWmB,CAAX,CAA7B,EAA4CA,CAAC,EAA7C,EAAiD;AAC/C,YAAI,KAAKgH,aAAL,CAAmB9I,IAAnB,KAA4Bb,KAAhC,EAAuC;AACrC,iBAAO2C,CAAP;AACD;AACF;AACF,KAND,MAMO;AACL,aAAOU,MAAM,CAACrD,KAAD,CAAb;AACD;AACF,GA7SmC;AA+SpCqG,eAAa,EAAE,UAASsC,KAAT,EAAgB;AAC7B,QAAI,KAAKlB,eAAT,EAA0B;AACxB,UAAI5G,IAAI,GAAG,KAAKW,KAAL,CAAWmH,KAAX,CAAX;;AACA,UAAI9H,IAAJ,EAAU;AACR,eAAO,KAAK8I,aAAL,CAAmB9I,IAAnB,CAAP;AACD;AACF,KALD,MAKO;AACL,aAAO8H,KAAP;AACD;AACF,GAxTmC;AA0TpCgB,eAAa,EAAE,UAAS9I,IAAT,EAAe;AAC5B,QAAI,CAACA,IAAL,EAAW;AACT,aAAO,IAAP;AACD;;AACD,QAAI,CAAC,KAAK4G,eAAV,EAA2B;AACzB,UAAI9E,CAAC,GAAG,KAAKV,OAAL,CAAapB,IAAb,CAAR;AACA,aAAO8B,CAAC,KAAK,CAAC,CAAP,GAAW,IAAX,GAAkBA,CAAzB;AACD;;AACD,QAAImH,SAAS,GAAGjJ,IAAI,CAACkJ,8FAAe,CAAC,KAAKtC,eAAN,CAAhB,CAApB;AACA,WAAOqC,SAAS,IAAIlD,SAAb,GAAyBkD,SAAzB,GACyBjJ,IAAI,CAACiC,YAAL,CAAkB,KAAK2E,eAAvB,CADhC;AAED,GArUmC;AAuUpC7D,iBAAe,EAAE,UAAS/C,IAAT,EAAee,UAAf,EAA2B;AAC1C,QAAI,KAAKgG,aAAT,EAAwB;AACtB,WAAKoC,WAAL,CAAiB,KAAKpC,aAAtB,EAAqChG,UAArC,EAAiDf,IAAjD;AACD;;AACD,QAAI,KAAKgH,iBAAT,EAA4B;AAC1B,WAAKoC,eAAL,CAAqB,KAAKpC,iBAA1B,EAA6CjG,UAA7C,EAAyDf,IAAzD;AACD;;AACD,SAAKqG,gBAAL;;AACA,SAAKgD,IAAL,CAAU,WAAWtI,UAAU,GAAG,QAAH,GAAc,UAAnC,CAAV,EAA0D;AAACf,UAAI,EAAEA;AAAP,KAA1D;AACD,GAhVmC;AAkVpCqG,kBAAgB,EAAE,YAAW;AAC3B,SAAKG,gBAAL,CAAsB,KAAK1F,UAAL,CAAgBqF,GAAhB,EAAtB;AACD,GApVmC;AAsVpC;AACAqB,eAAa,EAAE,UAASuB,IAAT,EAAe;AAC5B,WAAOrG,sFAAG,CAACqG,IAAD,CAAH,CAAUO,YAAV,CAAuB,UAASC,QAAT,EAAmB;AAC/C,WAAKnB,YAAL;;AACA,WAAKhD,eAAL,GAF+C,CAI/C;AACA;;;AACA,WAAKiE,IAAL,CACI,oBADJ,EAC0BE,QAD1B,EACoC;AAACC,eAAO,EAAE,KAAV;AAAiBC,kBAAU,EAAE;AAA7B,OADpC;AAED,KARM,CAAP;AASD,GAjWmC;AAmWpCjF,kBAAgB,EAAE,UAASkF,CAAT,EAAY;AAC5B,QAAIC,CAAC,GAAGD,CAAC,CAACE,MAAV;AACA,QAAIjJ,KAAK,GAAG,KAAKA,KAAjB;;AACA,WAAOgJ,CAAC,IAAIA,CAAC,IAAI,IAAjB,EAAuB;AACrB,UAAI7H,CAAC,GAAGnB,KAAK,CAACS,OAAN,CAAcuI,CAAd,CAAR;;AACA,UAAI7H,CAAC,IAAI,CAAT,EAAY;AACV,YAAI3C,KAAK,GAAG,KAAKqG,aAAL,CAAmB1D,CAAnB,CAAZ;;AACA,aAAK+H,aAAL,CAAmB1K,KAAnB,EAA0BwK,CAA1B;;AACA;AACD;;AACDA,OAAC,GAAGA,CAAC,CAACG,UAAN;AACD;AACF,GA/WmC;AAiXpCD,eAAa,EAAE,UAAS1K,KAAT,EAAgBa,IAAhB,EAAsB;AACnC,QAAI,CAAC,KAAKqJ,IAAL,CAAU,eAAV,EAA2B;AAACnE,cAAQ,EAAE/F,KAAX;AAAkBa,UAAI,EAAEA;AAAxB,KAA3B,EAA0D;AACpDyJ,gBAAU,EAAE;AADwC,KAA1D,EAGKM,gBAHV,EAG4B;AAC1B,WAAKlK,MAAL,CAAYV,KAAZ;AACD;AACF;AAxXmC,CAA/B,C;;;;;;;;;;;;ACpBP;AAAA;AAAA;AAAA;;;;;;;;;;AAUA;AAEO,MAAMmI,aAAN,CAAoB;AACzB;;;;AAIA0C,aAAW,CAACC,cAAD,EAAiB;AAC1B,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKD,cAAL,GAAsBA,cAAtB;AACD;AAED;;;;;;;;;AAOA9D,KAAG,GAAG;AACJ,WAAO,KAAK3F,KAAL,GAAa,KAAK0J,SAAL,CAAe/H,KAAf,EAAb,GAAsC,KAAK+H,SAAL,CAAe,CAAf,CAA7C;AACD;AAED;;;;;;;AAKAlE,OAAK,CAACmE,QAAD,EAAW;AACd,SAAKD,SAAL,CAAe/H,KAAf,GAAuBvB,OAAvB,CAA+B,UAASZ,IAAT,EAAe;AAC5C,UAAI,CAACmK,QAAD,IAAaA,QAAQ,CAAC/I,OAAT,CAAiBpB,IAAjB,IAAyB,CAA1C,EAA6C;AAC3C,aAAKiG,eAAL,CAAqBjG,IAArB,EAA2B,KAA3B;AACD;AACF,KAJD,EAIG,IAJH;AAKD;AAED;;;;;;;;AAMAe,YAAU,CAACf,IAAD,EAAO;AACf,WAAO,KAAKkK,SAAL,CAAe9I,OAAf,CAAuBpB,IAAvB,KAAgC,CAAvC;AACD;AAED;;;;;;;;AAMAiG,iBAAe,CAACjG,IAAD,EAAOe,UAAP,EAAmB;AAChC,QAAIf,IAAI,IAAI,IAAZ,EAAkB;AAChB,UAAIe,UAAU,KAAK,KAAKA,UAAL,CAAgBf,IAAhB,CAAnB,EAA0C;AACxC;AACA;AACA,YAAIe,UAAJ,EAAgB;AACd,eAAKmJ,SAAL,CAAexD,IAAf,CAAoB1G,IAApB;AACD,SAFD,MAEO;AACL,cAAI8B,CAAC,GAAG,KAAKoI,SAAL,CAAe9I,OAAf,CAAuBpB,IAAvB,CAAR;;AACA,cAAI8B,CAAC,IAAI,CAAT,EAAY;AACV,iBAAKoI,SAAL,CAAevD,MAAf,CAAsB7E,CAAtB,EAAyB,CAAzB;AACD;AACF;;AACD,YAAI,KAAKmI,cAAT,EAAyB;AACvB,eAAKA,cAAL,CAAoBjK,IAApB,EAA0Be,UAA1B;AACD;AACF;AACF;AACF;AAED;;;;;;;;;AAOAlB,QAAM,CAACG,IAAD,EAAO;AACX,QAAI,KAAKQ,KAAT,EAAgB;AACd,WAAK4J,MAAL,CAAYpK,IAAZ;AACD,KAFD,MAEO,IAAI,KAAKmG,GAAL,OAAenG,IAAnB,EAAyB;AAC9B,WAAKiG,eAAL,CAAqB,KAAKE,GAAL,EAArB,EAAiC,KAAjC;AACA,WAAKF,eAAL,CAAqBjG,IAArB,EAA2B,IAA3B;AACD;AACF;AAED;;;;;;;AAKAoK,QAAM,CAACpK,IAAD,EAAO;AACX,SAAKiG,eAAL,CAAqBjG,IAArB,EAA2B,CAAC,KAAKe,UAAL,CAAgBf,IAAhB,CAA5B;AACD;;AA7FwB;AA8F1B,C","file":"vendors~dialog-config-flow~ha-sidebar~more-info-dialog~onboarding-core-config~panel-calendar~panel-c~e05044eb.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronA11yKeysBehavior} from '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport {IronMultiSelectableBehavior, IronMultiSelectableBehaviorImpl} from '@polymer/iron-selector/iron-multi-selectable.js';\nimport {IronSelectableBehavior} from '@polymer/iron-selector/iron-selectable.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `IronMenuBehavior` implements accessible menu behavior.\n *\n * @demo demo/index.html\n * @polymerBehavior IronMenuBehavior\n */\nexport const IronMenuBehaviorImpl = {\n\n  properties: {\n\n    /**\n     * Returns the currently focused item.\n     * @type {?Object}\n     */\n    focusedItem:\n        {observer: '_focusedItemChanged', readOnly: true, type: Object},\n\n    /**\n     * The attribute to use on menu items to look up the item title. Typing the\n     * first letter of an item when the menu is open focuses that item. If\n     * unset, `textContent` will be used.\n     */\n    attrForItemTitle: {type: String},\n\n    /**\n     * @type {boolean}\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      observer: '_disabledChanged',\n    },\n  },\n\n  /**\n   * The list of keys has been taken from\n   * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState\n   * @private\n   */\n  _MODIFIER_KEYS: [\n    'Alt',\n    'AltGraph',\n    'CapsLock',\n    'Control',\n    'Fn',\n    'FnLock',\n    'Hyper',\n    'Meta',\n    'NumLock',\n    'OS',\n    'ScrollLock',\n    'Shift',\n    'Super',\n    'Symbol',\n    'SymbolLock'\n  ],\n\n  /** @private */\n  _SEARCH_RESET_TIMEOUT_MS: 1000,\n\n  /** @private */\n  _previousTabIndex: 0,\n\n  hostAttributes: {\n    'role': 'menu',\n  },\n\n  observers: ['_updateMultiselectable(multi)'],\n\n  listeners: {\n    'focus': '_onFocus',\n    'keydown': '_onKeydown',\n    'iron-items-changed': '_onIronItemsChanged'\n  },\n\n  /**\n   * @type {!Object}\n   */\n  keyBindings: {\n    'up': '_onUpKey',\n    'down': '_onDownKey',\n    'esc': '_onEscKey',\n    'shift+tab:keydown': '_onShiftTabDown'\n  },\n\n  attached: function() {\n    this._resetTabindices();\n  },\n\n  /**\n   * Selects the given value. If the `multi` property is true, then the selected\n   * state of the `value` will be toggled; otherwise the `value` will be\n   * selected.\n   *\n   * @param {string|number} value the value to select.\n   */\n  select: function(value) {\n    // Cancel automatically focusing a default item if the menu received focus\n    // through a user action selecting a particular item.\n    if (this._defaultFocusAsync) {\n      this.cancelAsync(this._defaultFocusAsync);\n      this._defaultFocusAsync = null;\n    }\n    var item = this._valueToItem(value);\n    if (item && item.hasAttribute('disabled'))\n      return;\n    this._setFocusedItem(item);\n    IronMultiSelectableBehaviorImpl.select.apply(this, arguments);\n  },\n\n  /**\n   * Resets all tabindex attributes to the appropriate value based on the\n   * current selection state. The appropriate value is `0` (focusable) for\n   * the default selected item, and `-1` (not keyboard focusable) for all\n   * other items. Also sets the correct initial values for aria-selected\n   * attribute, true for default selected item and false for others.\n   */\n  _resetTabindices: function() {\n    var firstSelectedItem = this.multi ?\n        (this.selectedItems && this.selectedItems[0]) :\n        this.selectedItem;\n\n    this.items.forEach(function(item) {\n      item.setAttribute('tabindex', item === firstSelectedItem ? '0' : '-1');\n      item.setAttribute('aria-selected', this._selection.isSelected(item));\n    }, this);\n  },\n\n  /**\n   * Sets appropriate ARIA based on whether or not the menu is meant to be\n   * multi-selectable.\n   *\n   * @param {boolean} multi True if the menu should be multi-selectable.\n   */\n  _updateMultiselectable: function(multi) {\n    if (multi) {\n      this.setAttribute('aria-multiselectable', 'true');\n    } else {\n      this.removeAttribute('aria-multiselectable');\n    }\n  },\n\n  /**\n   * Given a KeyboardEvent, this method will focus the appropriate item in the\n   * menu (if there is a relevant item, and it is possible to focus it).\n   *\n   * @param {KeyboardEvent} event A KeyboardEvent.\n   */\n  _focusWithKeyboardEvent: function(event) {\n    // Make sure that the key pressed is not a modifier key.\n    // getModifierState is not being used, as it is not available in Safari\n    // earlier than 10.0.2 (https://trac.webkit.org/changeset/206725/webkit)\n    if (this._MODIFIER_KEYS.indexOf(event.key) !== -1)\n      return;\n\n    this.cancelDebouncer('_clearSearchText');\n\n    var searchText = this._searchText || '';\n    var key = event.key && event.key.length == 1 ?\n        event.key :\n        String.fromCharCode(event.keyCode);\n    searchText += key.toLocaleLowerCase();\n\n    var searchLength = searchText.length;\n\n    for (var i = 0, item; item = this.items[i]; i++) {\n      if (item.hasAttribute('disabled')) {\n        continue;\n      }\n\n      var attr = this.attrForItemTitle || 'textContent';\n      var title = (item[attr] || item.getAttribute(attr) || '').trim();\n\n      if (title.length < searchLength) {\n        continue;\n      }\n\n      if (title.slice(0, searchLength).toLocaleLowerCase() == searchText) {\n        this._setFocusedItem(item);\n        break;\n      }\n    }\n\n    this._searchText = searchText;\n    this.debounce(\n        '_clearSearchText',\n        this._clearSearchText,\n        this._SEARCH_RESET_TIMEOUT_MS);\n  },\n\n  _clearSearchText: function() {\n    this._searchText = '';\n  },\n\n  /**\n   * Focuses the previous item (relative to the currently focused item) in the\n   * menu, disabled items will be skipped.\n   * Loop until length + 1 to handle case of single item in menu.\n   */\n  _focusPrevious: function() {\n    var length = this.items.length;\n    var curFocusIndex = Number(this.indexOf(this.focusedItem));\n\n    for (var i = 1; i < length + 1; i++) {\n      var item = this.items[(curFocusIndex - i + length) % length];\n      if (!item.hasAttribute('disabled')) {\n        var owner = dom(item).getOwnerRoot() || document;\n        this._setFocusedItem(item);\n\n        // Focus might not have worked, if the element was hidden or not\n        // focusable. In that case, try again.\n        if (dom(owner).activeElement == item) {\n          return;\n        }\n      }\n    }\n  },\n\n  /**\n   * Focuses the next item (relative to the currently focused item) in the\n   * menu, disabled items will be skipped.\n   * Loop until length + 1 to handle case of single item in menu.\n   */\n  _focusNext: function() {\n    var length = this.items.length;\n    var curFocusIndex = Number(this.indexOf(this.focusedItem));\n\n    for (var i = 1; i < length + 1; i++) {\n      var item = this.items[(curFocusIndex + i) % length];\n      if (!item.hasAttribute('disabled')) {\n        var owner = dom(item).getOwnerRoot() || document;\n        this._setFocusedItem(item);\n\n        // Focus might not have worked, if the element was hidden or not\n        // focusable. In that case, try again.\n        if (dom(owner).activeElement == item) {\n          return;\n        }\n      }\n    }\n  },\n\n  /**\n   * Mutates items in the menu based on provided selection details, so that\n   * all items correctly reflect selection state.\n   *\n   * @param {Element} item An item in the menu.\n   * @param {boolean} isSelected True if the item should be shown in a\n   * selected state, otherwise false.\n   */\n  _applySelection: function(item, isSelected) {\n    if (isSelected) {\n      item.setAttribute('aria-selected', 'true');\n    } else {\n      item.setAttribute('aria-selected', 'false');\n    }\n    IronSelectableBehavior._applySelection.apply(this, arguments);\n  },\n\n  /**\n   * Discretely updates tabindex values among menu items as the focused item\n   * changes.\n   *\n   * @param {Element} focusedItem The element that is currently focused.\n   * @param {?Element} old The last element that was considered focused, if\n   * applicable.\n   */\n  _focusedItemChanged: function(focusedItem, old) {\n    old && old.setAttribute('tabindex', '-1');\n    if (focusedItem && !focusedItem.hasAttribute('disabled') &&\n        !this.disabled) {\n      focusedItem.setAttribute('tabindex', '0');\n      focusedItem.focus();\n    }\n  },\n\n  /**\n   * A handler that responds to mutation changes related to the list of items\n   * in the menu.\n   *\n   * @param {CustomEvent} event An event containing mutation records as its\n   * detail.\n   */\n  _onIronItemsChanged: function(event) {\n    if (event.detail.addedNodes.length) {\n      this._resetTabindices();\n    }\n  },\n\n  /**\n   * Handler that is called when a shift+tab keypress is detected by the menu.\n   *\n   * @param {CustomEvent} event A key combination event.\n   */\n  _onShiftTabDown: function(event) {\n    var oldTabIndex = this.getAttribute('tabindex');\n\n    IronMenuBehaviorImpl._shiftTabPressed = true;\n\n    this._setFocusedItem(null);\n\n    this.setAttribute('tabindex', '-1');\n\n    this.async(function() {\n      this.setAttribute('tabindex', oldTabIndex);\n      IronMenuBehaviorImpl._shiftTabPressed = false;\n      // NOTE(cdata): polymer/polymer#1305\n    }, 1);\n  },\n\n  /**\n   * Handler that is called when the menu receives focus.\n   *\n   * @param {FocusEvent} event A focus event.\n   */\n  _onFocus: function(event) {\n    if (IronMenuBehaviorImpl._shiftTabPressed) {\n      // do not focus the menu itself\n      return;\n    }\n\n    // Do not focus the selected tab if the deepest target is part of the\n    // menu element's local DOM and is focusable.\n    var rootTarget =\n        /** @type {?HTMLElement} */ (dom(event).rootTarget);\n    if (rootTarget !== this && typeof rootTarget.tabIndex !== 'undefined' &&\n        !this.isLightDescendant(rootTarget)) {\n      return;\n    }\n\n    // clear the cached focus item\n    this._defaultFocusAsync = this.async(function() {\n      // focus the selected item when the menu receives focus, or the first item\n      // if no item is selected\n      var firstSelectedItem = this.multi ?\n          (this.selectedItems && this.selectedItems[0]) :\n          this.selectedItem;\n\n      this._setFocusedItem(null);\n\n      if (firstSelectedItem) {\n        this._setFocusedItem(firstSelectedItem);\n      } else if (this.items[0]) {\n        // We find the first none-disabled item (if one exists)\n        this._focusNext();\n      }\n    });\n  },\n\n  /**\n   * Handler that is called when the up key is pressed.\n   *\n   * @param {CustomEvent} event A key combination event.\n   */\n  _onUpKey: function(event) {\n    // up and down arrows moves the focus\n    this._focusPrevious();\n    event.detail.keyboardEvent.preventDefault();\n  },\n\n  /**\n   * Handler that is called when the down key is pressed.\n   *\n   * @param {CustomEvent} event A key combination event.\n   */\n  _onDownKey: function(event) {\n    this._focusNext();\n    event.detail.keyboardEvent.preventDefault();\n  },\n\n  /**\n   * Handler that is called when the esc key is pressed.\n   *\n   * @param {CustomEvent} event A key combination event.\n   */\n  _onEscKey: function(event) {\n    var focusedItem = this.focusedItem;\n    if (focusedItem) {\n      focusedItem.blur();\n    }\n  },\n\n  /**\n   * Handler that is called when a keydown event is detected.\n   *\n   * @param {KeyboardEvent} event A keyboard event.\n   */\n  _onKeydown: function(event) {\n    if (!this.keyboardEventMatchesKeys(event, 'up down esc')) {\n      // all other keys focus the menu item starting with that character\n      this._focusWithKeyboardEvent(event);\n    }\n    event.stopPropagation();\n  },\n\n  // override _activateHandler\n  _activateHandler: function(event) {\n    IronSelectableBehavior._activateHandler.call(this, event);\n    event.stopPropagation();\n  },\n\n  /**\n   * Updates this element's tab index when it's enabled/disabled.\n   * @param {boolean} disabled\n   */\n  _disabledChanged: function(disabled) {\n    if (disabled) {\n      this._previousTabIndex =\n          this.hasAttribute('tabindex') ? this.tabIndex : 0;\n      this.removeAttribute(\n          'tabindex');  // No tabindex means not tab-able or select-able.\n    } else if (!this.hasAttribute('tabindex')) {\n      this.setAttribute('tabindex', this._previousTabIndex);\n    }\n  }\n};\n\nIronMenuBehaviorImpl._shiftTabPressed = false;\n\n/** @polymerBehavior */\nexport const IronMenuBehavior =\n    [IronMultiSelectableBehavior, IronA11yKeysBehavior, IronMenuBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronSelectableBehavior} from './iron-selectable.js';\n\n/**\n * @polymerBehavior IronMultiSelectableBehavior\n */\nexport const IronMultiSelectableBehaviorImpl = {\n  properties: {\n\n    /**\n     * If true, multiple selections are allowed.\n     */\n    multi: {type: Boolean, value: false, observer: 'multiChanged'},\n\n    /**\n     * Gets or sets the selected elements. This is used instead of `selected`\n     * when `multi` is true.\n     */\n    selectedValues: {\n      type: Array,\n      notify: true,\n      value: function() {\n        return [];\n      }\n    },\n\n    /**\n     * Returns an array of currently selected items.\n     */\n    selectedItems: {\n      type: Array,\n      readOnly: true,\n      notify: true,\n      value: function() {\n        return [];\n      }\n    },\n\n  },\n\n  observers: ['_updateSelected(selectedValues.splices)'],\n\n  /**\n   * Selects the given value. If the `multi` property is true, then the selected\n   * state of the `value` will be toggled; otherwise the `value` will be\n   * selected.\n   *\n   * @method select\n   * @param {string|number} value the value to select.\n   */\n  select: function(value) {\n    if (this.multi) {\n      this._toggleSelected(value);\n    } else {\n      this.selected = value;\n    }\n  },\n\n  multiChanged: function(multi) {\n    this._selection.multi = multi;\n    this._updateSelected();\n  },\n\n  // UNUSED, FOR API COMPATIBILITY\n  get _shouldUpdateSelection() {\n    return this.selected != null ||\n        (this.selectedValues != null && this.selectedValues.length);\n  },\n\n  _updateAttrForSelected: function() {\n    if (!this.multi) {\n      IronSelectableBehavior._updateAttrForSelected.apply(this);\n    } else if (this.selectedItems && this.selectedItems.length > 0) {\n      this.selectedValues =\n          this.selectedItems\n              .map(\n                  function(selectedItem) {\n                    return this._indexToValue(this.indexOf(selectedItem));\n                  },\n                  this)\n              .filter(function(unfilteredValue) {\n                return unfilteredValue != null;\n              }, this);\n    }\n  },\n\n  _updateSelected: function() {\n    if (this.multi) {\n      this._selectMulti(this.selectedValues);\n    } else {\n      this._selectSelected(this.selected);\n    }\n  },\n\n  _selectMulti: function(values) {\n    values = values || [];\n\n    var selectedItems =\n        (this._valuesToItems(values) || []).filter(function(item) {\n          return item !== null && item !== undefined;\n        });\n\n    // clear all but the current selected items\n    this._selection.clear(selectedItems);\n\n    // select only those not selected yet\n    for (var i = 0; i < selectedItems.length; i++) {\n      this._selection.setItemSelected(selectedItems[i], true);\n    }\n\n    // Check for items, since this array is populated only when attached\n    if (this.fallbackSelection && !this._selection.get().length) {\n      var fallback = this._valueToItem(this.fallbackSelection);\n      if (fallback) {\n        this.select(this.fallbackSelection);\n      }\n    }\n  },\n\n  _selectionChange: function() {\n    var s = this._selection.get();\n    if (this.multi) {\n      this._setSelectedItems(s);\n      this._setSelectedItem(s.length ? s[0] : null);\n    } else {\n      if (s !== null && s !== undefined) {\n        this._setSelectedItems([s]);\n        this._setSelectedItem(s);\n      } else {\n        this._setSelectedItems([]);\n        this._setSelectedItem(null);\n      }\n    }\n  },\n\n  _toggleSelected: function(value) {\n    var i = this.selectedValues.indexOf(value);\n    var unselected = i < 0;\n    if (unselected) {\n      this.push('selectedValues', value);\n    } else {\n      this.splice('selectedValues', i, 1);\n    }\n  },\n\n  _valuesToItems: function(values) {\n    return (values == null) ? null : values.map(function(value) {\n      return this._valueToItem(value);\n    }, this);\n  }\n};\n\n/** @polymerBehavior */\nexport const IronMultiSelectableBehavior =\n    [IronSelectableBehavior, IronMultiSelectableBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {dashToCamelCase} from '@polymer/polymer/lib/utils/case-map.js';\n\nimport {IronSelection} from './iron-selection.js';\n\n/**\n * @polymerBehavior\n */\nexport const IronSelectableBehavior = {\n\n  /**\n   * Fired when iron-selector is activated (selected or deselected).\n   * It is fired before the selected items are changed.\n   * Cancel the event to abort selection.\n   *\n   * @event iron-activate\n   */\n\n  /**\n   * Fired when an item is selected\n   *\n   * @event iron-select\n   */\n\n  /**\n   * Fired when an item is deselected\n   *\n   * @event iron-deselect\n   */\n\n  /**\n   * Fired when the list of selectable items changes (e.g., items are\n   * added or removed). The detail of the event is a mutation record that\n   * describes what changed.\n   *\n   * @event iron-items-changed\n   */\n\n  properties: {\n\n    /**\n     * If you want to use an attribute value or property of an element for\n     * `selected` instead of the index, set this to the name of the attribute\n     * or property. Hyphenated values are converted to camel case when used to\n     * look up the property of a selectable element. Camel cased values are\n     * *not* converted to hyphenated values for attribute lookup. It's\n     * recommended that you provide the hyphenated form of the name so that\n     * selection works in both cases. (Use `attr-or-property-name` instead of\n     * `attrOrPropertyName`.)\n     */\n    attrForSelected: {type: String, value: null},\n\n    /**\n     * Gets or sets the selected element. The default is to use the index of the\n     * item.\n     * @type {string|number}\n     */\n    selected: {type: String, notify: true},\n\n    /**\n     * Returns the currently selected item.\n     *\n     * @type {?Object}\n     */\n    selectedItem: {type: Object, readOnly: true, notify: true},\n\n    /**\n     * The event that fires from items when they are selected. Selectable\n     * will listen for this event from items and update the selection state.\n     * Set to empty string to listen to no events.\n     */\n    activateEvent:\n        {type: String, value: 'tap', observer: '_activateEventChanged'},\n\n    /**\n     * This is a CSS selector string.  If this is set, only items that match the\n     * CSS selector are selectable.\n     */\n    selectable: String,\n\n    /**\n     * The class to set on elements when selected.\n     */\n    selectedClass: {type: String, value: 'iron-selected'},\n\n    /**\n     * The attribute to set on elements when selected.\n     */\n    selectedAttribute: {type: String, value: null},\n\n    /**\n     * Default fallback if the selection based on selected with\n     * `attrForSelected` is not found.\n     */\n    fallbackSelection: {type: String, value: null},\n\n    /**\n     * The list of items from which a selection can be made.\n     */\n    items: {\n      type: Array,\n      readOnly: true,\n      notify: true,\n      value: function() {\n        return [];\n      }\n    },\n\n    /**\n     * The set of excluded elements where the key is the `localName`\n     * of the element that will be ignored from the item list.\n     *\n     * @default {template: 1}\n     */\n    _excludedLocalNames: {\n      type: Object,\n      value: function() {\n        return {\n          'template': 1,\n          'dom-bind': 1,\n          'dom-if': 1,\n          'dom-repeat': 1,\n        };\n      }\n    }\n  },\n\n  observers: [\n    '_updateAttrForSelected(attrForSelected)',\n    '_updateSelected(selected)',\n    '_checkFallback(fallbackSelection)'\n  ],\n\n  created: function() {\n    this._bindFilterItem = this._filterItem.bind(this);\n    this._selection = new IronSelection(this._applySelection.bind(this));\n  },\n\n  attached: function() {\n    this._observer = this._observeItems(this);\n    this._addListener(this.activateEvent);\n  },\n\n  detached: function() {\n    if (this._observer) {\n      dom(this).unobserveNodes(this._observer);\n    }\n    this._removeListener(this.activateEvent);\n  },\n\n  /**\n   * Returns the index of the given item.\n   *\n   * @method indexOf\n   * @param {Object} item\n   * @returns Returns the index of the item\n   */\n  indexOf: function(item) {\n    return this.items ? this.items.indexOf(item) : -1;\n  },\n\n  /**\n   * Selects the given value.\n   *\n   * @method select\n   * @param {string|number} value the value to select.\n   */\n  select: function(value) {\n    this.selected = value;\n  },\n\n  /**\n   * Selects the previous item.\n   *\n   * @method selectPrevious\n   */\n  selectPrevious: function() {\n    var length = this.items.length;\n    var index = length - 1;\n    if (this.selected !== undefined) {\n      index = (Number(this._valueToIndex(this.selected)) - 1 + length) % length;\n    }\n    this.selected = this._indexToValue(index);\n  },\n\n  /**\n   * Selects the next item.\n   *\n   * @method selectNext\n   */\n  selectNext: function() {\n    var index = 0;\n    if (this.selected !== undefined) {\n      index =\n          (Number(this._valueToIndex(this.selected)) + 1) % this.items.length;\n    }\n    this.selected = this._indexToValue(index);\n  },\n\n  /**\n   * Selects the item at the given index.\n   *\n   * @method selectIndex\n   */\n  selectIndex: function(index) {\n    this.select(this._indexToValue(index));\n  },\n\n  /**\n   * Force a synchronous update of the `items` property.\n   *\n   * NOTE: Consider listening for the `iron-items-changed` event to respond to\n   * updates to the set of selectable items after updates to the DOM list and\n   * selection state have been made.\n   *\n   * WARNING: If you are using this method, you should probably consider an\n   * alternate approach. Synchronously querying for items is potentially\n   * slow for many use cases. The `items` property will update asynchronously\n   * on its own to reflect selectable items in the DOM.\n   */\n  forceSynchronousItemUpdate: function() {\n    if (this._observer && typeof this._observer.flush === 'function') {\n      // NOTE(bicknellr): `dom.flush` above is no longer sufficient to trigger\n      // `observeNodes` callbacks. Polymer 2.x returns an object from\n      // `observeNodes` with a `flush` that synchronously gives the callback any\n      // pending MutationRecords (retrieved with `takeRecords`). Any case where\n      // ShadyDOM flushes were expected to synchronously trigger item updates\n      // will now require calling `forceSynchronousItemUpdate`.\n      this._observer.flush();\n    } else {\n      this._updateItems();\n    }\n  },\n\n  // UNUSED, FOR API COMPATIBILITY\n  get _shouldUpdateSelection() {\n    return this.selected != null;\n  },\n\n  _checkFallback: function() {\n    this._updateSelected();\n  },\n\n  _addListener: function(eventName) {\n    this.listen(this, eventName, '_activateHandler');\n  },\n\n  _removeListener: function(eventName) {\n    this.unlisten(this, eventName, '_activateHandler');\n  },\n\n  _activateEventChanged: function(eventName, old) {\n    this._removeListener(old);\n    this._addListener(eventName);\n  },\n\n  _updateItems: function() {\n    var nodes = dom(this).queryDistributedElements(this.selectable || '*');\n    nodes = Array.prototype.filter.call(nodes, this._bindFilterItem);\n    this._setItems(nodes);\n  },\n\n  _updateAttrForSelected: function() {\n    if (this.selectedItem) {\n      this.selected = this._valueForItem(this.selectedItem);\n    }\n  },\n\n  _updateSelected: function() {\n    this._selectSelected(this.selected);\n  },\n\n  _selectSelected: function(selected) {\n    if (!this.items) {\n      return;\n    }\n\n    var item = this._valueToItem(this.selected);\n    if (item) {\n      this._selection.select(item);\n    } else {\n      this._selection.clear();\n    }\n    // Check for items, since this array is populated only when attached\n    // Since Number(0) is falsy, explicitly check for undefined\n    if (this.fallbackSelection && this.items.length &&\n        (this._selection.get() === undefined)) {\n      this.selected = this.fallbackSelection;\n    }\n  },\n\n  _filterItem: function(node) {\n    return !this._excludedLocalNames[node.localName];\n  },\n\n  _valueToItem: function(value) {\n    return (value == null) ? null : this.items[this._valueToIndex(value)];\n  },\n\n  _valueToIndex: function(value) {\n    if (this.attrForSelected) {\n      for (var i = 0, item; item = this.items[i]; i++) {\n        if (this._valueForItem(item) == value) {\n          return i;\n        }\n      }\n    } else {\n      return Number(value);\n    }\n  },\n\n  _indexToValue: function(index) {\n    if (this.attrForSelected) {\n      var item = this.items[index];\n      if (item) {\n        return this._valueForItem(item);\n      }\n    } else {\n      return index;\n    }\n  },\n\n  _valueForItem: function(item) {\n    if (!item) {\n      return null;\n    }\n    if (!this.attrForSelected) {\n      var i = this.indexOf(item);\n      return i === -1 ? null : i;\n    }\n    var propValue = item[dashToCamelCase(this.attrForSelected)];\n    return propValue != undefined ? propValue :\n                                    item.getAttribute(this.attrForSelected);\n  },\n\n  _applySelection: function(item, isSelected) {\n    if (this.selectedClass) {\n      this.toggleClass(this.selectedClass, isSelected, item);\n    }\n    if (this.selectedAttribute) {\n      this.toggleAttribute(this.selectedAttribute, isSelected, item);\n    }\n    this._selectionChange();\n    this.fire('iron-' + (isSelected ? 'select' : 'deselect'), {item: item});\n  },\n\n  _selectionChange: function() {\n    this._setSelectedItem(this._selection.get());\n  },\n\n  // observe items change under the given node.\n  _observeItems: function(node) {\n    return dom(node).observeNodes(function(mutation) {\n      this._updateItems();\n      this._updateSelected();\n\n      // Let other interested parties know about the change so that\n      // we don't have to recreate mutation observers everywhere.\n      this.fire(\n          'iron-items-changed', mutation, {bubbles: false, cancelable: false});\n    });\n  },\n\n  _activateHandler: function(e) {\n    var t = e.target;\n    var items = this.items;\n    while (t && t != this) {\n      var i = items.indexOf(t);\n      if (i >= 0) {\n        var value = this._indexToValue(i);\n        this._itemActivate(value, t);\n        return;\n      }\n      t = t.parentNode;\n    }\n  },\n\n  _itemActivate: function(value, item) {\n    if (!this.fire('iron-activate', {selected: value, item: item}, {\n               cancelable: true\n             })\n             .defaultPrevented) {\n      this.select(value);\n    }\n  }\n\n};\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nexport class IronSelection {\n  /**\n   * @param {!Function} selectCallback\n   * @suppress {missingProvide}\n   */\n  constructor(selectCallback) {\n    this.selection = [];\n    this.selectCallback = selectCallback;\n  }\n\n  /**\n   * Retrieves the selected item(s).\n   *\n   * @returns Returns the selected item(s). If the multi property is true,\n   * `get` will return an array, otherwise it will return\n   * the selected item or undefined if there is no selection.\n   */\n  get() {\n    return this.multi ? this.selection.slice() : this.selection[0];\n  }\n\n  /**\n   * Clears all the selection except the ones indicated.\n   *\n   * @param {Array} excludes items to be excluded.\n   */\n  clear(excludes) {\n    this.selection.slice().forEach(function(item) {\n      if (!excludes || excludes.indexOf(item) < 0) {\n        this.setItemSelected(item, false);\n      }\n    }, this);\n  }\n\n  /**\n   * Indicates if a given item is selected.\n   *\n   * @param {*} item The item whose selection state should be checked.\n   * @return {boolean} Returns true if `item` is selected.\n   */\n  isSelected(item) {\n    return this.selection.indexOf(item) >= 0;\n  }\n\n  /**\n   * Sets the selection state for a given item to either selected or deselected.\n   *\n   * @param {*} item The item to select.\n   * @param {boolean} isSelected True for selected, false for deselected.\n   */\n  setItemSelected(item, isSelected) {\n    if (item != null) {\n      if (isSelected !== this.isSelected(item)) {\n        // proceed to update selection only if requested state differs from\n        // current\n        if (isSelected) {\n          this.selection.push(item);\n        } else {\n          var i = this.selection.indexOf(item);\n          if (i >= 0) {\n            this.selection.splice(i, 1);\n          }\n        }\n        if (this.selectCallback) {\n          this.selectCallback(item, isSelected);\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets the selection state for a given item. If the `multi` property\n   * is true, then the selected state of `item` will be toggled; otherwise\n   * the `item` will be selected.\n   *\n   * @param {*} item The item to select.\n   */\n  select(item) {\n    if (this.multi) {\n      this.toggle(item);\n    } else if (this.get() !== item) {\n      this.setItemSelected(this.get(), false);\n      this.setItemSelected(item, true);\n    }\n  }\n\n  /**\n   * Toggles the selection state for `item`.\n   *\n   * @param {*} item The item to toggle.\n   */\n  toggle(item) {\n    this.setItemSelected(item, !this.isSelected(item));\n  }\n};\n"],"sourceRoot":""}