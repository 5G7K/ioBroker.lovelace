{"version":3,"sources":["webpack:///./src/cards/ha-badges-card.js","webpack:///./src/cards/ha-camera-card.js","webpack:///./src/cards/ha-card-chooser.js","webpack:///./src/cards/ha-entities-card.js","webpack:///./src/cards/ha-persistent_notification-card.js","webpack:///./src/cards/ha-plant-card.js","webpack:///./src/common/config/location_name.ts","webpack:///./src/components/ha-cards.js","webpack:///./src/components/ha-demo-badge.js","webpack:///./src/mixins/navigate-mixin.js","webpack:///./src/panels/states/ha-panel-states.js"],"names":["HaBadgesCard","PolymerElement","template","html","properties","hass","Object","states","Array","customElements","define","UPDATE_INTERVAL","HaCameraCard","LocalizeMixin","EventsMixin","stateObj","type","observer","cameraFeedSrc","String","value","imageLoaded","Boolean","ready","addEventListener","cardTapped","connectedCallback","timer","setInterval","updateCameraFeedSrc","disconnectedCallback","clearInterval","_imageLoaded","_imageError","fire","entityId","entity_id","fetchThumbnailUrlWithCache","_computeStateName","computeStateName","HaCardChooser","cardData","_updateCard","newData","dynamicContentUpdater","cardType","toUpperCase","createObserver","_updatesAllowed","IntersectionObserver","entries","length","isIntersecting","style","height","_detachedChild","appendChild","offsetHeight","lastChild","removeChild","observe","cardDataChanged","eligibleToObserver","window","unobserve","HaEntitiesCard","groupEntity","title","computed","constructor","entityTapped","bind","computeTitle","localize","trim","domain","computeStateDomain","replace","computeTitleClass","classes","computeStateClass","stateMoreInfoType","addTapEvents","cards","root","querySelectorAll","forEach","card","classList","contains","removeEventListener","ev","item","querySelector","itemForElement","target","stopPropagation","showGroupToggle","attributes","control","state","canToggleCount","i","canToggleState","HaPersistentNotificationCard","dismissTap","preventDefault","callService","notification_id","computeObjectId","HaPlantCard","config","sensors","moisture","temperature","brightness","conductivity","battery","name","computeAttributes","data","keys","filter","key","computeIcon","attr","batLvl","icon","Math","round","computeValue","computeUom","dict","computeAttributeClass","problem","indexOf","computeImageClass","entityPicture","attributeClicked","model","computeLocationName","location_name","DOMAINS_WITH_CARD","camera","history_graph","media_player","persistent_notification","plant","weather","PRIORITY","configurator","updater","sun","person","device_tracker","alarm_control_panel","sensor","binary_sensor","mailbox","getPriority","sortPriority","domainA","domainB","priority","entitySortBy","entityA","entityB","nameA","friendly_name","toLowerCase","nameB","iterateDomainSorted","collection","func","map","sort","HaCards","columns","Number","viewVisible","orderedGroupEntities","observers","updateCards","$","main","parentNode","_parentNode","_debouncer","Debouncer","debounce","timeOut","after","computeCards","emptyCards","demo","badges","entityCount","push","getIndex","size","minIndex","addEntitiesCard","entities","owncard","other","entity","custom_ui_state_card","curIndex","splitted","splitByGroups","groups","gr1","gr2","order","badgesColl","beforeGroupColl","afterGroupedColl","ungrouped","coll","apply","e1","e2","groupState","getGroupEntities","val","HaDemoBadge","dedupingMixin","superClass","navigate","args","DEFAULT_VIEW_ENTITY_ID","ALWAYS_SHOW_DOMAIN","PartialCards","NavigateMixin","narrow","panelVisible","route","routeData","routeMatch","_columns","locationName","currentView","views","defaultView","viewStates","showTabs","_updateColumns","mqls","width","matchMedia","mql","addListener","removeListener","matchColumns","reduce","cols","matches","max","dockedSidebar","areTabsHidden","scrollToTop","top","scroller","layout","header","scrollTarget","easingFn","easeOutQuad","t","b","c","d","animationId","random","duration","startTime","Date","now","currentScrollTop","scrollTop","deltaScrollTop","_currentAnimationId","updateFrame","elapsedTime","requestAnimationFrame","call","handleViewSelected","view","detail","getAttribute","path","_computeCurrentView","_computeLocationName","hassChanged","extractViews","shift","setProperties","isView","_defaultViewFilter","hidden","_computeDefaultViewStates","entityIds","computeViewStates","getViewEntities","includes","computeOrderedGroupEntities","entitiesList"],"mappings":"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","file":"panel-states.chunk.js","sourcesContent":["import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../components/entity/ha-state-label-badge\";\n\nclass HaBadgesCard extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        ha-state-label-badge {\n          display: inline-block;\n          margin-bottom: var(--ha-state-label-badge-margin-bottom, 16px);\n        }\n      </style>\n      <template is=\"dom-repeat\" items=\"[[states]]\">\n        <ha-state-label-badge\n          hass=\"[[hass]]\"\n          state=\"[[item]]\"\n        ></ha-state-label-badge>\n      </template>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      states: Array,\n    };\n  }\n}\ncustomElements.define(\"ha-badges-card\", HaBadgesCard);\n","import \"@polymer/paper-styles/element-styles/paper-material-styles\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport computeStateName from \"../common/entity/compute_state_name\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\nimport LocalizeMixin from \"../mixins/localize-mixin\";\nimport { fetchThumbnailUrlWithCache } from \"../data/camera\";\n\nconst UPDATE_INTERVAL = 10000; // ms\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaCameraCard extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"paper-material-styles\">\n        :host {\n          @apply --paper-material-elevation-1;\n          display: block;\n          position: relative;\n          font-size: 0px;\n          border-radius: 2px;\n          cursor: pointer;\n          min-height: 48px;\n          line-height: 0;\n        }\n        .camera-feed {\n          width: 100%;\n          height: auto;\n          border-radius: 2px;\n        }\n        .caption {\n          @apply --paper-font-common-nowrap;\n          position: absolute;\n          left: 0px;\n          right: 0px;\n          bottom: 0px;\n          border-bottom-left-radius: 2px;\n          border-bottom-right-radius: 2px;\n\n          background-color: rgba(0, 0, 0, 0.3);\n          padding: 16px;\n\n          font-size: 16px;\n          font-weight: 500;\n          line-height: 16px;\n          color: white;\n        }\n      </style>\n\n      <template is=\"dom-if\" if=\"[[cameraFeedSrc]]\">\n        <img\n          src=\"[[cameraFeedSrc]]\"\n          class=\"camera-feed\"\n          alt=\"[[_computeStateName(stateObj)]]\"\n          on-load=\"_imageLoaded\"\n          on-error=\"_imageError\"\n        />\n      </template>\n      <div class=\"caption\">\n        [[_computeStateName(stateObj)]]\n        <template is=\"dom-if\" if=\"[[!imageLoaded]]\">\n          ([[localize('ui.card.camera.not_available')]])\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: {\n        type: Object,\n        observer: \"updateCameraFeedSrc\",\n      },\n      cameraFeedSrc: {\n        type: String,\n        value: \"\",\n      },\n      imageLoaded: {\n        type: Boolean,\n        value: true,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"click\", () => this.cardTapped());\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.timer = setInterval(() => this.updateCameraFeedSrc(), UPDATE_INTERVAL);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    clearInterval(this.timer);\n  }\n\n  _imageLoaded() {\n    this.imageLoaded = true;\n  }\n\n  _imageError() {\n    this.imageLoaded = false;\n  }\n\n  cardTapped() {\n    this.fire(\"hass-more-info\", { entityId: this.stateObj.entity_id });\n  }\n\n  async updateCameraFeedSrc() {\n    this.cameraFeedSrc = await fetchThumbnailUrlWithCache(\n      this.hass,\n      this.stateObj.entity_id\n    );\n  }\n\n  _computeStateName(stateObj) {\n    return computeStateName(stateObj);\n  }\n}\ncustomElements.define(\"ha-camera-card\", HaCameraCard);\n","import { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-camera-card\";\nimport \"./ha-entities-card\";\nimport \"./ha-history_graph-card\";\nimport \"./ha-media_player-card\";\nimport \"./ha-persistent_notification-card\";\nimport \"./ha-plant-card\";\nimport \"./ha-weather-card\";\n\nimport dynamicContentUpdater from \"../common/dom/dynamic_content_updater\";\n\nclass HaCardChooser extends PolymerElement {\n  static get properties() {\n    return {\n      cardData: {\n        type: Object,\n        observer: \"cardDataChanged\",\n      },\n    };\n  }\n\n  _updateCard(newData) {\n    dynamicContentUpdater(\n      this,\n      \"HA-\" + newData.cardType.toUpperCase() + \"-CARD\",\n      newData\n    );\n  }\n\n  createObserver() {\n    this._updatesAllowed = false;\n    this.observer = new IntersectionObserver((entries) => {\n      if (!entries.length) return;\n      if (entries[0].isIntersecting) {\n        this.style.height = \"\";\n        if (this._detachedChild) {\n          this.appendChild(this._detachedChild);\n          this._detachedChild = null;\n        }\n        this._updateCard(this.cardData); // Don't use 'newData' as it might have changed.\n        this._updatesAllowed = true;\n      } else {\n        // Set the card to be 48px high. Otherwise if the card is kept as 0px height then all\n        // following cards would trigger the observer at once.\n        const offsetHeight = this.offsetHeight;\n        this.style.height = `${offsetHeight || 48}px`;\n        if (this.lastChild) {\n          this._detachedChild = this.lastChild;\n          this.removeChild(this.lastChild);\n        }\n        this._updatesAllowed = false;\n      }\n    });\n    this.observer.observe(this);\n  }\n\n  cardDataChanged(newData) {\n    if (!newData) return;\n    // ha-entities-card is exempt from observer as it doesn't load heavy resources.\n    // and usually doesn't load external resources (except for entity_picture).\n    const eligibleToObserver =\n      window.IntersectionObserver && newData.cardType !== \"entities\";\n    if (!eligibleToObserver) {\n      if (this.observer) {\n        this.observer.unobserve(this);\n        this.observer = null;\n      }\n      this.style.height = \"\";\n      this._updateCard(newData);\n      return;\n    }\n    if (!this.observer) {\n      this.createObserver();\n    }\n    if (this._updatesAllowed) {\n      this._updateCard(newData);\n    }\n  }\n}\ncustomElements.define(\"ha-card-chooser\", HaCardChooser);\n","import \"@polymer/iron-flex-layout/iron-flex-layout-classes\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../components/entity/ha-entity-toggle\";\nimport \"../components/ha-card\";\nimport \"../state-summary/state-card-content\";\n\nimport computeStateDomain from \"../common/entity/compute_state_domain\";\nimport computeStateName from \"../common/entity/compute_state_name\";\nimport stateMoreInfoType from \"../common/entity/state_more_info_type\";\nimport canToggleState from \"../common/entity/can_toggle_state\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\nclass HaEntitiesCard extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex\"></style>\n      <style>\n        ha-card {\n          padding: 16px;\n        }\n        .states {\n          margin: -4px 0;\n        }\n        .state {\n          padding: 4px 0;\n        }\n        .header {\n          @apply --paper-font-headline;\n          /* overwriting line-height +8 because entity-toggle can be 40px height,\n           compensating this with reduced padding */\n          line-height: 40px;\n          color: var(--primary-text-color);\n          padding: 4px 0 12px;\n        }\n        .header .name {\n          @apply --paper-font-common-nowrap;\n        }\n        ha-entity-toggle {\n          margin-left: 16px;\n        }\n        .more-info {\n          cursor: pointer;\n        }\n      </style>\n\n      <ha-card>\n        <template is=\"dom-if\" if=\"[[title]]\">\n          <div\n            class$=\"[[computeTitleClass(groupEntity)]]\"\n            on-click=\"entityTapped\"\n          >\n            <div class=\"flex name\">[[title]]</div>\n            <template is=\"dom-if\" if=\"[[showGroupToggle(groupEntity, states)]]\">\n              <ha-entity-toggle\n                hass=\"[[hass]]\"\n                state-obj=\"[[groupEntity]]\"\n              ></ha-entity-toggle>\n            </template>\n          </div>\n        </template>\n        <div class=\"states\">\n          <template\n            is=\"dom-repeat\"\n            items=\"[[states]]\"\n            on-dom-change=\"addTapEvents\"\n          >\n            <div class$=\"[[computeStateClass(item)]]\">\n              <state-card-content\n                hass=\"[[hass]]\"\n                class=\"state-card\"\n                state-obj=\"[[item]]\"\n              ></state-card-content>\n            </div>\n          </template>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      states: Array,\n      groupEntity: Object,\n      title: {\n        type: String,\n        computed: \"computeTitle(states, groupEntity, localize)\",\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    // We need to save a single bound function reference to ensure the event listener\n    // can identify it properly.\n    this.entityTapped = this.entityTapped.bind(this);\n  }\n\n  computeTitle(states, groupEntity, localize) {\n    if (groupEntity) {\n      return computeStateName(groupEntity).trim();\n    }\n    const domain = computeStateDomain(states[0]);\n    return (\n      (localize && localize(`domain.${domain}`)) || domain.replace(/_/g, \" \")\n    );\n  }\n\n  computeTitleClass(groupEntity) {\n    let classes = \"header horizontal layout center \";\n    if (groupEntity) {\n      classes += \"more-info\";\n    }\n    return classes;\n  }\n\n  computeStateClass(stateObj) {\n    return stateMoreInfoType(stateObj) !== \"hidden\"\n      ? \"state more-info\"\n      : \"state\";\n  }\n\n  addTapEvents() {\n    const cards = this.root.querySelectorAll(\".state\");\n    cards.forEach((card) => {\n      if (card.classList.contains(\"more-info\")) {\n        card.addEventListener(\"click\", this.entityTapped);\n      } else {\n        card.removeEventListener(\"click\", this.entityTapped);\n      }\n    });\n  }\n\n  entityTapped(ev) {\n    const item = this.root\n      .querySelector(\"dom-repeat\")\n      .itemForElement(ev.target);\n    let entityId;\n    if (!item && !this.groupEntity) {\n      return;\n    }\n    ev.stopPropagation();\n\n    if (item) {\n      entityId = item.entity_id;\n    } else {\n      entityId = this.groupEntity.entity_id;\n    }\n    this.fire(\"hass-more-info\", { entityId: entityId });\n  }\n\n  showGroupToggle(groupEntity, states) {\n    if (\n      !groupEntity ||\n      !states ||\n      groupEntity.attributes.control === \"hidden\" ||\n      (groupEntity.state !== \"on\" && groupEntity.state !== \"off\")\n    ) {\n      return false;\n    }\n\n    // Only show if we can toggle 2+ entities in group\n    let canToggleCount = 0;\n    for (let i = 0; i < states.length; i++) {\n      if (!canToggleState(this.hass, states[i])) {\n        continue;\n      }\n\n      canToggleCount++;\n\n      if (canToggleCount > 1) {\n        break;\n      }\n    }\n\n    return canToggleCount > 1;\n  }\n}\ncustomElements.define(\"ha-entities-card\", HaEntitiesCard);\n","import \"@material/mwc-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../components/ha-card\";\nimport \"../components/ha-markdown\";\n\nimport computeStateName from \"../common/entity/compute_state_name\";\nimport LocalizeMixin from \"../mixins/localize-mixin\";\nimport computeObjectId from \"../common/entity/compute_object_id\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPersistentNotificationCard extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          @apply --paper-font-body1;\n        }\n        ha-markdown {\n          display: block;\n          padding: 0 16px;\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n        ha-markdown p:first-child {\n          margin-top: 0;\n        }\n        ha-markdown p:last-child {\n          margin-bottom: 0;\n        }\n        ha-markdown a {\n          color: var(--primary-color);\n        }\n        ha-markdown img {\n          max-width: 100%;\n        }\n        mwc-button {\n          margin: 8px;\n        }\n      </style>\n\n      <ha-card header=\"[[computeTitle(stateObj)]]\">\n        <ha-markdown content=\"[[stateObj.attributes.message]]\"></ha-markdown>\n        <mwc-button on-click=\"dismissTap\"\n          >[[localize('ui.card.persistent_notification.dismiss')]]</mwc-button\n        >\n      </ha-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: Object,\n    };\n  }\n\n  computeTitle(stateObj) {\n    return stateObj.attributes.title || computeStateName(stateObj);\n  }\n\n  dismissTap(ev) {\n    ev.preventDefault();\n    this.hass.callService(\"persistent_notification\", \"dismiss\", {\n      notification_id: computeObjectId(this.stateObj.entity_id),\n    });\n  }\n}\ncustomElements.define(\n  \"ha-persistent_notification-card\",\n  HaPersistentNotificationCard\n);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../components/ha-card\";\nimport \"../components/ha-icon\";\n\nimport computeStateName from \"../common/entity/compute_state_name\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nclass HaPlantCard extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        .banner {\n          display: flex;\n          align-items: flex-end;\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: center;\n          padding-top: 12px;\n        }\n        .has-plant-image .banner {\n          padding-top: 30%;\n        }\n        .header {\n          @apply --paper-font-headline;\n          line-height: 40px;\n          padding: 8px 16px;\n        }\n        .has-plant-image .header {\n          font-size: 16px;\n          font-weight: 500;\n          line-height: 16px;\n          padding: 16px;\n          color: white;\n          width: 100%;\n          background: rgba(0, 0, 0, var(--dark-secondary-opacity));\n        }\n        .content {\n          display: flex;\n          justify-content: space-between;\n          padding: 16px 32px 24px 32px;\n        }\n        .has-plant-image .content {\n          padding-bottom: 16px;\n        }\n        ha-icon {\n          color: var(--paper-item-icon-color);\n          margin-bottom: 8px;\n        }\n        .attributes {\n          cursor: pointer;\n        }\n        .attributes div {\n          text-align: center;\n        }\n        .problem {\n          color: var(--google-red-500);\n          font-weight: bold;\n        }\n        .uom {\n          color: var(--secondary-text-color);\n        }\n      </style>\n\n      <ha-card\n        class$=\"[[computeImageClass(stateObj.attributes.entity_picture)]]\"\n      >\n        <div\n          class=\"banner\"\n          style=\"background-image:url([[stateObj.attributes.entity_picture]])\"\n        >\n          <div class=\"header\">[[computeTitle(stateObj)]]</div>\n        </div>\n        <div class=\"content\">\n          <template\n            is=\"dom-repeat\"\n            items=\"[[computeAttributes(stateObj.attributes)]]\"\n          >\n            <div class=\"attributes\" on-click=\"attributeClicked\">\n              <div>\n                <ha-icon\n                  icon=\"[[computeIcon(item, stateObj.attributes.battery)]]\"\n                ></ha-icon>\n              </div>\n              <div\n                class$=\"[[computeAttributeClass(stateObj.attributes.problem, item)]]\"\n              >\n                [[computeValue(stateObj.attributes, item)]]\n              </div>\n              <div class=\"uom\">\n                [[computeUom(stateObj.attributes.unit_of_measurement_dict,\n                item)]]\n              </div>\n            </div>\n          </template>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: Object,\n      config: Object,\n    };\n  }\n\n  constructor() {\n    super();\n    this.sensors = {\n      moisture: \"hass:water\",\n      temperature: \"hass:thermometer\",\n      brightness: \"hass:white-balance-sunny\",\n      conductivity: \"hass:emoticon-poop\",\n      battery: \"hass:battery\",\n    };\n  }\n\n  computeTitle(stateObj) {\n    return (this.config && this.config.name) || computeStateName(stateObj);\n  }\n\n  computeAttributes(data) {\n    return Object.keys(this.sensors).filter((key) => key in data);\n  }\n\n  computeIcon(attr, batLvl) {\n    const icon = this.sensors[attr];\n    if (attr === \"battery\") {\n      if (batLvl <= 5) {\n        return `${icon}-alert`;\n      }\n      if (batLvl < 95) {\n        return `${icon}-${Math.round(batLvl / 10 - 0.01) * 10}`;\n      }\n    }\n    return icon;\n  }\n\n  computeValue(attributes, attr) {\n    return attributes[attr];\n  }\n\n  computeUom(dict, attr) {\n    return dict[attr] || \"\";\n  }\n\n  computeAttributeClass(problem, attr) {\n    return problem.indexOf(attr) === -1 ? \"\" : \"problem\";\n  }\n\n  computeImageClass(entityPicture) {\n    return entityPicture ? \"has-plant-image\" : \"\";\n  }\n\n  attributeClicked(ev) {\n    this.fire(\"hass-more-info\", {\n      entityId: this.stateObj.attributes.sensors[ev.model.item],\n    });\n  }\n}\n\ncustomElements.define(\"ha-plant-card\", HaPlantCard);\n","import { HomeAssistant } from \"../../types\";\n\n/** Get the location name from a hass object. */\nexport default function computeLocationName(hass: HomeAssistant): string {\n  return hass && hass.config.location_name;\n}\n","import \"@polymer/iron-flex-layout/iron-flex-layout-classes\";\nimport { timeOut } from \"@polymer/polymer/lib/utils/async\";\nimport { Debouncer } from \"@polymer/polymer/lib/utils/debounce\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../cards/ha-badges-card\";\nimport \"../cards/ha-card-chooser\";\nimport \"./ha-demo-badge\";\n\nimport computeStateDomain from \"../common/entity/compute_state_domain\";\nimport splitByGroups from \"../common/entity/split_by_groups\";\nimport getGroupEntities from \"../common/entity/get_group_entities\";\n\n// mapping domain to size of the card.\nconst DOMAINS_WITH_CARD = {\n  camera: 4,\n  history_graph: 4,\n  media_player: 3,\n  persistent_notification: 0,\n  plant: 3,\n  weather: 4,\n};\n\n// 4 types:\n// badges: 0 .. 10\n// before groups < 0\n// groups: X\n// rest: 100\n\nconst PRIORITY = {\n  // before groups < 0\n  configurator: -20,\n  persistent_notification: -15,\n\n  // badges have priority >= 0\n  updater: 0,\n  sun: 1,\n  person: 2,\n  device_tracker: 3,\n  alarm_control_panel: 4,\n  timer: 5,\n  sensor: 6,\n  binary_sensor: 7,\n  mailbox: 8,\n};\n\nconst getPriority = (domain) => (domain in PRIORITY ? PRIORITY[domain] : 100);\n\nconst sortPriority = (domainA, domainB) => domainA.priority - domainB.priority;\n\nconst entitySortBy = (entityA, entityB) => {\n  const nameA = (\n    entityA.attributes.friendly_name || entityA.entity_id\n  ).toLowerCase();\n  const nameB = (\n    entityB.attributes.friendly_name || entityB.entity_id\n  ).toLowerCase();\n\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  return 0;\n};\n\nconst iterateDomainSorted = (collection, func) => {\n  Object.keys(collection)\n    .map((key) => collection[key])\n    .sort(sortPriority)\n    .forEach((domain) => {\n      domain.states.sort(entitySortBy);\n      func(domain);\n    });\n};\n\nclass HaCards extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex iron-flex-factors\"></style>\n      <style>\n        :host {\n          display: block;\n          padding: 4px 4px 0;\n          transform: translateZ(0);\n          position: relative;\n        }\n\n        .badges {\n          font-size: 85%;\n          text-align: center;\n          padding-top: 16px;\n        }\n\n        .column {\n          max-width: 500px;\n          overflow-x: hidden;\n        }\n\n        ha-card-chooser {\n          display: block;\n          margin: 4px 4px 8px;\n        }\n\n        @media (max-width: 500px) {\n          :host {\n            padding-left: 0;\n            padding-right: 0;\n          }\n\n          ha-card-chooser {\n            margin-left: 0;\n            margin-right: 0;\n          }\n        }\n\n        @media (max-width: 599px) {\n          .column {\n            max-width: 600px;\n          }\n        }\n      </style>\n\n      <div id=\"main\">\n        <template is=\"dom-if\" if=\"[[cards.badges.length]]\">\n          <div class=\"badges\">\n            <template is=\"dom-if\" if=\"[[cards.demo]]\">\n              <ha-demo-badge></ha-demo-badge>\n            </template>\n\n            <ha-badges-card\n              states=\"[[cards.badges]]\"\n              hass=\"[[hass]]\"\n            ></ha-badges-card>\n          </div>\n        </template>\n\n        <div class=\"horizontal layout center-justified\">\n          <template is=\"dom-repeat\" items=\"[[cards.columns]]\" as=\"column\">\n            <div class=\"column flex-1\">\n              <template is=\"dom-repeat\" items=\"[[column]]\" as=\"card\">\n                <ha-card-chooser card-data=\"[[card]]\"></ha-card-chooser>\n              </template>\n            </div>\n          </template>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      columns: {\n        type: Number,\n        value: 2,\n      },\n\n      states: Object,\n\n      viewVisible: {\n        type: Boolean,\n        value: false,\n      },\n\n      orderedGroupEntities: Array,\n\n      cards: Object,\n    };\n  }\n\n  static get observers() {\n    return [\"updateCards(columns, states, viewVisible, orderedGroupEntities)\"];\n  }\n\n  updateCards(columns, states, viewVisible, orderedGroupEntities) {\n    if (!viewVisible) {\n      if (this.$.main.parentNode) {\n        this.$.main._parentNode = this.$.main.parentNode;\n        this.$.main.parentNode.removeChild(this.$.main);\n      }\n      return;\n    }\n    if (!this.$.main.parentNode && this.$.main._parentNode) {\n      this.$.main._parentNode.appendChild(this.$.main);\n    }\n    this._debouncer = Debouncer.debounce(\n      this._debouncer,\n      timeOut.after(10),\n      () => {\n        // Things might have changed since it got scheduled.\n        if (this.viewVisible) {\n          this.cards = this.computeCards(columns, states, orderedGroupEntities);\n        }\n      }\n    );\n  }\n\n  emptyCards() {\n    return {\n      demo: false,\n      badges: [],\n      columns: [],\n    };\n  }\n\n  computeCards(columns, states, orderedGroupEntities) {\n    const hass = this.hass;\n\n    const cards = this.emptyCards();\n\n    const entityCount = [];\n    for (let i = 0; i < columns; i++) {\n      cards.columns.push([]);\n      entityCount.push(0);\n    }\n\n    // Find column with < 5 entities, else column with lowest count\n    function getIndex(size) {\n      let minIndex = 0;\n      for (let i = 0; i < entityCount.length; i++) {\n        if (entityCount[i] < 5) {\n          minIndex = i;\n          break;\n        }\n        if (entityCount[i] < entityCount[minIndex]) {\n          minIndex = i;\n        }\n      }\n\n      entityCount[minIndex] += size;\n\n      return minIndex;\n    }\n\n    function addEntitiesCard(name, entities, groupEntity) {\n      if (entities.length === 0) return;\n\n      const owncard = [];\n      const other = [];\n\n      let size = 0;\n\n      entities.forEach((entity) => {\n        const domain = computeStateDomain(entity);\n\n        if (\n          domain in DOMAINS_WITH_CARD &&\n          !entity.attributes.custom_ui_state_card\n        ) {\n          owncard.push(entity);\n          size += DOMAINS_WITH_CARD[domain];\n        } else {\n          other.push(entity);\n          size++;\n        }\n      });\n\n      // Add 1 to the size if we're rendering entities card\n      size += other.length > 0;\n\n      const curIndex = getIndex(size);\n\n      if (other.length > 0) {\n        cards.columns[curIndex].push({\n          hass: hass,\n          cardType: \"entities\",\n          states: other,\n          groupEntity: groupEntity || false,\n        });\n      }\n\n      owncard.forEach((entity) => {\n        cards.columns[curIndex].push({\n          hass: hass,\n          cardType: computeStateDomain(entity),\n          stateObj: entity,\n        });\n      });\n    }\n\n    const splitted = splitByGroups(states);\n    if (orderedGroupEntities) {\n      splitted.groups.sort(\n        (gr1, gr2) =>\n          orderedGroupEntities[gr1.entity_id] -\n          orderedGroupEntities[gr2.entity_id]\n      );\n    } else {\n      splitted.groups.sort(\n        (gr1, gr2) => gr1.attributes.order - gr2.attributes.order\n      );\n    }\n\n    const badgesColl = {};\n    const beforeGroupColl = {};\n    const afterGroupedColl = {};\n\n    Object.keys(splitted.ungrouped).forEach((key) => {\n      const state = splitted.ungrouped[key];\n      const domain = computeStateDomain(state);\n\n      if (domain === \"a\") {\n        cards.demo = true;\n        return;\n      }\n\n      const priority = getPriority(domain);\n      let coll;\n\n      if (priority < 0) {\n        coll = beforeGroupColl;\n      } else if (priority < 10) {\n        coll = badgesColl;\n      } else {\n        coll = afterGroupedColl;\n      }\n\n      if (!(domain in coll)) {\n        coll[domain] = {\n          domain: domain,\n          priority: priority,\n          states: [],\n        };\n      }\n\n      coll[domain].states.push(state);\n    });\n\n    if (orderedGroupEntities) {\n      Object.keys(badgesColl)\n        .map((key) => badgesColl[key])\n        .forEach((domain) => {\n          cards.badges.push.apply(cards.badges, domain.states);\n        });\n\n      cards.badges.sort(\n        (e1, e2) =>\n          orderedGroupEntities[e1.entity_id] -\n          orderedGroupEntities[e2.entity_id]\n      );\n    } else {\n      iterateDomainSorted(badgesColl, (domain) => {\n        cards.badges.push.apply(cards.badges, domain.states);\n      });\n    }\n\n    iterateDomainSorted(beforeGroupColl, (domain) => {\n      addEntitiesCard(domain.domain, domain.states);\n    });\n\n    splitted.groups.forEach((groupState) => {\n      const entities = getGroupEntities(states, groupState);\n      addEntitiesCard(\n        groupState.entity_id,\n        Object.keys(entities).map((key) => entities[key]),\n        groupState\n      );\n    });\n\n    iterateDomainSorted(afterGroupedColl, (domain) => {\n      addEntitiesCard(domain.domain, domain.states);\n    });\n\n    // Remove empty columns\n    cards.columns = cards.columns.filter((val) => val.length > 0);\n\n    return cards;\n  }\n}\ncustomElements.define(\"ha-cards\", HaCards);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-label-badge\";\n\nclass HaDemoBadge extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          --ha-label-badge-color: #dac90d;\n        }\n      </style>\n\n      <ha-label-badge\n        icon=\"hass:emoticon\"\n        label=\"Demo\"\n        description=\"\"\n      ></ha-label-badge>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-demo-badge\", HaDemoBadge);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\nimport { navigate } from \"../common/navigate\";\n\n/*\n * @polymerMixin\n * @appliesMixin EventsMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      navigate(...args) {\n        navigate(this, ...args);\n      }\n    }\n);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-scroll-effects/effects/waterfall\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/app-route/app-route\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes\";\nimport \"@polymer/iron-pages/iron-pages\";\nimport \"@polymer/paper-tabs/paper-tab\";\nimport \"@polymer/paper-tabs/paper-tabs\";\n\nimport \"../../components/ha-cards\";\nimport \"../../components/ha-icon\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-start-voice-button\";\n\nimport \"../../layouts/ha-app-layout\";\n\nimport extractViews from \"../../common/entity/extract_views\";\nimport getViewEntities from \"../../common/entity/get_view_entities\";\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport computeStateDomain from \"../../common/entity/compute_state_domain\";\nimport computeLocationName from \"../../common/config/location_name\";\nimport NavigateMixin from \"../../mixins/navigate-mixin\";\nimport { EventsMixin } from \"../../mixins/events-mixin\";\n\nconst DEFAULT_VIEW_ENTITY_ID = \"group.default_view\";\nconst ALWAYS_SHOW_DOMAIN = [\"persistent_notification\", \"configurator\"];\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin NavigateMixin\n */\nclass PartialCards extends EventsMixin(NavigateMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex iron-positioning ha-style\">\n        :host {\n          -ms-user-select: none;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n        }\n\n        ha-app-layout {\n          min-height: 100%;\n          background-color: var(--secondary-background-color, #e5e5e5);\n        }\n\n        iron-pages {\n          height: 100%;\n        }\n\n        paper-tabs {\n          margin-left: 12px;\n          --paper-tabs-selection-bar-color: var(--text-primary-color, #fff);\n          text-transform: uppercase;\n        }\n      </style>\n      <app-route\n        route=\"{{route}}\"\n        pattern=\"/:view\"\n        data=\"{{routeData}}\"\n        active=\"{{routeMatch}}\"\n      ></app-route>\n      <ha-app-layout id=\"layout\">\n        <app-header effects=\"waterfall\" condenses=\"\" fixed=\"\" slot=\"header\">\n          <app-toolbar>\n            <ha-menu-button></ha-menu-button>\n            <div main-title=\"\">\n              [[computeTitle(views, defaultView, locationName)]]\n            </div>\n            <ha-start-voice-button hass=\"[[hass]]\"></ha-start-voice-button>\n          </app-toolbar>\n\n          <div sticky=\"\" hidden$=\"[[areTabsHidden(views, showTabs)]]\">\n            <paper-tabs\n              scrollable=\"\"\n              selected=\"[[currentView]]\"\n              attr-for-selected=\"data-entity\"\n              on-iron-activate=\"handleViewSelected\"\n            >\n              <paper-tab data-entity=\"\" on-click=\"scrollToTop\">\n                <template is=\"dom-if\" if=\"[[!defaultView]]\">\n                  Home\n                </template>\n                <template is=\"dom-if\" if=\"[[defaultView]]\">\n                  <template is=\"dom-if\" if=\"[[defaultView.attributes.icon]]\">\n                    <ha-icon\n                      title$=\"[[_computeStateName(defaultView)]]\"\n                      icon=\"[[defaultView.attributes.icon]]\"\n                    ></ha-icon>\n                  </template>\n                  <template is=\"dom-if\" if=\"[[!defaultView.attributes.icon]]\">\n                    [[_computeStateName(defaultView)]]\n                  </template>\n                </template>\n              </paper-tab>\n              <template is=\"dom-repeat\" items=\"[[views]]\">\n                <paper-tab\n                  data-entity$=\"[[item.entity_id]]\"\n                  on-click=\"scrollToTop\"\n                >\n                  <template is=\"dom-if\" if=\"[[item.attributes.icon]]\">\n                    <ha-icon\n                      title$=\"[[_computeStateName(item)]]\"\n                      icon=\"[[item.attributes.icon]]\"\n                    ></ha-icon>\n                  </template>\n                  <template is=\"dom-if\" if=\"[[!item.attributes.icon]]\">\n                    [[_computeStateName(item)]]\n                  </template>\n                </paper-tab>\n              </template>\n            </paper-tabs>\n          </div>\n        </app-header>\n\n        <iron-pages\n          attr-for-selected=\"data-view\"\n          selected=\"[[currentView]]\"\n          selected-attribute=\"view-visible\"\n        >\n          <ha-cards\n            data-view=\"\"\n            states=\"[[viewStates]]\"\n            columns=\"[[_columns]]\"\n            hass=\"[[hass]]\"\n            panel-visible=\"[[panelVisible]]\"\n            ordered-group-entities=\"[[orderedGroupEntities]]\"\n          ></ha-cards>\n\n          <template is=\"dom-repeat\" items=\"[[views]]\">\n            <ha-cards\n              data-view$=\"[[item.entity_id]]\"\n              states=\"[[viewStates]]\"\n              columns=\"[[_columns]]\"\n              hass=\"[[hass]]\"\n              panel-visible=\"[[panelVisible]]\"\n              ordered-group-entities=\"[[orderedGroupEntities]]\"\n            ></ha-cards>\n          </template>\n        </iron-pages>\n      </ha-app-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        value: null,\n        observer: \"hassChanged\",\n      },\n\n      narrow: {\n        type: Boolean,\n        value: false,\n      },\n\n      panelVisible: {\n        type: Boolean,\n        value: false,\n      },\n\n      route: Object,\n      routeData: Object,\n      routeMatch: Boolean,\n\n      _columns: {\n        type: Number,\n        value: 1,\n      },\n\n      locationName: {\n        type: String,\n        value: \"\",\n        computed: \"_computeLocationName(hass)\",\n      },\n\n      currentView: {\n        type: String,\n        computed: \"_computeCurrentView(hass, routeMatch, routeData)\",\n      },\n\n      views: {\n        type: Array,\n      },\n\n      defaultView: {\n        type: Object,\n      },\n\n      viewStates: {\n        type: Object,\n        computed: \"computeViewStates(currentView, hass, defaultView)\",\n      },\n\n      orderedGroupEntities: {\n        type: Array,\n        computed: \"computeOrderedGroupEntities(currentView, hass, defaultView)\",\n      },\n\n      showTabs: {\n        type: Boolean,\n        value: true,\n      },\n    };\n  }\n\n  static get observers() {\n    return [\"_updateColumns(narrow, hass.dockedSidebar)\"];\n  }\n\n  ready() {\n    this._updateColumns = this._updateColumns.bind(this);\n    this.mqls = [300, 600, 900, 1200].map((width) =>\n      matchMedia(`(min-width: ${width}px)`)\n    );\n    super.ready();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.mqls.forEach((mql) => mql.addListener(this._updateColumns));\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.mqls.forEach((mql) => mql.removeListener(this._updateColumns));\n  }\n\n  _updateColumns() {\n    const matchColumns = this.mqls.reduce((cols, mql) => cols + mql.matches, 0);\n    // Do -1 column if the menu is docked and open\n    this._columns = Math.max(\n      1,\n      matchColumns - (!this.narrow && this.hass.dockedSidebar)\n    );\n  }\n\n  areTabsHidden(views, showTabs) {\n    return !views || !views.length || !showTabs;\n  }\n\n  /**\n   * Scroll to a specific y coordinate.\n   *\n   * Copied from paper-scroll-header-panel.\n   *\n   * @method scroll\n   * @param {number} top The coordinate to scroll to, along the y-axis.\n   * @param {boolean} smooth true if the scroll position should be smoothly adjusted.\n   */\n  scrollToTop() {\n    // the scroll event will trigger _updateScrollState directly,\n    // However, _updateScrollState relies on the previous `scrollTop` to update the states.\n    // Calling _updateScrollState will ensure that the states are synced correctly.\n    var top = 0;\n    var scroller = this.$.layout.header.scrollTarget;\n    var easingFn = function easeOutQuad(t, b, c, d) {\n      /* eslint-disable no-param-reassign, space-infix-ops, no-mixed-operators */\n      t /= d;\n      return -c * t * (t - 2) + b;\n      /* eslint-enable no-param-reassign, space-infix-ops, no-mixed-operators */\n    };\n    var animationId = Math.random();\n    var duration = 200;\n    var startTime = Date.now();\n    var currentScrollTop = scroller.scrollTop;\n    var deltaScrollTop = top - currentScrollTop;\n    this._currentAnimationId = animationId;\n    (function updateFrame() {\n      var now = Date.now();\n      var elapsedTime = now - startTime;\n      if (elapsedTime > duration) {\n        scroller.scrollTop = top;\n      } else if (this._currentAnimationId === animationId) {\n        scroller.scrollTop = easingFn(\n          elapsedTime,\n          currentScrollTop,\n          deltaScrollTop,\n          duration\n        );\n        requestAnimationFrame(updateFrame.bind(this));\n      }\n    }.call(this));\n  }\n\n  handleViewSelected(ev) {\n    const view = ev.detail.item.getAttribute(\"data-entity\") || null;\n\n    if (view !== this.currentView) {\n      let path = \"/states\";\n      if (view) {\n        path += \"/\" + view;\n      }\n      this.navigate(path);\n    }\n  }\n\n  _computeCurrentView(hass, routeMatch, routeData) {\n    if (!routeMatch) return \"\";\n    if (\n      !hass.states[routeData.view] ||\n      !hass.states[routeData.view].attributes.view\n    ) {\n      return \"\";\n    }\n    return routeData.view;\n  }\n\n  computeTitle(views, defaultView, locationName) {\n    return (views &&\n      views.length > 0 &&\n      !defaultView &&\n      locationName === \"Home\") ||\n      !locationName\n      ? \"Home Assistant\"\n      : locationName;\n  }\n\n  _computeStateName(stateObj) {\n    return computeStateName(stateObj);\n  }\n\n  _computeLocationName(hass) {\n    return computeLocationName(hass);\n  }\n\n  hassChanged(hass) {\n    if (!hass) return;\n    const views = extractViews(hass.states);\n    let defaultView = null;\n    // If default view present, it's in first index.\n    if (views.length > 0 && views[0].entity_id === DEFAULT_VIEW_ENTITY_ID) {\n      defaultView = views.shift();\n    }\n\n    this.setProperties({ views, defaultView });\n  }\n\n  isView(currentView, defaultView) {\n    return (\n      (currentView || defaultView) &&\n      this.hass.states[currentView || DEFAULT_VIEW_ENTITY_ID]\n    );\n  }\n\n  _defaultViewFilter(hass, entityId) {\n    // Filter out hidden\n    return !hass.states[entityId].attributes.hidden;\n  }\n\n  _computeDefaultViewStates(hass, entityIds) {\n    const states = {};\n    entityIds\n      .filter(this._defaultViewFilter.bind(null, hass))\n      .forEach((entityId) => {\n        states[entityId] = hass.states[entityId];\n      });\n    return states;\n  }\n\n  /*\n    Compute the states to show for current view.\n\n    Will make sure we always show entities from ALWAYS_SHOW_DOMAINS domains.\n  */\n  computeViewStates(currentView, hass, defaultView) {\n    const entityIds = Object.keys(hass.states);\n\n    // If we base off all entities, only have to filter out hidden\n    if (!this.isView(currentView, defaultView)) {\n      return this._computeDefaultViewStates(hass, entityIds);\n    }\n\n    let states;\n    if (currentView) {\n      states = getViewEntities(hass.states, hass.states[currentView]);\n    } else {\n      states = getViewEntities(\n        hass.states,\n        hass.states[DEFAULT_VIEW_ENTITY_ID]\n      );\n    }\n\n    // Make sure certain domains are always shown.\n    entityIds.forEach((entityId) => {\n      const state = hass.states[entityId];\n\n      if (ALWAYS_SHOW_DOMAIN.includes(computeStateDomain(state))) {\n        states[entityId] = state;\n      }\n    });\n\n    return states;\n  }\n\n  /*\n    Compute the ordered list of groups for this view\n  */\n  computeOrderedGroupEntities(currentView, hass, defaultView) {\n    if (!this.isView(currentView, defaultView)) {\n      return null;\n    }\n\n    var orderedGroupEntities = {};\n    var entitiesList =\n      hass.states[currentView || DEFAULT_VIEW_ENTITY_ID].attributes.entity_id;\n\n    for (var i = 0; i < entitiesList.length; i++) {\n      orderedGroupEntities[entitiesList[i]] = i;\n    }\n\n    return orderedGroupEntities;\n  }\n}\n\ncustomElements.define(\"ha-panel-states\", PartialCards);\n"],"sourceRoot":""}