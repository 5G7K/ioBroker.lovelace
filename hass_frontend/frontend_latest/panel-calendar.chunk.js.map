{"version":3,"sources":["webpack:///./src/mixins/events-mixin.js","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/panels/calendar/ha-big-calendar.js","webpack:///./src/panels/calendar/ha-panel-calendar.js"],"names":["EventsMixin","dedupingMixin","superClass","fire","type","detail","options","fireEvent","node","properties","hass","Object","localize","Function","computed","__computeLocalize","BigCalendar","setLocalizer","momentLocalizer","moment","DEFAULT_VIEW","HaBigCalendar","PolymerElement","template","html","events","Array","observer","_update","allViews","Views","values","BCElement","React","createElement","views","popup","onNavigate","date","viewName","onView","eventPropGetter","_setEventStyle","defaultView","defaultDate","Date","render","$","root","event","newStyle","color","backgroundColor","style","customElements","define","HaPanelCalendar","LocalizeMixin","currentView","String","value","currentDate","calendars","selectedCalendars","narrow","Boolean","reflectToAttribute","connectedCallback","_fetchCalendars","callApi","then","result","map","cal","entity_id","_fetchData","start","dates","firstVisibleDay","toISOString","end","lastVisibleDay","params","encodeURI","calls","Promise","all","results","tmpEvents","forEach","res","ev","push","_getDateRange","startDate","endDate","startOf","endOf","subtract","add","_handleViewChanged","_handleNavigate"],"mappings":"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","file":"panel-calendar.chunk.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\n/* eslint-disable */\nimport { render } from \"react-dom\";\nimport React from \"react\";\n/* eslint-enable */\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { EventsMixin } from \"../../mixins/events-mixin\";\n\nimport \"../../resources/ha-style\";\n\nBigCalendar.setLocalizer(BigCalendar.momentLocalizer(moment));\n\nconst DEFAULT_VIEW = \"month\";\n\nclass HaBigCalendar extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"/static/panels/calendar/react-big-calendar.css\"\n      />\n      <style>\n        div#root {\n          height: 100%;\n          width: 100%;\n        }\n      </style>\n      <div id=\"root\"></div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      events: {\n        type: Array,\n        observer: \"_update\",\n      },\n    };\n  }\n\n  _update(events) {\n    const allViews = BigCalendar.Views.values;\n\n    const BCElement = React.createElement(BigCalendar, {\n      events: events,\n      views: allViews,\n      popup: true,\n      onNavigate: (date, viewName) => this.fire(\"navigate\", { date, viewName }),\n      onView: (viewName) => this.fire(\"view-changed\", { viewName }),\n      eventPropGetter: this._setEventStyle,\n      defaultView: DEFAULT_VIEW,\n      defaultDate: new Date(),\n    });\n    render(BCElement, this.$.root);\n  }\n\n  _setEventStyle(event) {\n    // https://stackoverflow.com/questions/34587067/change-color-of-react-big-calendar-events\n    const newStyle = {};\n    if (event.color) {\n      newStyle.backgroundColor = event.color;\n    }\n    return { style: newStyle };\n  }\n}\n\ncustomElements.define(\"ha-big-calendar\", HaBigCalendar);\n","import \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@polymer/paper-checkbox/paper-checkbox\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport moment from \"moment\";\nimport dates from \"react-big-calendar/lib/utils/dates\";\n\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-card\";\nimport \"../../resources/ha-style\";\nimport \"./ha-big-calendar\";\n\nimport LocalizeMixin from \"../../mixins/localize-mixin\";\n\nconst DEFAULT_VIEW = \"month\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPanelCalendar extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 16px;\n          @apply --layout-horizontal;\n        }\n\n        ha-big-calendar {\n          min-height: 500px;\n          min-width: 100%;\n        }\n\n        #calendars {\n          padding-right: 16px;\n          width: 15%;\n          min-width: 170px;\n        }\n\n        paper-item {\n          cursor: pointer;\n        }\n\n        div.all_calendars {\n          ￼height: 20px;\n          ￼text-align: center;\n        }\n\n        .iron-selected {\n          background-color: #e5e5e5;\n          font-weight: normal;\n        }\n\n        :host([narrow]) .content {\n          flex-direction: column;\n        }\n        :host([narrow]) #calendars {\n          margin-bottom: 24px;\n          width: 100%;\n        }\n      </style>\n\n      <app-header-layout has-scrolling-region>\n        <app-header slot=\"header\" fixed>\n          <app-toolbar>\n            <ha-menu-button></ha-menu-button>\n            <div main-title>[[localize('panel.calendar')]]</div>\n          </app-toolbar>\n        </app-header>\n\n        <div class=\"flex content\">\n          <div id=\"calendars\" class=\"layout vertical wrap\">\n            <ha-card header=\"Calendars\">\n              <paper-listbox\n                id=\"calendar_list\"\n                multi\n                on-selected-items-changed=\"_fetchData\"\n                selected-values=\"{{selectedCalendars}}\"\n                attr-for-selected=\"item-name\"\n              >\n                <template is=\"dom-repeat\" items=\"[[calendars]]\">\n                  <paper-item item-name=\"[[item.entity_id]]\">\n                    <span\n                      class=\"calendar_color\"\n                      style$=\"background-color: [[item.color]]\"\n                    ></span>\n                    <span class=\"calendar_color_spacer\"></span> [[item.name]]\n                  </paper-item>\n                </template>\n              </paper-listbox>\n            </ha-card>\n          </div>\n          <div class=\"flex layout horizontal wrap\">\n            <ha-big-calendar\n              default-date=\"[[currentDate]]\"\n              default-view=\"[[currentView]]\"\n              on-navigate=\"_handleNavigate\"\n              on-view=\"_handleViewChanged\"\n              events=\"[[events]]\"\n            >\n            </ha-big-calendar>\n          </div>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      currentView: {\n        type: String,\n        value: DEFAULT_VIEW,\n      },\n\n      currentDate: {\n        type: Object,\n        value: new Date(),\n      },\n\n      events: {\n        type: Array,\n        value: [],\n      },\n\n      calendars: {\n        type: Array,\n        value: [],\n      },\n\n      selectedCalendars: {\n        type: Array,\n        value: [],\n      },\n\n      narrow: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._fetchCalendars();\n  }\n\n  _fetchCalendars() {\n    this.hass.callApi(\"get\", \"calendars\").then((result) => {\n      this.calendars = result;\n      this.selectedCalendars = result.map((cal) => cal.entity_id);\n    });\n  }\n\n  _fetchData() {\n    const start = dates.firstVisibleDay(this.currentDate).toISOString();\n    const end = dates.lastVisibleDay(this.currentDate).toISOString();\n    const params = encodeURI(`?start=${start}&end=${end}`);\n    const calls = this.selectedCalendars.map((cal) =>\n      this.hass.callApi(\"get\", `calendars/${cal}${params}`)\n    );\n    Promise.all(calls).then((results) => {\n      const tmpEvents = [];\n\n      results.forEach((res) => {\n        res.forEach((ev) => {\n          ev.start = new Date(ev.start);\n          if (ev.end) {\n            ev.end = new Date(ev.end);\n          } else {\n            ev.end = null;\n          }\n          tmpEvents.push(ev);\n        });\n      });\n      this.events = tmpEvents;\n    });\n  }\n\n  _getDateRange() {\n    let startDate;\n    let endDate;\n    if (this.currentView === \"day\") {\n      startDate = moment(this.currentDate).startOf(\"day\");\n      endDate = moment(this.currentDate).startOf(\"day\");\n    } else if (this.currentView === \"week\") {\n      startDate = moment(this.currentDate).startOf(\"isoWeek\");\n      endDate = moment(this.currentDate).endOf(\"isoWeek\");\n    } else if (this.currentView === \"month\") {\n      startDate = moment(this.currentDate)\n        .startOf(\"month\")\n        .subtract(7, \"days\");\n      endDate = moment(this.currentDate)\n        .endOf(\"month\")\n        .add(7, \"days\");\n    } else if (this.currentView === \"agenda\") {\n      startDate = moment(this.currentDate).startOf(\"day\");\n      endDate = moment(this.currentDate)\n        .endOf(\"day\")\n        .add(1, \"month\");\n    }\n    return [startDate.toISOString(), endDate.toISOString()];\n  }\n\n  _handleViewChanged(ev) {\n    // Calendar view changed\n    this.currentView = ev.detail.viewName;\n    this._fetchData();\n  }\n\n  _handleNavigate(ev) {\n    // Calendar date range changed\n    this.currentDate = ev.detail.date;\n    this.currentView = ev.detail.viewName;\n    this._fetchData();\n  }\n}\n\ncustomElements.define(\"ha-panel-calendar\", HaPanelCalendar);\n"],"sourceRoot":""}