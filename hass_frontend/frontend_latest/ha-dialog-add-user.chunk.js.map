{"version":3,"sources":["webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/panels/config/users/ha-dialog-add-user.js"],"names":["HaIronFocusablesHelper","getTabbableNodes","node","result","needsSortByTabIndex","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","element","tabIndex","_normalizedTabIndex","needsSort","push","children","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","HaPaperDialog","mixinBehaviors","define","HaDialogAddUser","LocalizeMixin","PolymerElement","template","html","properties","_hass","Object","_dialogClosedCallback","Function","_loading","type","Boolean","value","_errorMsg","String","_opened","_name","_username","_password","ready","addEventListener","ev","keyCode","_createUser","showDialog","hass","dialogClosedCallback","setTimeout","querySelector","focus","_maybePopulateUsername","parts","split","toLowerCase","preventDefault","userId","userResponse","callWS","name","user","id","err","code","user_id","username","password","_dialogDone","setProperties","_equals","a","b","_openedChanged","detail"],"mappings":"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","file":"ha-dialog-add-user.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../components/dialog/ha-paper-dialog\";\nimport \"../../../resources/ha-style\";\n\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaDialogAddUser extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style-dialog\">\n        .error {\n          color: red;\n        }\n        ha-paper-dialog {\n          max-width: 500px;\n        }\n        .username {\n          margin-top: -8px;\n        }\n      </style>\n      <ha-paper-dialog\n        id=\"dialog\"\n        with-backdrop\n        opened=\"{{_opened}}\"\n        on-opened-changed=\"_openedChanged\"\n      >\n        <h2>[[localize('ui.panel.config.users.add_user.caption')]]</h2>\n        <div>\n          <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n            <div class=\"error\">[[_errorMsg]]</div>\n          </template>\n          <paper-input\n            class=\"name\"\n            label=\"[[localize('ui.panel.config.users.add_user.name')]]\"\n            value=\"{{_name}}\"\n            required\n            auto-validate\n            autocapitalize=\"on\"\n            error-message=\"Required\"\n            on-blur=\"_maybePopulateUsername\"\n          ></paper-input>\n          <paper-input\n            class=\"username\"\n            label=\"[[localize('ui.panel.config.users.add_user.username')]]\"\n            value=\"{{_username}}\"\n            required\n            auto-validate\n            autocapitalize=\"none\"\n            error-message=\"Required\"\n          ></paper-input>\n          <paper-input\n            label=\"[[localize('ui.panel.config.users.add_user.password')]]\"\n            type=\"password\"\n            value=\"{{_password}}\"\n            required\n            auto-validate\n            error-message=\"Required\"\n          ></paper-input>\n        </div>\n        <div class=\"buttons\">\n          <template is=\"dom-if\" if=\"[[_loading]]\">\n            <div class=\"submit-spinner\">\n              <paper-spinner active></paper-spinner>\n            </div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_loading]]\">\n            <mwc-button on-click=\"_createUser\"\n              >[[localize('ui.panel.config.users.add_user.create')]]</mwc-button\n            >\n          </template>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  static get properties() {\n    return {\n      _hass: Object,\n      _dialogClosedCallback: Function,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      // Error message when can't talk to server etc\n      _errorMsg: String,\n\n      _opened: {\n        type: Boolean,\n        value: false,\n      },\n\n      _name: String,\n      _username: String,\n      _password: String,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._createUser(ev);\n      }\n    });\n  }\n\n  showDialog({ hass, dialogClosedCallback }) {\n    this.hass = hass;\n    this._dialogClosedCallback = dialogClosedCallback;\n    this._loading = false;\n    this._opened = true;\n    setTimeout(() => this.shadowRoot.querySelector(\"paper-input\").focus(), 0);\n  }\n\n  _maybePopulateUsername() {\n    if (this._username) return;\n\n    const parts = this._name.split(\" \");\n\n    if (parts.length) {\n      this._username = parts[0].toLowerCase();\n    }\n  }\n\n  async _createUser(ev) {\n    ev.preventDefault();\n    if (!this._name || !this._username || !this._password) return;\n\n    this._loading = true;\n    this._errorMsg = null;\n\n    let userId;\n\n    try {\n      const userResponse = await this.hass.callWS({\n        type: \"config/auth/create\",\n        name: this._name,\n      });\n      userId = userResponse.user.id;\n    } catch (err) {\n      this._loading = false;\n      this._errorMsg = err.code;\n      return;\n    }\n\n    try {\n      await this.hass.callWS({\n        type: \"config/auth_provider/homeassistant/create\",\n        user_id: userId,\n        username: this._username,\n        password: this._password,\n      });\n    } catch (err) {\n      this._loading = false;\n      this._errorMsg = err.code;\n      await this.hass.callWS({\n        type: \"config/auth/delete\",\n        user_id: userId,\n      });\n      return;\n    }\n\n    this._dialogDone(userId);\n  }\n\n  _dialogDone(userId) {\n    this._dialogClosedCallback({ userId });\n\n    this.setProperties({\n      _errorMsg: null,\n      _username: \"\",\n      _password: \"\",\n      _dialogClosedCallback: null,\n      _opened: false,\n    });\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n\n  _openedChanged(ev) {\n    // Closed dialog by clicking on the overlay\n    // Check against dialogClosedCallback to make sure we didn't change\n    // programmatically\n    if (this._dialogClosedCallback && !ev.detail.value) {\n      this._dialogDone();\n    }\n  }\n}\n\ncustomElements.define(\"ha-dialog-add-user\", HaDialogAddUser);\n"],"sourceRoot":""}