{"version":3,"sources":["webpack:///./src/common/dom/load_resource.ts","webpack:///./src/panels/custom/ha-panel-custom.ts","webpack:///./src/util/custom-panel/create-custom-panel-element.ts","webpack:///./src/util/custom-panel/load-custom-panel.ts","webpack:///./src/util/custom-panel/set-custom-panel-properties.ts"],"names":["_load","tag","url","type","Promise","resolve","reject","element","document","createElement","attr","parent","onload","onerror","async","rel","appendChild","loadCSS","loadJS","loadImg","loadModule","HaPanelCustom","property","path","replace","navigate","initialize","setProperties","panel","hass","narrow","route","_setProperties","_cleanupPanel","changedProps","has","get","_createPanel","props","key","keys","window","customPanel","undefined","lastChild","removeChild","config","_panel_custom","tempA","href","html_url","js_url","module_url","trust_external","location","hostname","includes","confirm","name","embed_iframe","loadCustomPanel","then","createCustomPanelElement","setCustomPanelProperties","alert","innerHTML","trim","iframeDoc","querySelector","contentWindow","open","write","customPanelJS","close","UpdatingElement","customElements","define","panelConfig","tagName","JS_CACHE","toLoad","push","all","importHrefPromise","root","properties","Object","forEach"],"mappings":"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","file":"panel-custom.chunk.js","sourcesContent":["// Load a resource and get a promise when loading done.\n// From: https://davidwalsh.name/javascript-loader\n\nconst _load = (\n  tag: \"link\" | \"script\" | \"img\",\n  url: string,\n  type?: \"module\"\n) => {\n  // This promise will be used by Promise.all to determine success or failure\n  return new Promise((resolve, reject) => {\n    const element = document.createElement(tag);\n    let attr = \"src\";\n    let parent = \"body\";\n\n    // Important success and error for the promise\n    element.onload = () => resolve(url);\n    element.onerror = () => reject(url);\n\n    // Need to set different attributes depending on tag type\n    switch (tag) {\n      case \"script\":\n        (element as HTMLScriptElement).async = true;\n        if (type) {\n          (element as HTMLScriptElement).type = type;\n        }\n        break;\n      case \"link\":\n        (element as HTMLLinkElement).type = \"text/css\";\n        (element as HTMLLinkElement).rel = \"stylesheet\";\n        attr = \"href\";\n        parent = \"head\";\n    }\n\n    // Inject into document to kick off loading\n    element[attr] = url;\n    document[parent].appendChild(element);\n  });\n};\n\nexport const loadCSS = (url: string) => _load(\"link\", url);\nexport const loadJS = (url: string) => _load(\"script\", url);\nexport const loadImg = (url: string) => _load(\"img\", url);\nexport const loadModule = (url: string) => _load(\"script\", url, \"module\");\n","import { property, PropertyValues, UpdatingElement } from \"lit-element\";\nimport { loadCustomPanel } from \"../../util/custom-panel/load-custom-panel\";\nimport { createCustomPanelElement } from \"../../util/custom-panel/create-custom-panel-element\";\nimport { setCustomPanelProperties } from \"../../util/custom-panel/set-custom-panel-properties\";\nimport { HomeAssistant, Route } from \"../../types\";\nimport { CustomPanelInfo } from \"../../data/panel_custom\";\nimport { navigate } from \"../../common/navigate\";\n\ndeclare global {\n  interface Window {\n    customPanel: HaPanelCustom | undefined;\n  }\n}\n\nexport class HaPanelCustom extends UpdatingElement {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n  @property() public route!: Route;\n  @property() public panel!: CustomPanelInfo;\n  private _setProperties?: (props: {}) => void | undefined;\n\n  // Since navigate fires events on `window`, we need to expose this as a function\n  // to allow custom panels to forward their location changes to the main window\n  // instead of their iframe window.\n  public navigate = (path: string, replace?: boolean) =>\n    navigate(this, path, replace);\n\n  public registerIframe(initialize, setProperties) {\n    initialize(this.panel, {\n      hass: this.hass,\n      narrow: this.narrow,\n      route: this.route,\n    });\n    this._setProperties = setProperties;\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._cleanupPanel();\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (changedProps.has(\"panel\")) {\n      // Clean up old things if we had a panel\n      if (changedProps.get(\"panel\")) {\n        this._cleanupPanel();\n      }\n      this._createPanel(this.panel);\n      return;\n    }\n    if (!this._setProperties) {\n      return;\n    }\n    const props = {};\n    for (const key of changedProps.keys()) {\n      props[key] = this[key];\n    }\n    this._setProperties(props);\n  }\n\n  private _cleanupPanel() {\n    delete window.customPanel;\n    this._setProperties = undefined;\n    while (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n  }\n\n  private _createPanel(panel: CustomPanelInfo) {\n    const config = panel.config!._panel_custom;\n\n    const tempA = document.createElement(\"a\");\n    tempA.href = config.html_url || config.js_url || config.module_url || \"\";\n\n    if (\n      !config.trust_external &&\n      ![\"localhost\", \"127.0.0.1\", location.hostname].includes(tempA.hostname)\n    ) {\n      if (\n        !confirm(`Do you trust the external panel \"${config.name}\" at \"${\n          tempA.href\n        }\"?\n\nIt will have access to all data in Home Assistant.\n\n(Check docs for the panel_custom component to hide this message)`)\n      ) {\n        return;\n      }\n    }\n\n    if (!config.embed_iframe) {\n      loadCustomPanel(config).then(\n        () => {\n          const element = createCustomPanelElement(config);\n          this._setProperties = (props) =>\n            setCustomPanelProperties(element, props);\n          setCustomPanelProperties(element, {\n            panel,\n            hass: this.hass,\n            narrow: this.narrow,\n            route: this.route,\n          });\n          this.appendChild(element);\n        },\n        () => {\n          alert(`Unable to load custom panel from ${tempA.href}`);\n        }\n      );\n      return;\n    }\n\n    window.customPanel = this;\n    this.innerHTML = `\n    <style>\n      iframe {\n        border: 0;\n        width: 100%;\n        height: 100%;\n        display: block;\n      }\n    </style>\n    <iframe></iframe>\n    `.trim();\n    const iframeDoc = this.querySelector(\"iframe\")!.contentWindow!.document;\n    iframeDoc.open();\n    iframeDoc.write(\n      `<!doctype html><script src='${window.customPanelJS}'></script>`\n    );\n    iframeDoc.close();\n  }\n}\n\ncustomElements.define(\"ha-panel-custom\", HaPanelCustom);\n","export const createCustomPanelElement = (panelConfig) => {\n  // Legacy support. Custom panels used to have to define element ha-panel-{name}\n  const tagName =\n    \"html_url\" in panelConfig\n      ? `ha-panel-${panelConfig.name}`\n      : panelConfig.name;\n  return document.createElement(tagName);\n};\n","import { loadJS, loadModule } from \"../../common/dom/load_resource\";\n\n// Make sure we only import every JS-based panel once (HTML import has this built-in)\nconst JS_CACHE = {};\n\nexport const loadCustomPanel = (panelConfig): Promise<unknown> => {\n  if (panelConfig.html_url) {\n    const toLoad = [\n      import(/* webpackChunkName: \"import-href-polyfill\" */ \"../../resources/html-import/import-href\"),\n    ];\n\n    if (!panelConfig.embed_iframe) {\n      toLoad.push(\n        import(/* webpackChunkName: \"legacy-support\" */ \"../legacy-support\")\n      );\n    }\n\n    return Promise.all(toLoad).then(([{ importHrefPromise }]) =>\n      importHrefPromise(panelConfig.html_url)\n    );\n  }\n  if (panelConfig.js_url) {\n    if (!(panelConfig.js_url in JS_CACHE)) {\n      JS_CACHE[panelConfig.js_url] = loadJS(panelConfig.js_url);\n    }\n    return JS_CACHE[panelConfig.js_url];\n  }\n  if (panelConfig.module_url) {\n    return loadModule(panelConfig.module_url);\n  }\n  return Promise.reject(\"No valid url found in panel config.\");\n};\n","export const setCustomPanelProperties = (root, properties) => {\n  if (\"setProperties\" in root) {\n    root.setProperties(properties);\n  } else {\n    Object.keys(properties).forEach((key) => {\n      root[key] = properties[key];\n    });\n  }\n};\n"],"sourceRoot":""}