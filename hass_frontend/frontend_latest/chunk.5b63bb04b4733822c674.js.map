{"version":3,"sources":["webpack:///./src/mixins/localize-mixin.js","webpack:///./src/mixins/events-mixin.js","webpack:///./src/panels/config/ha-config-section.ts","webpack:///./src/components/ha-switch.ts","webpack:///./src/common/datetime/format_date_time.ts","webpack:///./src/components/buttons/ha-progress-button.js","webpack:///./src/util/toast-saved-success.ts","webpack:///./src/mixins/navigate-mixin.js","webpack:///./src/components/buttons/ha-call-api-button.js","webpack:///./src/data/alexa.ts","webpack:///./src/panels/config/cloud/account/cloud-webhooks.ts","webpack:///./src/panels/config/cloud/dialog-manage-cloudhook/show-dialog-manage-cloudhook.ts","webpack:///./src/data/webhook.ts","webpack:///./src/panels/config/cloud/account/cloud-alexa-pref.ts","webpack:///./src/panels/config/cloud/account/cloud-google-pref.ts","webpack:///./src/panels/config/cloud/account/cloud-remote-pref.ts","webpack:///./src/panels/config/cloud/dialog-cloud-certificate/show-dialog-cloud-certificate.ts","webpack:///./src/panels/config/cloud/account/cloud-account.js","webpack:///./src/panels/config/cloud/login/cloud-login.js","webpack:///./src/panels/config/cloud/ha-config-cloud.ts"],"names":["_polymer_polymer_lib_utils_mixin__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","dedupingMixin","superClass","properties","hass","Object","localize","type","Function","computed","__computeLocalize","d","__webpack_exports__","EventsMixin","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_1__","fire","detail","options","fireEvent","node","this","_decorate","customElement","_initialize","_HTMLElement","F","constructor","super","attachShadow","mode","shadowRoot","innerHTML","HTMLElement","MwcSwitch","customElements","get","_MwcSwitch","HaSwitch","[object Object]","args","kind","decorators","query","key","value","_get","_getPrototypeOf","prototype","call","style","setProperty","classList","toggle","Boolean","_slot","assignedNodes","length","static","css","fecha__WEBPACK_IMPORTED_MODULE_0__","toLocaleStringSupportsOptions","Date","toLocaleString","e","name","dateObj","locales","year","month","day","hour","minute","fecha","format","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_3__","define","PolymerElement","template","html","progress","disabled","tempClass","className","$","container","add","setTimeout","remove","ready","addEventListener","ev","buttonTapped","stopPropagation","actionSuccess","actionError","computeDisabled","showSaveSuccessToast","_toast__WEBPACK_IMPORTED_MODULE_0__","el","showToast","message","_common_navigate__WEBPACK_IMPORTED_MODULE_1__","navigate","lit_element__WEBPACK_IMPORTED_MODULE_0__","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_2__","LitElement","render","_buttonTapped","method","data","path","String","progressButton","renderRoot","querySelector","eventData","resp","callApi","success","response","err","fetchCloudAlexaEntities","syncCloudAlexaEntities","callWS","CloudWebhooks","_LitElement","_progress","property","_fetchData","renderStyle","_renderBody","changedProps","has","cloudStatus","_cloudHooks","prefs","cloudhooks","_localHooks","map","entry","domain","toLowerCase","webhook_id","includes","_handleManageButton","_enableWebhook","webhookId","webhook","find","ent","cloudhook","element","webhookDialogParams","disableHook","_disableWebhook","dialogTag","dialogImport","Promise","all","then","bind","dialogParams","currentTarget","parentElement","_showDialog","async","updatedWebhook","createCloudhook","alert","filter","wid","assign","deleteCloudhook","newHooks","_objectWithoutPropertiesLoose","_toPropertyKey","config","components","fetchWebhooks","CloudAlexaPref","cloud_alexa_pref_decorate","alexa_enabled","alexa_report_state","_enabledToggleChanged","_reportToggleChanged","_handleSync","_syncing","body","target","updateCloudPref","checked","CloudGooglePref","cloud_google_pref_decorate","google_enabled","google_report_state","google_secure_devices_pin","_enableToggleChanged","_pinChanged","_syncEntitiesCalled","status_code","id","input","cloud_remote_pref_decorate","remote_connected","remote_domain","remote_certificate","_toggleChanged","_openCertInfo","certificateInfo","connectCloudRemote","disconnectCloudRemote","LocalizeMixin","isWide","_subscription","_fetchSubscriptionInfo","_computeRemoteConnected","connected","fetchCloudSubscriptionInfo","provider","cloud","handleLogout","_formatSubscription","subInfo","description","human_description","plan_renewal_date","replace","formatDateTime","language","NavigateMixin","email","notify","_password","_requestInProgress","flashMessage","_error","observers","connectedCallback","requestAnimationFrame","flashRipple","simulatedRipple","_inputChanged","invalid","password","_keyDown","keyCode","_handleLogin","preventDefault","focus","setProperties","errCode","code","props","_handleRegister","_handleForgotPassword","_dismissFlash","LOGGED_IN_URLS","NOT_LOGGED_IN_URLS","HaConfigCloud","_HassRouterPage","defaultPage","showLoading","initialLoad","_cloudStatusLoaded","beforeRender","page","logged_in","routes","login","tag","register","load","forgot-password","account","google-assistant","alexa","resolve","_resolveCloudStatusLoaded","ha_config_cloud_get","ha_config_cloud_getPrototypeOf","_flashMessage","oldStatus","undefined","route","prefix","_loginEmail","_currentPage","narrow","HassRouterPage"],"mappings":"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","file":"chunk.5b63bb04b4733822c674.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { customElement } from \"lit-element\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = `\n    <style>\n      .content {\n        padding: 28px 20px 0;\n        max-width: 640px;\n        margin: 0 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 20px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        width: 100%;\n        max-width: 500px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n    </style>\n    <div class=\"content\">\n      <div class=\"header\"><slot name=\"header\"></slot></div>\n      <div class=\"together\">\n        <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n        <div class=\"panel\"><slot></slot></div>\n      </div>\n    </div>\n    `;\n  }\n}\n","import { customElement, CSSResult, css, query } from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport default toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\");\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nclass HaProgressButton extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        .container {\n          position: relative;\n          display: inline-block;\n        }\n\n        mwc-button {\n          transition: all 1s;\n        }\n\n        .success mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-green-500);\n          transition: none;\n        }\n\n        .error mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-red-500);\n          transition: none;\n        }\n\n        .progress {\n          @apply --layout;\n          @apply --layout-center-center;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n      </style>\n      <div class=\"container\" id=\"container\">\n        <mwc-button\n          id=\"button\"\n          disabled=\"[[computeDisabled(disabled, progress)]]\"\n          on-click=\"buttonTapped\"\n        >\n          <slot></slot>\n        </mwc-button>\n        <template is=\"dom-if\" if=\"[[progress]]\">\n          <div class=\"progress\"><paper-spinner active=\"\"></paper-spinner></div>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  tempClass(className) {\n    var classList = this.$.container.classList;\n    classList.add(className);\n    setTimeout(() => {\n      classList.remove(className);\n    }, 1000);\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"click\", (ev) => this.buttonTapped(ev));\n  }\n\n  buttonTapped(ev) {\n    if (this.progress) ev.stopPropagation();\n  }\n\n  actionSuccess() {\n    this.tempClass(\"success\");\n  }\n\n  actionError() {\n    this.tempClass(\"error\");\n  }\n\n  computeDisabled(disabled, progress) {\n    return disabled || progress;\n  }\n}\n\ncustomElements.define(\"ha-progress-button\", HaProgressButton);\n","import { showToast } from \"./toast\";\nimport { HomeAssistant } from \"../types\";\n\nexport const showSaveSuccessToast = (el: HTMLElement, hass: HomeAssistant) =>\n  showToast(el, {\n    message: hass!.localize(\"ui.common.successfully_saved\"),\n  });\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\nimport { navigate } from \"../common/navigate\";\n\n/*\n * @polymerMixin\n * @appliesMixin EventsMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      navigate(...args) {\n        navigate(this, ...args);\n      }\n    }\n);\n","import { LitElement, html } from \"lit-element\";\n\nimport \"./ha-progress-button\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nclass HaCallApiButton extends LitElement {\n  render() {\n    return html`\n      <ha-progress-button\n        .progress=\"${this.progress}\"\n        @click=\"${this._buttonTapped}\"\n        ?disabled=\"${this.disabled}\"\n        ><slot></slot\n      ></ha-progress-button>\n    `;\n  }\n\n  constructor() {\n    super();\n    this.method = \"POST\";\n    this.data = {};\n    this.disabled = false;\n    this.progress = false;\n  }\n\n  static get properties() {\n    return {\n      hass: {},\n      progress: Boolean,\n      path: String,\n      method: String,\n      data: {},\n      disabled: Boolean,\n    };\n  }\n\n  get progressButton() {\n    return this.renderRoot.querySelector(\"ha-progress-button\");\n  }\n\n  async _buttonTapped() {\n    this.progress = true;\n    const eventData = {\n      method: this.method,\n      path: this.path,\n      data: this.data,\n    };\n\n    try {\n      const resp = await this.hass.callApi(this.method, this.path, this.data);\n      this.progress = false;\n      this.progressButton.actionSuccess();\n      eventData.success = true;\n      eventData.response = resp;\n    } catch (err) {\n      this.progress = false;\n      this.progressButton.actionError();\n      eventData.success = false;\n      eventData.response = err;\n    }\n\n    fireEvent(this, \"hass-api-called\", eventData);\n  }\n}\n\ncustomElements.define(\"ha-call-api-button\", HaCallApiButton);\n","import { HomeAssistant } from \"../types\";\n\nexport interface AlexaEntity {\n  entity_id: string;\n  display_categories: string[];\n  interfaces: string[];\n}\n\nexport const fetchCloudAlexaEntities = (hass: HomeAssistant) =>\n  hass.callWS<AlexaEntity[]>({ type: \"cloud/alexa/entities\" });\n\nexport const syncCloudAlexaEntities = (hass: HomeAssistant) =>\n  hass.callWS({ type: \"cloud/alexa/sync\" });\n","import { html, LitElement, PropertyValues, property } from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-spinner/paper-spinner\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-switch\";\n\nimport { HomeAssistant, WebhookError } from \"../../../../types\";\nimport { Webhook, fetchWebhooks } from \"../../../../data/webhook\";\nimport {\n  createCloudhook,\n  deleteCloudhook,\n  CloudWebhook,\n  CloudStatusLoggedIn,\n} from \"../../../../data/cloud\";\nimport { showManageCloudhookDialog } from \"../dialog-manage-cloudhook/show-dialog-manage-cloudhook\";\n\nexport class CloudWebhooks extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public cloudStatus?: CloudStatusLoggedIn;\n  @property() private _cloudHooks?: { [webhookId: string]: CloudWebhook };\n  @property() private _localHooks?: Webhook[];\n  @property() private _progress: string[];\n\n  constructor() {\n    super();\n    this._progress = [];\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._fetchData();\n  }\n\n  protected render() {\n    return html`\n      ${this.renderStyle()}\n      <ha-card\n        header=${this.hass!.localize(\n          \"ui.panel.config.cloud.account.webhooks.title\"\n        )}\n      >\n        <div class=\"card-content\">\n          ${this.hass!.localize(\"ui.panel.config.cloud.account.webhooks.info\")}\n          ${this._renderBody()}\n\n          <div class=\"footer\">\n            <a href=\"https://www.nabucasa.com/config/webhooks\" target=\"_blank\">\n              ${this.hass!.localize(\n                \"ui.panel.config.cloud.account.webhooks.link_learn_more\"\n              )}\n            </a>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    if (changedProps.has(\"cloudStatus\") && this.cloudStatus) {\n      this._cloudHooks = this.cloudStatus.prefs.cloudhooks || {};\n    }\n  }\n\n  private _renderBody() {\n    if (!this.cloudStatus || !this._localHooks || !this._cloudHooks) {\n      return html`\n        <div class=\"body-text\">\n          ${this.hass!.localize(\n            \"ui.panel.config.cloud.account.webhooks.loading\"\n          )}\n        </div>\n      `;\n    }\n\n    if (this._localHooks.length === 0) {\n      return html`\n        <div class=\"body-text\">\n          ${this.hass!.localize(\n            \"ui.panel.config.cloud.account.webhooks.no_hooks_yet\"\n          )}\n          <a href=\"/config/integrations\"\n            >${this.hass!.localize(\n              \"ui.panel.config.cloud.account.webhooks.no_hooks_yet_link_integration\"\n            )}</a\n          >\n          ${this.hass!.localize(\n            \"ui.panel.config.cloud.account.webhooks.no_hooks_yet2\"\n          )}\n          <a href=\"/config/automation/new\"\n            >${this.hass!.localize(\n              \"ui.panel.config.cloud.account.webhooks.no_hooks_yet_link_automation\"\n            )}</a\n          >.\n        </div>\n      `;\n    }\n\n    return this._localHooks.map(\n      (entry) => html`\n        <div class=\"webhook\" .entry=\"${entry}\">\n          <paper-item-body two-line>\n            <div>\n              ${entry.name}\n              ${entry.domain === entry.name.toLowerCase()\n                ? \"\"\n                : ` (${entry.domain})`}\n            </div>\n            <div secondary>${entry.webhook_id}</div>\n          </paper-item-body>\n          ${this._progress.includes(entry.webhook_id)\n            ? html`\n                <div class=\"progress\">\n                  <paper-spinner active></paper-spinner>\n                </div>\n              `\n            : this._cloudHooks![entry.webhook_id]\n            ? html`\n                <mwc-button @click=\"${this._handleManageButton}\">\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.account.webhooks.manage\"\n                  )}\n                </mwc-button>\n              `\n            : html`\n                <ha-switch @click=\"${this._enableWebhook}\"></ha-switch>\n              `}\n        </div>\n      `\n    );\n  }\n\n  private _showDialog(webhookId: string) {\n    const webhook = this._localHooks!.find(\n      (ent) => ent.webhook_id === webhookId\n    )!;\n    const cloudhook = this._cloudHooks![webhookId];\n    showManageCloudhookDialog(this, {\n      webhook,\n      cloudhook,\n      disableHook: () => this._disableWebhook(webhookId),\n    });\n  }\n\n  private _handleManageButton(ev: MouseEvent) {\n    const entry = (ev.currentTarget as any).parentElement.entry as Webhook;\n    this._showDialog(entry.webhook_id);\n  }\n\n  private async _enableWebhook(ev: MouseEvent) {\n    const entry = (ev.currentTarget as any).parentElement.entry;\n    this._progress = [...this._progress, entry.webhook_id];\n    let updatedWebhook;\n\n    try {\n      updatedWebhook = await createCloudhook(this.hass!, entry.webhook_id);\n    } catch (err) {\n      alert((err as WebhookError).message);\n      return;\n    } finally {\n      this._progress = this._progress.filter((wid) => wid !== entry.webhook_id);\n    }\n\n    this._cloudHooks = {\n      ...this._cloudHooks,\n      [entry.webhook_id]: updatedWebhook,\n    };\n\n    // Only open dialog if we're not also enabling others, otherwise it's confusing\n    if (this._progress.length === 0) {\n      this._showDialog(entry.webhook_id);\n    }\n  }\n\n  private async _disableWebhook(webhookId: string) {\n    this._progress = [...this._progress, webhookId];\n    try {\n      await deleteCloudhook(this.hass!, webhookId!);\n    } catch (err) {\n      alert(\n        `${this.hass!.localize(\n          \"ui.panel.config.cloud.account.webhooks.disable_hook_error_msg\"\n        )} ${(err as WebhookError).message}`\n      );\n      return;\n    } finally {\n      this._progress = this._progress.filter((wid) => wid !== webhookId);\n    }\n\n    // Remove cloud related parts from entry.\n    const { [webhookId]: disabledHook, ...newHooks } = this._cloudHooks!;\n    this._cloudHooks = newHooks;\n  }\n\n  private async _fetchData() {\n    this._localHooks = this.hass!.config.components.includes(\"webhook\")\n      ? await fetchWebhooks(this.hass!)\n      : [];\n  }\n\n  private renderStyle() {\n    return html`\n      <style>\n        .body-text {\n          padding: 8px 0;\n        }\n        .webhook {\n          display: flex;\n          padding: 4px 0;\n        }\n        .progress {\n          margin-right: 16px;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .footer {\n          padding-top: 16px;\n        }\n        .body-text a,\n        .footer a {\n          color: var(--primary-color);\n        }\n      </style>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-webhooks\": CloudWebhooks;\n  }\n}\n\ncustomElements.define(\"cloud-webhooks\", CloudWebhooks);\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { Webhook } from \"../../../../data/webhook\";\nimport { CloudWebhook } from \"../../../../data/cloud\";\n\nexport interface WebhookDialogParams {\n  webhook: Webhook;\n  cloudhook: CloudWebhook;\n  disableHook: () => void;\n}\n\nexport const showManageCloudhookDialog = (\n  element: HTMLElement,\n  webhookDialogParams: WebhookDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-manage-cloudhook\",\n    dialogImport: () =>\n      import(\n        /* webpackChunkName: \"cloud-webhook-manage-dialog\" */ \"./dialog-manage-cloudhook\"\n      ),\n    dialogParams: webhookDialogParams,\n  });\n};\n","import { HomeAssistant } from \"../types\";\n\nexport interface Webhook {\n  webhook_id: string;\n  domain: string;\n  name: string;\n}\n\nexport const fetchWebhooks = (hass: HomeAssistant): Promise<Webhook[]> =>\n  hass.callWS({\n    type: \"webhook/list\",\n  });\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  CSSResult,\n  css,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-switch\";\n\n// tslint:disable-next-line: no-duplicate-imports\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { CloudStatusLoggedIn, updateCloudPref } from \"../../../../data/cloud\";\nimport { syncCloudAlexaEntities } from \"../../../../data/alexa\";\n\nexport class CloudAlexaPref extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public cloudStatus?: CloudStatusLoggedIn;\n  @property() private _syncing = false;\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const { alexa_enabled, alexa_report_state } = this.cloudStatus!.prefs;\n\n    return html`\n      <ha-card\n        header=${this.hass!.localize(\n          \"ui.panel.config.cloud.account.alexa.title\"\n        )}\n      >\n        <div class=\"switch\">\n          <ha-switch\n            .checked=${alexa_enabled}\n            @change=${this._enabledToggleChanged}\n          ></ha-switch>\n        </div>\n        <div class=\"card-content\">\n          ${this.hass!.localize(\"ui.panel.config.cloud.account.alexa.info\")}\n          <ul>\n            <li>\n              <a\n                href=\"https://skills-store.amazon.com/deeplink/dp/B0772J1QKB?deviceType=app\"\n                target=\"_blank\"\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.cloud.account.alexa.enable_ha_skill\"\n                )}\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.nabucasa.com/config/amazon_alexa/\"\n                target=\"_blank\"\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.cloud.account.alexa.config_documentation\"\n                )}\n              </a>\n            </li>\n          </ul>\n          ${alexa_enabled\n            ? html`\n                <div class=\"state-reporting\">\n                  <h3>\n                    ${this.hass!.localize(\n                      \"ui.panel.config.cloud.account.alexa.enable_state_reporting\"\n                    )}\n                  </h3>\n                  <div class=\"state-reporting-switch\">\n                    <ha-switch\n                      .checked=${alexa_report_state}\n                      @change=${this._reportToggleChanged}\n                    ></ha-switch>\n                  </div>\n                </div>\n                <p>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.account.alexa.info_state_reporting\"\n                  )}\n                </p>\n              `\n            : \"\"}\n        </div>\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._handleSync} .disabled=${this._syncing}>\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.account.alexa.sync_entities\"\n            )}\n          </mwc-button>\n          <div class=\"spacer\"></div>\n          <a href=\"/config/cloud/alexa\">\n            <mwc-button\n              >${this.hass!.localize(\n                \"ui.panel.config.cloud.account.alexa.manage_entities\"\n              )}</mwc-button\n            >\n          </a>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private async _handleSync() {\n    this._syncing = true;\n    try {\n      await syncCloudAlexaEntities(this.hass!);\n    } catch (err) {\n      alert(\n        `${this.hass!.localize(\n          \"ui.panel.config.cloud.account.alexa.sync_entities_error\"\n        )} ${err.body.message}`\n      );\n    } finally {\n      this._syncing = false;\n    }\n  }\n\n  private async _enabledToggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n    try {\n      await updateCloudPref(this.hass!, { alexa_enabled: toggle.checked! });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _reportToggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n    try {\n      await updateCloudPref(this.hass!, {\n        alexa_report_state: toggle.checked!,\n      });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(\n        `${this.hass!.localize(\n          \"ui.panel.config.cloud.account.alexa.state_reporting_error\",\n          \"enable_disable\",\n          this.hass!.localize(\n            toggle.checked\n              ? \"ui.panel.config.cloud.account.alexa.enable\"\n              : \"ui.panel.config.cloud.account.alexa.disable\"\n          )\n        )} ${err.message}`\n      );\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      .switch {\n        position: absolute;\n        right: 24px;\n        top: 32px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n      .state-reporting {\n        display: flex;\n        margin-top: 1.5em;\n      }\n      .state-reporting + p {\n        margin-top: 0.5em;\n      }\n      .state-reporting h3 {\n        flex-grow: 1;\n        margin: 0;\n      }\n      .state-reporting-switch {\n        margin-top: 0.25em;\n        margin-right: 7px;\n        margin-left: 0.5em;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-alexa-pref\": CloudAlexaPref;\n  }\n}\n\ncustomElements.define(\"cloud-alexa-pref\", CloudAlexaPref);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  CSSResult,\n  css,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"../../../../components/buttons/ha-call-api-button\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-switch\";\n\n// tslint:disable-next-line\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { CloudStatusLoggedIn, updateCloudPref } from \"../../../../data/cloud\";\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { showSaveSuccessToast } from \"../../../../util/toast-saved-success\";\n\nexport class CloudGooglePref extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public cloudStatus?: CloudStatusLoggedIn;\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const {\n      google_enabled,\n      google_report_state,\n      google_secure_devices_pin,\n    } = this.cloudStatus.prefs;\n\n    return html`\n      <ha-card\n        header=${this.hass!.localize(\n          \"ui.panel.config.cloud.account.google.title\"\n        )}\n      >\n        <div class=\"switch\">\n          <ha-switch\n            id=\"google_enabled\"\n            .checked=\"${google_enabled}\"\n            @change=\"${this._enableToggleChanged}\"\n          ></ha-switch>\n        </div>\n        <div class=\"card-content\">\n          ${this.hass!.localize(\"ui.panel.config.cloud.account.google.info\")}\n          <ul>\n            <li>\n              <a\n                href=\"https://assistant.google.com/services/a/uid/00000091fd5fb875?hl=en-US\"\n                target=\"_blank\"\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.cloud.account.google.enable_ha_skill\"\n                )}\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.nabucasa.com/config/google_assistant/\"\n                target=\"_blank\"\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.cloud.account.google.config_documentation\"\n                )}\n              </a>\n            </li>\n          </ul>\n          ${google_enabled\n            ? html`\n                <div class=\"state-reporting\">\n                  <h3>\n                    ${this.hass!.localize(\n                      \"ui.panel.config.cloud.account.google.enable_state_reporting\"\n                    )}\n                  </h3>\n                  <div class=\"state-reporting-switch\">\n                    <ha-switch\n                      .checked=${google_report_state}\n                      @change=${this._reportToggleChanged}\n                    ></ha-switch>\n                  </div>\n                </div>\n                <p>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.account.google.info_state_reporting\"\n                  )}\n                </p>\n                <div class=\"secure_devices\">\n                  <h3>\n                    ${this.hass!.localize(\n                      \"ui.panel.config.cloud.account.google.security_devices\"\n                    )}\n                  </h3>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.account.google.enter_pin_info\"\n                  )}\n                  <paper-input\n                    label=\"${this.hass!.localize(\n                      \"ui.panel.config.cloud.account.google.devices_pin\"\n                    )}\"\n                    id=\"google_secure_devices_pin\"\n                    placeholder=\"${this.hass!.localize(\n                      \"ui.panel.config.cloud.account.google.enter_pin_hint\"\n                    )}\"\n                    .value=${google_secure_devices_pin || \"\"}\n                    @change=\"${this._pinChanged}\"\n                  ></paper-input>\n                </div>\n              `\n            : \"\"}\n        </div>\n        <div class=\"card-actions\">\n          <ha-call-api-button\n            .hass=\"${this.hass}\"\n            .disabled=\"${!google_enabled}\"\n            @hass-api-called=${this._syncEntitiesCalled}\n            path=\"cloud/google_actions/sync\"\n          >\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.account.google.sync_entities\"\n            )}\n          </ha-call-api-button>\n          <div class=\"spacer\"></div>\n          <a href=\"/config/cloud/google-assistant\">\n            <mwc-button\n              >${this.hass!.localize(\n                \"ui.panel.config.cloud.account.google.manage_entities\"\n              )}</mwc-button\n            >\n          </a>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _syncEntitiesCalled(ev: CustomEvent) {\n    if (!ev.detail.success && ev.detail.response.status_code === 404) {\n      alert(\n        this.hass!.localize(\n          \"ui.panel.config.cloud.account.google.sync_entities_404_message\"\n        )\n      );\n    }\n  }\n\n  private async _enableToggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n    try {\n      await updateCloudPref(this.hass!, { [toggle.id]: toggle.checked! });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _reportToggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n    try {\n      await updateCloudPref(this.hass!, {\n        google_report_state: toggle.checked!,\n      });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(\n        `Unable to ${toggle.checked ? \"enable\" : \"disable\"} report state. ${\n          err.message\n        }`\n      );\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _pinChanged(ev) {\n    const input = ev.target as PaperInputElement;\n    try {\n      await updateCloudPref(this.hass!, {\n        [input.id]: input.value || null,\n      });\n      showSaveSuccessToast(this, this.hass!);\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(\n        `${this.hass!.localize(\n          \"ui.panel.config.cloud.account.google.enter_pin_error\"\n        )} ${err.message}`\n      );\n      input.value = this.cloudStatus!.prefs.google_secure_devices_pin;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      .switch {\n        position: absolute;\n        right: 24px;\n        top: 32px;\n      }\n      ha-call-api-button {\n        color: var(--primary-color);\n        font-weight: 500;\n      }\n      .secure_devices {\n        padding-top: 8px;\n      }\n      paper-input {\n        width: 250px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n      .state-reporting {\n        display: flex;\n        margin-top: 1.5em;\n      }\n      .state-reporting + p {\n        margin-top: 0.5em;\n      }\n      h3 {\n        margin: 0 0 8px 0;\n      }\n      .state-reporting h3 {\n        flex-grow: 1;\n        margin: 0;\n      }\n      .state-reporting-switch {\n        margin-top: 0.25em;\n        margin-right: 7px;\n        margin-left: 0.5em;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-google-pref\": CloudGooglePref;\n  }\n}\n\ncustomElements.define(\"cloud-google-pref\", CloudGooglePref);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  CSSResult,\n  css,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-item/paper-item-body\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-switch\";\n\n// tslint:disable-next-line\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport {\n  connectCloudRemote,\n  disconnectCloudRemote,\n  CloudStatusLoggedIn,\n} from \"../../../../data/cloud\";\nimport { showCloudCertificateDialog } from \"../dialog-cloud-certificate/show-dialog-cloud-certificate\";\n\n@customElement(\"cloud-remote-pref\")\nexport class CloudRemotePref extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public cloudStatus?: CloudStatusLoggedIn;\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const {\n      remote_connected,\n      remote_domain,\n      remote_certificate,\n    } = this.cloudStatus;\n\n    if (!remote_certificate) {\n      return html`\n        <ha-card\n          header=${this.hass!.localize(\n            \"ui.panel.config.cloud.account.remote.title\"\n          )}\n        >\n          <div class=\"preparing\">\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.account.remote.access_is_being_prepared\"\n            )}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    return html`\n      <ha-card\n        header=${this.hass!.localize(\n          \"ui.panel.config.cloud.account.remote.title\"\n        )}\n      >\n        <div class=\"switch\">\n          <ha-switch\n            .checked=\"${remote_connected}\"\n            @change=\"${this._toggleChanged}\"\n          ></ha-switch>\n        </div>\n        <div class=\"card-content\">\n          ${this.hass!.localize(\"ui.panel.config.cloud.account.remote.info\")}\n          ${remote_connected\n            ? this.hass!.localize(\n                \"ui.panel.config.cloud.account.remote.instance_is_available\"\n              )\n            : this.hass!.localize(\n                \"ui.panel.config.cloud.account.remote.instance_will_be_available\"\n              )}\n          <a href=\"https://${remote_domain}\" target=\"_blank\" class=\"break-word\">\n            https://${remote_domain}</a\n          >.\n        </div>\n        <div class=\"card-actions\">\n          <a href=\"https://www.nabucasa.com/config/remote/\" target=\"_blank\">\n            <mwc-button\n              >${this.hass!.localize(\n                \"ui.panel.config.cloud.account.remote.link_learn_how_it_works\"\n              )}</mwc-button\n            >\n          </a>\n          ${remote_certificate\n            ? html`\n                <div class=\"spacer\"></div>\n                <mwc-button @click=${this._openCertInfo}>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.account.remote.certificate_info\"\n                  )}\n                </mwc-button>\n              `\n            : \"\"}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _openCertInfo() {\n    showCloudCertificateDialog(this, {\n      certificateInfo: this.cloudStatus!.remote_certificate!,\n    });\n  }\n\n  private async _toggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n\n    try {\n      if (toggle.checked) {\n        await connectCloudRemote(this.hass!);\n      } else {\n        await disconnectCloudRemote(this.hass!);\n      }\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(err.message);\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .preparing {\n        padding: 0 16px 16px;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      .break-word {\n        overflow-wrap: break-word;\n      }\n      .switch {\n        position: absolute;\n        right: 24px;\n        top: 32px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-remote-pref\": CloudRemotePref;\n  }\n}\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { CertificateInformation } from \"../../../../data/cloud\";\n\nexport interface CloudCertificateParams {\n  certificateInfo: CertificateInformation;\n}\n\nexport const showCloudCertificateDialog = (\n  element: HTMLElement,\n  webhookDialogParams: CloudCertificateParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-cloud-certificate\",\n    dialogImport: () =>\n      import(\n        /* webpackChunkName: \"dialog-cloud-certificate\" */ \"./dialog-cloud-certificate\"\n      ),\n    dialogParams: webhookDialogParams,\n  });\n};\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/buttons/ha-call-api-button\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../resources/ha-style\";\nimport \"../../ha-config-section\";\nimport \"./cloud-webhooks\";\nimport \"./cloud-alexa-pref\";\nimport \"./cloud-google-pref\";\nimport \"./cloud-remote-pref\";\n\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\nimport { fetchCloudSubscriptionInfo } from \"../../../../data/cloud\";\n\nimport formatDateTime from \"../../../../common/datetime/format_date_time\";\nimport LocalizeMixin from \"../../../../mixins/localize-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass CloudAccount extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        [slot=\"introduction\"] {\n          margin: -1em 0;\n        }\n        [slot=\"introduction\"] a {\n          color: var(--primary-color);\n        }\n        .content {\n          padding-bottom: 24px;\n          direction: ltr;\n        }\n        .account-row {\n          display: flex;\n          padding: 0 16px;\n        }\n        mwc-button {\n          align-self: center;\n        }\n        .soon {\n          font-style: italic;\n          margin-top: 24px;\n          text-align: center;\n        }\n        .nowrap {\n          white-space: nowrap;\n        }\n        .wrap {\n          white-space: normal;\n        }\n        .status {\n          text-transform: capitalize;\n          padding: 16px;\n        }\n        a {\n          color: var(--primary-color);\n        }\n      </style>\n      <hass-subpage\n        showBackButton=\"[[!isWide]]\"\n        header=\"[[localize('ui.panel.config.cloud.caption')]]\"\n      >\n        <div class=\"content\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\"\n              >[[localize('ui.panel.config.cloud.caption')]]</span\n            >\n            <div slot=\"introduction\">\n              <p>\n                [[localize('ui.panel.config.cloud.account.thank_you_note')]]\n              </p>\n            </div>\n\n            <ha-card\n              header=\"[[localize('ui.panel.config.cloud.account.nabu_casa_account')]]\"\n            >\n              <div class=\"account-row\">\n                <paper-item-body two-line=\"\">\n                  [[cloudStatus.email]]\n                  <div secondary class=\"wrap\">\n                    [[_formatSubscription(_subscription)]]\n                  </div>\n                </paper-item-body>\n              </div>\n\n              <div class=\"account-row\">\n                <paper-item-body\n                  >[[localize('ui.panel.config.cloud.account.connection_status')]]</paper-item-body\n                >\n                <div class=\"status\">[[cloudStatus.cloud]]</div>\n              </div>\n\n              <div class=\"card-actions\">\n                <a href=\"https://account.nabucasa.com\" target=\"_blank\"\n                  ><mwc-button\n                    >[[localize('ui.panel.config.cloud.account.manage_account')]]</mwc-button\n                  ></a\n                >\n                <mwc-button style=\"float: right\" on-click=\"handleLogout\"\n                  >[[localize('ui.panel.config.cloud.account.sign_out')]]</mwc-button\n                >\n              </div>\n            </ha-card>\n          </ha-config-section>\n\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\"\n              >[[localize('ui.panel.config.cloud.account.integrations')]]</span\n            >\n            <div slot=\"introduction\">\n              <p>\n                [[localize('ui.panel.config.cloud.account.integrations_introduction')]]\n              </p>\n              <p>\n                [[localize('ui.panel.config.cloud.account.integrations_introduction2')]]\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >[[localize('ui.panel.config.cloud.account.integrations_link_all_features')]]</a\n                >.\n              </p>\n            </div>\n\n            <cloud-remote-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-remote-pref>\n\n            <cloud-alexa-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-alexa-pref>\n\n            <cloud-google-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-google-pref>\n\n            <cloud-webhooks\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-webhooks>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      cloudStatus: Object,\n      _subscription: {\n        type: Object,\n        value: null,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._fetchSubscriptionInfo();\n  }\n\n  _computeRemoteConnected(connected) {\n    return connected\n      ? this.hass.localize(\"ui.panel.config.cloud.account.connected\")\n      : this.hass.localize(\"ui.panel.config.cloud.account.not_connected\");\n  }\n\n  async _fetchSubscriptionInfo() {\n    this._subscription = await fetchCloudSubscriptionInfo(this.hass);\n    if (\n      this._subscription.provider &&\n      this.cloudStatus &&\n      this.cloudStatus.cloud !== \"connected\"\n    ) {\n      this.fire(\"ha-refresh-cloud-status\");\n    }\n  }\n\n  handleLogout() {\n    this.hass\n      .callApi(\"post\", \"cloud/logout\")\n      .then(() => this.fire(\"ha-refresh-cloud-status\"));\n  }\n\n  _formatSubscription(subInfo) {\n    if (subInfo === null) {\n      return this.hass.localize(\n        \"ui.panel.config.cloud.account.fetching_subscription\"\n      );\n    }\n\n    let description = subInfo.human_description;\n\n    if (subInfo.plan_renewal_date) {\n      description = description.replace(\n        \"{periodEnd}\",\n        formatDateTime(\n          new Date(subInfo.plan_renewal_date * 1000),\n          this.hass.language\n        )\n      );\n    }\n\n    return description;\n  }\n}\n\ncustomElements.define(\"cloud-account\", CloudAccount);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-ripple/paper-ripple\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/buttons/ha-progress-button\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../resources/ha-style\";\n\nimport \"../../ha-config-section\";\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\nimport NavigateMixin from \"../../../../mixins/navigate-mixin\";\nimport \"../../../../components/ha-icon-next\";\nimport LocalizeMixin from \"../../../../mixins/localize-mixin\";\n/*\n * @appliesMixin NavigateMixin\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass CloudLogin extends LocalizeMixin(\n  NavigateMixin(EventsMixin(PolymerElement))\n) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 24px;\n          direction: ltr;\n        }\n        [slot=\"introduction\"] {\n          margin: -1em 0;\n        }\n        [slot=\"introduction\"] a {\n          color: var(--primary-color);\n        }\n        paper-item {\n          cursor: pointer;\n        }\n        ha-card {\n          overflow: hidden;\n        }\n        ha-card .card-header {\n          margin-bottom: -8px;\n        }\n        h1 {\n          @apply --paper-font-headline;\n          margin: 0;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        [hidden] {\n          display: none;\n        }\n        .flash-msg {\n          padding-right: 44px;\n        }\n        .flash-msg paper-icon-button {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n          color: var(--secondary-text-color);\n        }\n      </style>\n      <hass-subpage\n        showBackButton=\"[[!isWide]]\"\n        header=\"[[localize('ui.panel.config.cloud.caption')]]\"\n      >\n        <div class=\"content\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\"\n              >[[localize('ui.panel.config.cloud.caption')]]</span\n            >\n            <div slot=\"introduction\">\n              <p>\n                [[localize('ui.panel.config.cloud.login.introduction')]]\n              </p>\n              <p>\n                [[localize('ui.panel.config.cloud.login.introduction2')]]\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >Nabu&nbsp;Casa,&nbsp;Inc</a\n                >\n                [[localize('ui.panel.config.cloud.login.introduction2a')]]\n              </p>\n              <p>\n                [[localize('ui.panel.config.cloud.login.introduction3')]]\n              </p>\n              <p>\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >[[localize('ui.panel.config.cloud.login.learn_more_link')]]</a\n                >\n              </p>\n            </div>\n\n            <ha-card hidden$=\"[[!flashMessage]]\">\n              <div class=\"card-content flash-msg\">\n                [[flashMessage]]\n                <paper-icon-button icon=\"hass:close\" on-click=\"_dismissFlash\"\n                  >[[localize('ui.panel.config.cloud.login.dismiss')]]</paper-icon-button\n                >\n                <paper-ripple id=\"flashRipple\" noink=\"\"></paper-ripple>\n              </div>\n            </ha-card>\n\n            <ha-card\n              header=\"[[localize('ui.panel.config.cloud.login.sign_in')]]\"\n            >\n              <div class=\"card-content\">\n                <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n                <paper-input\n                  label=\"[[localize('ui.panel.config.cloud.login.email')]]\"\n                  id=\"email\"\n                  type=\"email\"\n                  value=\"{{email}}\"\n                  on-keydown=\"_keyDown\"\n                  error-message=\"[[localize('ui.panel.config.cloud.login.email_error_msg')]]\"\n                ></paper-input>\n                <paper-input\n                  id=\"password\"\n                  label=\"[[localize('ui.panel.config.cloud.login.password')]]\"\n                  value=\"{{_password}}\"\n                  type=\"password\"\n                  on-keydown=\"_keyDown\"\n                  error-message=\"[[localize('ui.panel.config.cloud.login.password_error_msg')]]\"\n                ></paper-input>\n              </div>\n              <div class=\"card-actions\">\n                <ha-progress-button\n                  on-click=\"_handleLogin\"\n                  progress=\"[[_requestInProgress]]\"\n                  >[[localize('ui.panel.config.cloud.login.sign_in')]]</ha-progress-button\n                >\n                <button\n                  class=\"link\"\n                  hidden=\"[[_requestInProgress]]\"\n                  on-click=\"_handleForgotPassword\"\n                >\n                  [[localize('ui.panel.config.cloud.login.forgot_password')]]\n                </button>\n              </div>\n            </ha-card>\n\n            <ha-card>\n              <paper-item on-click=\"_handleRegister\">\n                <paper-item-body two-line=\"\">\n                  [[localize('ui.panel.config.cloud.login.start_trial')]]\n                  <div secondary=\"\">\n                    [[localize('ui.panel.config.cloud.login.trial_info')]]\n                  </div>\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            </ha-card>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      email: {\n        type: String,\n        notify: true,\n      },\n      _password: {\n        type: String,\n        value: \"\",\n      },\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      flashMessage: {\n        type: String,\n        notify: true,\n      },\n      _error: String,\n    };\n  }\n\n  static get observers() {\n    return [\"_inputChanged(email, _password)\"];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.flashMessage) {\n      // Wait for DOM to be drawn\n      requestAnimationFrame(() =>\n        requestAnimationFrame(() => this.$.flashRipple.simulatedRipple())\n      );\n    }\n  }\n\n  _inputChanged() {\n    this.$.email.invalid = false;\n    this.$.password.invalid = false;\n    this._error = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleLogin();\n      ev.preventDefault();\n    }\n  }\n\n  _handleLogin() {\n    let invalid = false;\n\n    if (!this.email || !this.email.includes(\"@\")) {\n      this.$.email.invalid = true;\n      this.$.email.focus();\n      invalid = true;\n    }\n\n    if (this._password.length < 8) {\n      this.$.password.invalid = true;\n\n      if (!invalid) {\n        invalid = true;\n        this.$.password.focus();\n      }\n    }\n\n    if (invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass\n      .callApi(\"post\", \"cloud/login\", {\n        email: this.email,\n        password: this._password,\n      })\n      .then(\n        () => {\n          this.fire(\"ha-refresh-cloud-status\");\n          this.setProperties({\n            email: \"\",\n            _password: \"\",\n          });\n        },\n        (err) => {\n          // Do this before setProperties because changing it clears errors.\n          this._password = \"\";\n\n          const errCode = err && err.body && err.body.code;\n          if (errCode === \"PasswordChangeRequired\") {\n            alert(\n              \"[[localize('ui.panel.config.cloud.login.alert_password_change_required')]]\"\n            );\n            this.navigate(\"/config/cloud/forgot-password\");\n            return;\n          }\n\n          const props = {\n            _requestInProgress: false,\n            _error:\n              err && err.body && err.body.message\n                ? err.body.message\n                : \"Unknown error\",\n          };\n\n          if (errCode === \"UserNotConfirmed\") {\n            props._error =\n              \"[[localize('ui.panel.config.cloud.login.alert_email_confirm_necessary')]]\";\n          }\n\n          this.setProperties(props);\n          this.$.email.focus();\n        }\n      );\n  }\n\n  _handleRegister() {\n    this.flashMessage = \"\";\n    this.navigate(\"/config/cloud/register\");\n  }\n\n  _handleForgotPassword() {\n    this.flashMessage = \"\";\n    this.navigate(\"/config/cloud/forgot-password\");\n  }\n\n  _dismissFlash() {\n    // give some time to let the ripple finish.\n    setTimeout(() => {\n      this.flashMessage = \"\";\n    }, 200);\n  }\n}\n\ncustomElements.define(\"cloud-login\", CloudLogin);\n","import \"./account/cloud-account\";\nimport \"./login/cloud-login\";\nimport {\n  HassRouterPage,\n  RouterOptions,\n} from \"../../../layouts/hass-router-page\";\nimport { property, customElement } from \"lit-element\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { navigate } from \"../../../common/navigate\";\nimport { CloudStatus } from \"../../../data/cloud\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { PolymerElement } from \"@polymer/polymer\";\n\nconst LOGGED_IN_URLS = [\"account\", \"google-assistant\", \"alexa\"];\nconst NOT_LOGGED_IN_URLS = [\"login\", \"register\", \"forgot-password\"];\n\n@customElement(\"ha-config-cloud\")\nclass HaConfigCloud extends HassRouterPage {\n  @property() public hass!: HomeAssistant;\n  @property() public isWide!: boolean;\n  @property() public narrow!: boolean;\n  @property() public route!: Route;\n  @property() public cloudStatus!: CloudStatus;\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"login\",\n    showLoading: true,\n    initialLoad: () => this._cloudStatusLoaded,\n    // Guard the different pages based on if we're logged in.\n    beforeRender: (page: string) => {\n      if (this.cloudStatus.logged_in) {\n        if (!LOGGED_IN_URLS.includes(page)) {\n          return \"account\";\n        }\n      } else {\n        if (!NOT_LOGGED_IN_URLS.includes(page)) {\n          return \"login\";\n        }\n      }\n      return undefined;\n    },\n    routes: {\n      login: {\n        tag: \"cloud-login\",\n      },\n      register: {\n        tag: \"cloud-register\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"cloud-register\" */ \"./register/cloud-register\"\n          ),\n      },\n      \"forgot-password\": {\n        tag: \"cloud-forgot-password\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"cloud-forgot-password\" */ \"./forgot-password/cloud-forgot-password\"\n          ),\n      },\n      account: {\n        tag: \"cloud-account\",\n      },\n      \"google-assistant\": {\n        tag: \"cloud-google-assistant\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"cloud-google-assistant\" */ \"./google-assistant/cloud-google-assistant\"\n          ),\n      },\n      alexa: {\n        tag: \"cloud-alexa\",\n        load: () =>\n          import(/* webpackChunkName: \"cloud-alexa\" */ \"./alexa/cloud-alexa\"),\n      },\n    },\n  };\n\n  @property() private _flashMessage = \"\";\n  @property() private _loginEmail = \"\";\n  private _resolveCloudStatusLoaded!: () => void;\n  private _cloudStatusLoaded = new Promise((resolve) => {\n    this._resolveCloudStatusLoaded = resolve;\n  });\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"cloud-done\", (ev) => {\n      this._flashMessage = (ev as any).detail.flashMessage;\n      navigate(this, \"/config/cloud/login\");\n    });\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"cloudStatus\")) {\n      const oldStatus = changedProps.get(\"cloudStatus\") as\n        | CloudStatus\n        | undefined;\n      if (oldStatus === undefined) {\n        this._resolveCloudStatusLoaded();\n      } else if (oldStatus.logged_in !== this.cloudStatus.logged_in) {\n        navigate(this, this.route.prefix, true);\n      }\n    }\n  }\n\n  protected createElement(tag: string) {\n    const el = super.createElement(tag);\n    el.addEventListener(\"email-changed\", (ev) => {\n      this._loginEmail = (ev as PolymerChangedEvent<string>).detail.value;\n    });\n    el.addEventListener(\"flash-message-changed\", (ev) => {\n      this._flashMessage = (ev as PolymerChangedEvent<string>).detail.value;\n    });\n    return el;\n  }\n\n  protected updatePageEl(el) {\n    // We are not going to update if the current page if we are not logged in\n    // and the current page requires being logged in. Happens when we log out.\n    if (\n      this.cloudStatus &&\n      !this.cloudStatus.logged_in &&\n      LOGGED_IN_URLS.includes(this._currentPage)\n    ) {\n      return;\n    }\n\n    if (\"setProperties\" in el) {\n      // As long as we have Polymer pages\n      (el as PolymerElement).setProperties({\n        hass: this.hass,\n        email: this._loginEmail,\n        isWide: this.isWide,\n        cloudStatus: this.cloudStatus,\n        flashMessage: this._flashMessage,\n      });\n    } else {\n      el.hass = this.hass;\n      el.email = this._loginEmail;\n      el.isWide = this.isWide;\n      el.narrow = this.narrow;\n      el.cloudStatus = this.cloudStatus;\n      el.flashMessage = this._flashMessage;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-cloud\": HaConfigCloud;\n  }\n}\n"],"sourceRoot":""}