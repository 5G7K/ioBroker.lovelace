{"version":3,"sources":["webpack:///./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js","webpack:///./node_modules/@polymer/paper-spinner/paper-spinner.js"],"names":["Polymer","_template","html","is","behaviors","AppLayoutBehavior","properties","hasScrollingRegion","type","Boolean","value","reflectToAttribute","observers","header","dom","$","headerSlot","getDistributedNodes","_updateLayoutStates","isAttached","wrapper","classList","remove","scrollTarget","contentContainer","ownerDocument","documentElement","headerHeight","offsetHeight","requestAnimationFrame","rect","getBoundingClientRect","rightOffset","document","clientWidth","right","style","left","bind","containerStyle","fixed","condenses","marginTop","paddingTop","template","setAttribute","PaperSpinnerBehavior"],"mappings":"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","file":"vendors~panel-dev-template.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {AppLayoutBehavior} from '../app-layout-behavior/app-layout-behavior.js';\n\n/**\napp-header-layout is a wrapper element that positions an app-header and other\ncontent. This element uses the document scroll by default, but it can also\ndefine its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of\nits container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n@group App Elements\n@element app-header-layout\n@demo app-header-layout/demo/simple.html Simple Demo\n@demo app-header-layout/demo/scrolling-region.html Scrolling Region\n@demo app-header-layout/demo/music.html Music Demo\n@demo app-header-layout/demo/footer.html Footer Demo\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n        position: relative;\n        z-index: 0;\n      }\n\n      #wrapper ::slotted([slot=header]) {\n        @apply --layout-fixed-top;\n        z-index: 1;\n      }\n\n      #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) {\n        height: 100%;\n      }\n\n      :host([has-scrolling-region]) #wrapper ::slotted([slot=header]) {\n        position: absolute;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) #wrapper #contentContainer {\n        @apply --layout-fit;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n        position: relative;\n      }\n\n      :host([fullbleed]) {\n        @apply --layout-vertical;\n        @apply --layout-fit;\n      }\n\n      :host([fullbleed]) #wrapper,\n      :host([fullbleed]) #wrapper #contentContainer {\n        @apply --layout-vertical;\n        @apply --layout-flex;\n      }\n\n      #contentContainer {\n        /* Create a stacking context here so that all children appear below the header. */\n        position: relative;\n        z-index: 0;\n      }\n\n      @media print {\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          overflow-y: visible;\n        }\n      }\n\n    </style>\n\n    <div id=\"wrapper\" class=\"initializing\">\n      <slot id=\"headerSlot\" name=\"header\"></slot>\n\n      <div id=\"contentContainer\">\n        <slot></slot>\n      </div>\n    </div>\n`,\n\n  is: 'app-header-layout',\n  behaviors: [AppLayoutBehavior],\n\n  properties: {\n    /**\n     * If true, the current element will have its own scrolling region.\n     * Otherwise, it will use the document scroll to control the header.\n     */\n    hasScrollingRegion: {type: Boolean, value: false, reflectToAttribute: true}\n  },\n\n  observers: ['resetLayout(isAttached, hasScrollingRegion)'],\n\n  /**\n   * A reference to the app-header element.\n   *\n   * @property header\n   */\n  get header() {\n    return dom(this.$.headerSlot).getDistributedNodes()[0];\n  },\n\n  _updateLayoutStates: function() {\n    var header = this.header;\n    if (!this.isAttached || !header) {\n      return;\n    }\n    // Remove the initializing class, which staticly positions the header and\n    // the content until the height of the header can be read.\n    this.$.wrapper.classList.remove('initializing');\n    // Update scroll target.\n    header.scrollTarget = this.hasScrollingRegion ?\n        this.$.contentContainer :\n        this.ownerDocument.documentElement;\n    // Get header height here so that style reads are batched together before\n    // style writes (i.e. getBoundingClientRect() below).\n    var headerHeight = header.offsetHeight;\n    // Update the header position.\n    if (!this.hasScrollingRegion) {\n      requestAnimationFrame(function() {\n        var rect = this.getBoundingClientRect();\n        var rightOffset = document.documentElement.clientWidth - rect.right;\n        header.style.left = rect.left + 'px';\n        header.style.right = rightOffset + 'px';\n      }.bind(this));\n    } else {\n      header.style.left = '';\n      header.style.right = '';\n    }\n    // Update the content container position.\n    var containerStyle = this.$.contentContainer.style;\n    if (header.fixed && !header.condenses && this.hasScrollingRegion) {\n      // If the header size does not change and we're using a scrolling region,\n      // exclude the header area from the scrolling region so that the header\n      // doesn't overlap the scrollbar.\n      containerStyle.marginTop = headerHeight + 'px';\n      containerStyle.paddingTop = '';\n    } else {\n      containerStyle.paddingTop = headerHeight + 'px';\n      containerStyle.marginTop = '';\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/color.js';\nimport './paper-spinner-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperSpinnerBehavior} from './paper-spinner-behavior.js';\n\nconst template = html`\n  <style include=\"paper-spinner-styles\"></style>\n\n  <div id=\"spinnerContainer\" class-name=\"[[__computeContainerClasses(active, __coolingDown)]]\" on-animationend=\"__reset\" on-webkit-animation-end=\"__reset\">\n    <div class=\"spinner-layer layer-1\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-2\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-3\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-4\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design: [Progress &\nactivity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a multiple color material design circular spinner.\n\n    <paper-spinner active></paper-spinner>\n\nThe default spinner cycles between four layers of colors; by default they are\nblue, red, yellow and green. It can be customized to cycle between four\ndifferent colors. Use <paper-spinner-lite> for single color spinners.\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If\nnot provided, it defaults to 'loading'. Empty alt can be provided to mark the\nelement as decorative if alternative content is provided in another form (e.g. a\ntext block following the spinner).\n\n    <paper-spinner alt=\"Loading contacts list\" active></paper-spinner>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-layer-1-color` | Color of the first spinner rotation | `--google-blue-500`\n`--paper-spinner-layer-2-color` | Color of the second spinner rotation | `--google-red-500`\n`--paper-spinner-layer-3-color` | Color of the third spinner rotation | `--google-yellow-500`\n`--paper-spinner-layer-4-color` | Color of the fourth spinner rotation | `--google-green-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n@group Paper Elements\n@element paper-spinner\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-spinner',\n\n  behaviors: [PaperSpinnerBehavior]\n});\n"],"sourceRoot":""}