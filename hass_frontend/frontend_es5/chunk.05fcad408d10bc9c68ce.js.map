{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-gauge-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiThemeSelectEditor","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","themes","Object","keys","hass","sort","html","_templateObject","label","localize","_changed","map","theme","_templateObject2","static","css","_templateObject3","ev","target","fireEvent","LitElement","cardConfigStruct","type","name","entity","unit","min","max","severity","HuiGaugeCardEditor","config","_useSeverity","_config","undefined","configElementStyle","_entity","_valueChanged","_name","_unit","_theme","_min","_max","_toggleSeverity","_severity","green","_severityChanged","yellow","red","_templateObject4","checked","assign","_defineProperty","configValue","Number","isNaN"],"mappings":"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","file":"chunk.05fcad408d10bc9c68ce.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../../../components/ha-switch\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { GaugeCardConfig, SeverityConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  name: \"string?\",\n  entity: \"string?\",\n  unit: \"string?\",\n  min: \"number?\",\n  max: \"number?\",\n  severity: \"object?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-gauge-card-editor\")\nexport class HuiGaugeCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GaugeCardConfig;\n\n  private _useSeverity?: boolean;\n\n  public setConfig(config: GaugeCardConfig): void {\n    config = cardConfigStruct(config);\n    this._useSeverity = !!config.severity;\n    this._config = config;\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _unit(): string {\n    return this._config!.unit || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  get _min(): number {\n    return this._config!.min || 0;\n  }\n\n  get _max(): number {\n    return this._config!.max || 100;\n  }\n\n  get _severity(): SeverityConfig | undefined {\n    return this._config!.severity || undefined;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          include-domains='[\"sensor\"]'\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.name\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._name}\"\n          .configValue=${\"name\"}\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.unit\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._unit}\"\n            .configValue=${\"unit\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            type=\"number\"\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.minimum\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._min}\"\n            .configValue=${\"min\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            type=\"number\"\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.maximum\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._max}\"\n            .configValue=${\"max\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <ha-switch\n          ?checked=\"${this._useSeverity !== false}\"\n          @change=\"${this._toggleSeverity}\"\n          >${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.gauge.severity.define\"\n          )}</ha-switch\n        >\n        ${this._useSeverity\n          ? html`\n            <div class=\"severity side-by-side\">\n              <paper-input\n                type=\"number\"\n                .label=\"${this.hass.localize(\n                  \"ui.panel.lovelace.editor.card.gauge.severity.green\"\n                )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            )})\"\n                .value=\"${this._severity ? this._severity.green : 0}\"\n                .configValue=${\"green\"}\n                @value-changed=\"${this._severityChanged}\"\n              ></paper-input>\n              <paper-input\n                type=\"number\"\n                .label=\"${this.hass.localize(\n                  \"ui.panel.lovelace.editor.card.gauge.severity.yellow\"\n                )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            )})\"\n                .value=\"${this._severity ? this._severity.yellow : 0}\"\n                .configValue=${\"yellow\"}\n                @value-changed=\"${this._severityChanged}\"\n              ></paper-input>\n              <paper-input\n                type=\"number\"\n                .label=\"${this.hass.localize(\n                  \"ui.panel.lovelace.editor.card.gauge.severity.red\"\n                )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            )})\"\n                .value=\"${this._severity ? this._severity.red : 0}\"\n                .configValue=${\"red\"}\n                @value-changed=\"${this._severityChanged}\"\n              ></paper-input>\n            </div>\n          </div>\n          `\n          : \"\"}\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .severity {\n        display: none;\n        width: 100%;\n        padding-left: 16px;\n        flex-direction: row;\n        flex-wrap: wrap;\n      }\n      .severity > * {\n        flex: 1 0 30%;\n        padding-right: 4px;\n      }\n      ha-switch[checked] ~ .severity {\n        display: flex;\n      }\n    `;\n  }\n\n  private _toggleSeverity(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    this._config.severity = target.checked\n      ? {\n          green: 0,\n          yellow: 0,\n          red: 0,\n        }\n      : undefined;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _severityChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    const severity = {\n      ...this._config.severity,\n      [target.configValue!]: Number(target.value),\n    };\n    this._config = {\n      ...this._config,\n      severity,\n    };\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-gauge-card-editor\": HuiGaugeCardEditor;\n  }\n}\n"],"sourceRoot":""}