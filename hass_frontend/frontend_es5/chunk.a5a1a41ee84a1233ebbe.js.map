{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-media-control-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","Object","index_es","types","entity-id","value","includes","icon","rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_8__","entity_id","HaEntityPicker","_super","_this","apply","this","arguments","_getStates","memoize_one__WEBPACK_IMPORTED_MODULE_6__","hass","domainFilter","entityFilter","states","entityIds","keys","filter","eid","substr","indexOf","sort","map","key","tslib__WEBPACK_IMPORTED_MODULE_0__","prototype","updated","changedProps","call","has","_opened","_hass","render","lit_element__WEBPACK_IMPORTED_MODULE_9__","templateObject_3","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","templateObject_1","length","templateObject_2","defineProperty","ev","detail","setTimeout","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_10__","templateObject_4","type","Boolean","attribute","customElements","define","cardConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_2__","entity","HuiMediaControlCardEditor","setConfig","config","_config","lit_element__WEBPACK_IMPORTED_MODULE_1__","_entity","target","configValue","_a","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"chunk.a5a1a41ee84a1233ebbe.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Clear\"\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Show entities\"\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { MediaControlCardConfig } from \"../../cards/hui-media-control-card\";\n\nimport \"../../../../components/entity/ha-entity-picker\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n});\n\n@customElement(\"hui-media-control-card-editor\")\nexport class HuiMediaControlCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MediaControlCardConfig;\n\n  public setConfig(config: MediaControlCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          domain-filter=\"media_player\"\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-media-control-card-editor\": HuiMediaControlCardEditor;\n  }\n}\n"],"sourceRoot":""}