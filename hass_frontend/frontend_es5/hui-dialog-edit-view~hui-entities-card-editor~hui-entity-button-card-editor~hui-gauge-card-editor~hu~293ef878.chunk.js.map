{"version":3,"sources":["webpack:///./src/panels/lovelace/components/hui-entity-editor.ts"],"names":["HuiEntityEditor","customElement","property","entities","html","map","entityConf","index","hass","entity","_valueChanged","_addEntity","ev","target","value","newConfigEntities","concat","fireEvent","splice","css","LitElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAWA;AAGA;AAIO,IAAMA,eAAb,cADCC,iEAAa,CAAC,mBAAD,CACd;AAAA,MAAaD,eAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,OAAaA,eAAb;AAAA;AAAA;AAAA,mBACGE,4DAAQ,EADX;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGGA,4DAAQ,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKE,kBAA0C;AAAA;;AACxC,YAAI,CAAC,KAAKC,QAAV,EAAoB;AAClB,iBAAOC,wDAAP;AACD;;AAED,eAAOA,wDAAP,qBAGM,KAAKD,QAAL,CAAcE,GAAd,CAAkB,UAACC,UAAD,EAAaC,KAAb,EAAuB;AACzC,iBAAOH,wDAAP,qBAEa,MAAI,CAACI,IAFlB,EAGcF,UAAU,CAACG,MAHzB,EAIcF,KAJd,EAKe,MAAI,CAACG,aALpB;AASD,SAVC,CAHN,EAee,KAAKF,IAfpB,EAgBiB,KAAKG,UAhBtB;AAoBD;AA9BH;AAAA;AAAA;AAAA,aAgCE,oBAAmBC,EAAnB,EAAoC;AAClC,YAAMC,MAAM,GAAGD,EAAE,CAACC,MAAlB;;AACA,YAAIA,MAAM,CAACC,KAAP,KAAiB,EAArB,EAAyB;AACvB;AACD;;AACD,YAAMC,iBAAiB,GAAG,KAAKZ,QAAL,CAAea,MAAf,CAAsB;AAC9CP,gBAAM,EAAEI,MAAM,CAACC;AAD+B,SAAtB,CAA1B;AAGAD,cAAM,CAACC,KAAP,GAAe,EAAf;AACAG,gFAAS,CAAC,IAAD,EAAO,kBAAP,EAA2B;AAAEd,kBAAQ,EAAEY;AAAZ,SAA3B,CAAT;AACD;AA1CH;AAAA;AAAA;AAAA,aA4CE,uBAAsBH,EAAtB,EAAuC;AACrC,YAAMC,MAAM,GAAGD,EAAE,CAACC,MAAlB;AACA,YAAME,iBAAiB,GAAG,KAAKZ,QAAL,CAAea,MAAf,EAA1B;;AAEA,YAAIH,MAAM,CAACC,KAAP,KAAiB,EAArB,EAAyB;AACvBC,2BAAiB,CAACG,MAAlB,CAAyBL,MAAM,CAACN,KAAhC,EAAwC,CAAxC;AACD,SAFD,MAEO;AACLQ,2BAAiB,CAACF,MAAM,CAACN,KAAR,CAAjB,qBACKQ,iBAAiB,CAACF,MAAM,CAACN,KAAR,CADtB;AAEEE,kBAAM,EAAEI,MAAM,CAACC;AAFjB;AAID;;AAEDG,gFAAS,CAAC,IAAD,EAAO,kBAAP,EAA2B;AAAEd,kBAAQ,EAAEY;AAAZ,SAA3B,CAAT;AACD;AA1DH;AAAA;AAAA;AAAA;AAAA,aA4DE,kBAA+B;AAC7B,eAAOI,uDAAP;AAKD;AAlEH;AAAA;AAAA,GAAqCC,sDAArC,E","file":"hui-dialog-edit-view~hui-entities-card-editor~hui-entity-button-card-editor~hui-gauge-card-editor~hu~293ef878.chunk.js","sourcesContent":["import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>Entities</h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <ha-entity-picker\n              .hass=\"${this.hass}\"\n              .value=\"${entityConf.entity}\"\n              .index=\"${index}\"\n              @change=\"${this._valueChanged}\"\n              allow-custom-entity\n            ></ha-entity-picker>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n"],"sourceRoot":""}