{"version":3,"sources":["webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/onboarding/onboarding-core-config.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/data/core.ts"],"names":["setupLeafletMap","_ref","regeneratorRuntime","mark","_callee","mapElement","darkMode","Leaflet","map","style","_args","arguments","wrap","_context","prev","next","length","undefined","parentNode","Error","__webpack_require__","e","then","t","bind","sent","Icon","Default","imagePath","document","createElement","setAttribute","appendChild","setView","tileLayer","concat","Browser","retina","attribution","subdomains","minZoom","maxZoom","addTo","abrupt","stop","_x","apply","this","customElement","LocationEditor","property","_leafletMap","location","fitZoom","html","_templateObject","changedProps","_get","_getPrototypeOf","prototype","call","_initMap","_updateMarker","_ignoreFitToMap","fitMap","shadowRoot","querySelector","_ref2","_this2","_mapEl","_slicedToArray","addEventListener","ev","_updateLocation","latlng","invalidateSize","lat","lng","fireEvent","bubbles","_this3","_locationMarker","setLatLng","marker","draggable","target","getLatLng","addLayer","remove","css","_templateObject2","LitElement","amsterdam","OnboardingCoreConfig","onboarding_core_config_templateObject","onboardingLocalize","hass","user","name","_working","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystemValue","_unitSystemChanged","_save","list","onboarding_core_config_get","onboarding_core_config_getPrototypeOf","setTimeout","focus","keyCode","inputElement","id","Object","keys","timezones","forEach","key","option","value","innerHTML","_name","_location","_elevation","_timeZone","_unitSystem","currentTarget","detail","values","callWS","type","latitude","longitude","Number","elevation","String","unit_system","time_zone","t0","alert","message","finish","_callee2","result","_context2","preventDefault","location_name","assign","onboardCoreConfigStep","onboarding_core_config_templateObject2"],"mappings":"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","file":"chunk.1f71a0511cef1ec4b64f.js","sourcesContent":["import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(\n    /* webpackChunkName: \"leaflet\" */ \"leaflet\"\n  )) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  Leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${Leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  ).addTo(map);\n\n  return [map, Leaflet];\n};\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport { Marker, Map, LeafletMouseEvent, DragEndEvent, LatLng } from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  public fitZoom = 16;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    this._leafletMap.setView(this.location, this.fitZoom);\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    this._updateMarker();\n    if (!this._ignoreFitToMap || this._ignoreFitToMap !== this.location) {\n      this.fitMap();\n    }\n    this._ignoreFitToMap = undefined;\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(this._mapEl);\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._updateLocation(ev.latlng)\n    );\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _updateLocation(latlng: LatLng) {\n    this.location = this._ignoreFitToMap = [latlng.lat, latlng.lng];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateMarker(): void {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      return;\n    }\n    this._locationMarker = this.Leaflet!.marker(this.location, {\n      draggable: true,\n    });\n    this._locationMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._updateLocation(ev.target.getLatLng())\n    );\n    this._leafletMap!.addLayer(this._locationMarker);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n            )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(\"FAIL\");\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n"],"sourceRoot":""}