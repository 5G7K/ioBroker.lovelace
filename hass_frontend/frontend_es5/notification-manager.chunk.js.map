{"version":3,"sources":["webpack:///./src/components/ha-toast.ts","webpack:///./src/managers/notification-manager.ts"],"names":["PaperToast","customElements","get","HaToast","_resizeListener","ev","classList","toggle","matches","_mediaq","window","matchMedia","addListener","removeListener","define","NotificationManager","property","query","message","action","duration","dismissable","toast","_toast","updateComplete","setAttribute","computeRTL","hass","_action","undefined","_noCancelOnOutsideClick","hide","show","text","html","buttonClicked","css","LitElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEA;;AACA,IAAMA,UAAU,GAAGC,cAAc,CAACC,GAAf,CAAmB,aAAnB,CAAnB;AAEO,IAAMC,OAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAC6B;AAAA;;AACzB;;AAEA,UAAI,CAAC,KAAKC,eAAV,EAA2B;AACzB,aAAKA,eAAL,GAAuB,UAACC,EAAD;AAAA,iBACrB,KAAI,CAACC,SAAL,CAAeC,MAAf,CAAsB,YAAtB,EAAoCF,EAAE,CAACG,OAAvC,CADqB;AAAA,SAAvB;;AAEA,aAAKC,OAAL,GAAeC,MAAM,CAACC,UAAP,CAAkB,mBAAlB,CAAf;AACD;;AACD,WAAKF,OAAL,CAAaG,WAAb,CAAyB,KAAKR,eAA9B;;AACA,WAAKA,eAAL,CAAqB,KAAKK,OAA1B;AACD;AAXH;AAAA;AAAA,2CAagC;AAC5B;;AACA,WAAKA,OAAL,CAAaI,cAAb,CAA4B,KAAKT,eAAjC;AACD;AAhBH;;AAAA;AAAA,EAA6BJ,UAA7B;AAyBAC,cAAc,CAACa,MAAf,CAAsB,UAAtB,EAAkCX,OAAlC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AASA;AAEA;CAEA;AACA;;IAeMY,mB;MAAAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;OAAAA,mB;;;mBACHC,4DAAQ,E;;;;;mBAERA,4DAAQ,E;;;;;mBACRA,4DAAQ,E;;;eAA8C,K;;;;mBAEtDC,yDAAK,CAAC,UAAD,C;;;;;;;;;gCAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,yBADF,QACEA,OADF,EAEEC,MAFF,QAEEA,MAFF,EAGEC,QAHF,QAGEA,QAHF,EAIEC,WAJF,QAIEA,WAJF;AAMMC,uBANN,GAMc,KAAKC,MANnB,EAOE;;AAPF,sBAQOD,KARP;AAAA;AAAA;AAAA;;AAAA;AAAA,yBASU,KAAKE,cATf;;AAAA;AAUIF,uBAAK,GAAG,KAAKC,MAAb;;AAVJ;AAYED,uBAAK,CAACG,YAAN,CAAmB,KAAnB,EAA0BC,2EAAU,CAAC,KAAKC,IAAN,CAAV,GAAwB,KAAxB,GAAgC,KAA1D;AACA,uBAAKC,OAAL,GAAeT,MAAM,IAAIU,SAAzB;AACA,uBAAKC,uBAAL,GACET,WAAW,KAAKQ,SAAhB,GAA4B,KAA5B,GAAoC,CAACR,WADvC;AAEAC,uBAAK,CAACS,IAAN;AACAT,uBAAK,CAACU,IAAN,CAAW;AACTC,wBAAI,EAAEf,OADG;AAETE,4BAAQ,EAAEA,QAAQ,KAAKS,SAAb,GAAyB,IAAzB,GAAgCT;AAFjC,mBAAX;;AAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;;;;;;;;;;;aAuBA,kBAA0C;AACxC,eAAOc,wDAAP,oBACsC,KAAKJ,uBAD3C,EAEM,KAAKF,OAAL,GACEM,wDADF,qBAGe,KAAKN,OAAL,CAAaK,IAH5B,EAIe,KAAKE,aAJpB,IAOE,EATR;AAYD;;;;aAED,yBAAwB;AACtB,aAAKZ,MAAL,CAAYQ,IAAZ;;AACA,YAAI,KAAKH,OAAT,EAAkB;AAChB,eAAKA,OAAL,CAAaT,MAAb;AACD;AACF;;;;;aAED,kBAA+B;AAC7B,eAAOiB,uDAAP;AAMD;;;GA5D+BC,sD;;AA+DlCpC,cAAc,CAACa,MAAf,CAAsB,sBAAtB,EAA8CC,mBAA9C,E","file":"notification-manager.chunk.js","sourcesContent":["import \"@polymer/paper-toast/paper-toast\";\n\n// tslint:disable-next-line\nconst PaperToast = customElements.get(\"paper-toast\");\n\nexport class HaToast extends PaperToast {\n  public connectedCallback() {\n    super.connectedCallback();\n\n    if (!this._resizeListener) {\n      this._resizeListener = (ev) =>\n        this.classList.toggle(\"fit-bottom\", ev.matches);\n      this._mediaq = window.matchMedia(\"(max-width: 599px\");\n    }\n    this._mediaq.addListener(this._resizeListener);\n    this._resizeListener(this._mediaq);\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._mediaq.removeListener(this._resizeListener);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-toast\": HaToast;\n  }\n}\n\ncustomElements.define(\"ha-toast\", HaToast);\n","import {\n  LitElement,\n  query,\n  property,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport { computeRTL } from \"../common/util/compute_rtl\";\nimport { HomeAssistant } from \"../types\";\nimport \"@material/mwc-button\";\nimport \"../components/ha-toast\";\n// Typing\n// tslint:disable-next-line: no-duplicate-imports\nimport { HaToast } from \"../components/ha-toast\";\n\nexport interface ShowToastParams {\n  message: string;\n  action?: ToastActionParams;\n  duration?: number;\n  dismissable?: boolean;\n}\n\nexport interface ToastActionParams {\n  action: () => void;\n  text: string;\n}\n\nclass NotificationManager extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _action?: ToastActionParams;\n  @property() private _noCancelOnOutsideClick: boolean = false;\n\n  @query(\"ha-toast\") private _toast!: HaToast;\n\n  public async showDialog({\n    message,\n    action,\n    duration,\n    dismissable,\n  }: ShowToastParams) {\n    let toast = this._toast;\n    // Can happen on initial load\n    if (!toast) {\n      await this.updateComplete;\n      toast = this._toast;\n    }\n    toast.setAttribute(\"dir\", computeRTL(this.hass) ? \"rtl\" : \"ltr\");\n    this._action = action || undefined;\n    this._noCancelOnOutsideClick =\n      dismissable === undefined ? false : !dismissable;\n    toast.hide();\n    toast.show({\n      text: message,\n      duration: duration === undefined ? 3000 : duration,\n    });\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <ha-toast .noCancelOnOutsideClick=${this._noCancelOnOutsideClick}>\n        ${this._action\n          ? html`\n              <mwc-button\n                .label=${this._action.text}\n                @click=${this.buttonClicked}\n              ></mwc-button>\n            `\n          : \"\"}\n      </ha-toast>\n    `;\n  }\n\n  private buttonClicked() {\n    this._toast.hide();\n    if (this._action) {\n      this._action.action();\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      mwc-button {\n        color: var(--primary-color);\n        font-weight: bold;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"notification-manager\", NotificationManager);\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-notification\": ShowToastParams;\n  }\n}\n"],"sourceRoot":""}