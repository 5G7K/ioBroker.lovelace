{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-dropdown-menu/paper-dropdown-menu-light.js"],"names":["Polymer","_template","html","is","behaviors","IronButtonState","IronControlState","PaperRippleBehavior","IronFormElementBehavior","IronValidatableBehavior","properties","selectedItemLabel","type","String","notify","readOnly","selectedItem","Object","value","observer","label","placeholder","opened","Boolean","allowOutsideScroll","noLabelFloat","reflectToAttribute","alwaysFloatLabel","noAnimations","horizontalAlign","verticalAlign","verticalOffset","Number","hasContent","listeners","keyBindings","hostAttributes","tabindex","role","observers","attached","contentElement","_setSelectedItem","nodes","dom","$","content","getDistributedNodes","i","l","length","nodeType","Node","ELEMENT_NODE","open","menuButton","close","_onIronSelect","event","detail","item","_onIronDeselect","_onTap","gestures","_selectedItemChanged","getAttribute","textContent","trim","_setSelectedItemLabel","_computeMenuVerticalOffset","opt_verticalOffset","_getValidity","_value","disabled","required","_openedChanged","openState","e","setAttribute","_computeLabelClass","cls","_valueChanged","input","_setHasContent"],"mappings":"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","file":"vendors~dialog-config-flow~more-info-dialog~panel-config-automation~panel-config-script~panel-kiosk~~500bf1bb.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/paper-menu-button/paper-menu-button.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport './paper-dropdown-menu-icons.js';\nimport './paper-dropdown-menu-shared-styles.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\nimport {PaperRippleBehavior} from '@polymer/paper-behaviors/paper-ripple-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport * as gestures from '@polymer/polymer/lib/utils/gestures.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design: [Dropdown\nmenus](https://www.google.com/design/spec/components/buttons.html#buttons-dropdown-buttons)\n\nThis is a faster, lighter version of `paper-dropdown-menu`, that does not\nuse a `<paper-input>` internally. Use this element if you're concerned about\nthe performance of this element, i.e., if you plan on using many dropdowns on\nthe same page. Note that this element has a slightly different styling API\nthan `paper-dropdown-menu`.\n\n`paper-dropdown-menu-light` is similar to a native browser select element.\n`paper-dropdown-menu-light` works with selectable content. The currently\nselected item is displayed in the control. If no item is selected, the `label`\nis displayed instead.\n\nExample:\n\n    <paper-dropdown-menu-light label=\"Your favourite pastry\">\n      <paper-listbox slot=\"dropdown-content\">\n        <paper-item>Croissant</paper-item>\n        <paper-item>Donut</paper-item>\n        <paper-item>Financier</paper-item>\n        <paper-item>Madeleine</paper-item>\n      </paper-listbox>\n    </paper-dropdown-menu-light>\n\nThis example renders a dropdown menu with 4 options.\n\nThe child element with the slot `dropdown-content` is used as the dropdown\nmenu. This can be a [`paper-listbox`](paper-listbox), or any other or\nelement that acts like an [`iron-selector`](iron-selector).\n\nSpecifically, the menu child must fire an\n[`iron-select`](iron-selector#event-iron-select) event when one of its\nchildren is selected, and an\n[`iron-deselect`](iron-selector#event-iron-deselect) event when a child is\ndeselected. The selected or deselected item must be passed as the event's\n`detail.item` property.\n\nApplications can listen for the `iron-select` and `iron-deselect` events\nto react when options are selected and deselected.\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dropdown-menu` | A mixin that is applied to the element host | `{}`\n`--paper-dropdown-menu-disabled` | A mixin that is applied to the element host when disabled | `{}`\n`--paper-dropdown-menu-ripple` | A mixin that is applied to the internal ripple | `{}`\n`--paper-dropdown-menu-button` | A mixin that is applied to the internal menu button | `{}`\n`--paper-dropdown-menu-icon` | A mixin that is applied to the internal icon | `{}`\n`--paper-dropdown-menu-disabled-opacity` | The opacity of the dropdown when disabled  | `0.33`\n`--paper-dropdown-menu-color` | The color of the input/label/underline when the dropdown is unfocused | `--primary-text-color`\n`--paper-dropdown-menu-focus-color` | The color of the label/underline when the dropdown is focused  | `--primary-color`\n`--paper-dropdown-error-color` | The color of the label/underline when the dropdown is invalid  | `--error-color`\n`--paper-dropdown-menu-label` | Mixin applied to the label | `{}`\n`--paper-dropdown-menu-input` | Mixin appled to the input | `{}`\n\nNote that in this element, the underline is just the bottom border of the\n\"input\". To style it:\n\n    <style is=custom-style>\n      paper-dropdown-menu-light.custom {\n        --paper-dropdown-menu-input: {\n          border-bottom: 2px dashed lavender;\n        };\n    </style>\n\n@group Paper Elements\n@element paper-dropdown-menu-light\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-dropdown-menu-shared-styles\">\n      :host(:focus) {\n        outline: none;\n      }\n\n      :host {\n        width: 200px;  /* Default size of an <input> */\n      }\n\n      /**\n       * All of these styles below are for styling the fake-input display\n       */\n      [slot=\"dropdown-trigger\"] {\n        box-sizing: border-box;\n        position: relative;\n        width: 100%;\n        padding: 16px 0 8px 0;\n      }\n\n      :host([disabled]) [slot=\"dropdown-trigger\"] {\n        pointer-events: none;\n        opacity: var(--paper-dropdown-menu-disabled-opacity, 0.33);\n      }\n\n      :host([no-label-float]) [slot=\"dropdown-trigger\"] {\n        padding-top: 8px;   /* If there's no label, we need less space up top. */\n      }\n\n      #input {\n        @apply --paper-font-subhead;\n        @apply --paper-font-common-nowrap;\n        line-height: 1.5;\n        border-bottom: 1px solid var(--paper-dropdown-menu-color, var(--secondary-text-color));\n        color: var(--paper-dropdown-menu-color, var(--primary-text-color));\n        width: 100%;\n        box-sizing: border-box;\n        padding: 12px 20px 0 0;   /* Right padding so that text doesn't overlap the icon */\n        outline: none;\n        @apply --paper-dropdown-menu-input;\n      }\n\n      #input:dir(rtl) {\n        padding-right: 0px;\n        padding-left: 20px;\n      }\n\n      :host([disabled]) #input {\n        border-bottom: 1px dashed var(--paper-dropdown-menu-color, var(--secondary-text-color));\n      }\n\n      :host([invalid]) #input {\n        border-bottom: 2px solid var(--paper-dropdown-error-color, var(--error-color));\n      }\n\n      :host([no-label-float]) #input {\n        padding-top: 0;   /* If there's no label, we need less space up top. */\n      }\n\n      label {\n        @apply --paper-font-subhead;\n        @apply --paper-font-common-nowrap;\n        display: block;\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        /**\n         * The container has a 16px top padding, and there's 12px of padding\n         * between the input and the label (from the input's padding-top)\n         */\n        top: 28px;\n        box-sizing: border-box;\n        width: 100%;\n        padding-right: 20px;    /* Right padding so that text doesn't overlap the icon */\n        text-align: left;\n        transition-duration: .2s;\n        transition-timing-function: cubic-bezier(.4,0,.2,1);\n        color: var(--paper-dropdown-menu-color, var(--secondary-text-color));\n        @apply --paper-dropdown-menu-label;\n      }\n\n      label:dir(rtl) {\n        padding-right: 0px;\n        padding-left: 20px;\n      }\n\n      :host([no-label-float]) label {\n        top: 8px;\n        /* Since the label doesn't need to float, remove the animation duration\n        which slows down visibility changes (i.e. when a selection is made) */\n        transition-duration: 0s;\n      }\n\n      label.label-is-floating {\n        font-size: 12px;\n        top: 8px;\n      }\n\n      label.label-is-hidden {\n        visibility: hidden;\n      }\n\n      :host([focused]) label.label-is-floating {\n        color: var(--paper-dropdown-menu-focus-color, var(--primary-color));\n      }\n\n      :host([invalid]) label.label-is-floating {\n        color: var(--paper-dropdown-error-color, var(--error-color));\n      }\n\n      /**\n       * Sets up the focused underline. It's initially hidden, and becomes\n       * visible when it's focused.\n       */\n      label:after {\n        background-color: var(--paper-dropdown-menu-focus-color, var(--primary-color));\n        bottom: 7px;    /* The container has an 8px bottom padding */\n        content: '';\n        height: 2px;\n        left: 45%;\n        position: absolute;\n        transition-duration: .2s;\n        transition-timing-function: cubic-bezier(.4,0,.2,1);\n        visibility: hidden;\n        width: 8px;\n        z-index: 10;\n      }\n\n      :host([invalid]) label:after {\n        background-color: var(--paper-dropdown-error-color, var(--error-color));\n      }\n\n      :host([no-label-float]) label:after {\n        bottom: 7px;    /* The container has a 8px bottom padding */\n      }\n\n      :host([focused]:not([disabled])) label:after {\n        left: 0;\n        visibility: visible;\n        width: 100%;\n      }\n\n      iron-icon {\n        position: absolute;\n        right: 0px;\n        bottom: 8px;    /* The container has an 8px bottom padding */\n        @apply --paper-font-subhead;\n        color: var(--disabled-text-color);\n        @apply --paper-dropdown-menu-icon;\n      }\n\n      iron-icon:dir(rtl) {\n        left: 0;\n        right: auto;\n      }\n\n      :host([no-label-float]) iron-icon {\n        margin-top: 0px;\n      }\n\n      .error {\n        display: inline-block;\n        visibility: hidden;\n        color: var(--paper-dropdown-error-color, var(--error-color));\n        @apply --paper-font-caption;\n        position: absolute;\n        left:0;\n        right:0;\n        bottom: -12px;\n      }\n\n      :host([invalid]) .error {\n        visibility: visible;\n      }\n    </style>\n\n    <!-- this div fulfills an a11y requirement for combobox, do not remove -->\n    <span role=\"button\"></span>\n    <paper-menu-button id=\"menuButton\" vertical-align=\"[[verticalAlign]]\" horizontal-align=\"[[horizontalAlign]]\" vertical-offset=\"[[_computeMenuVerticalOffset(noLabelFloat, verticalOffset)]]\" disabled=\"[[disabled]]\" no-animations=\"[[noAnimations]]\" on-iron-select=\"_onIronSelect\" on-iron-deselect=\"_onIronDeselect\" opened=\"{{opened}}\" close-on-activate allow-outside-scroll=\"[[allowOutsideScroll]]\">\n      <!-- support hybrid mode: user might be using paper-menu-button 1.x which distributes via <content> -->\n      <div class=\"dropdown-trigger\" slot=\"dropdown-trigger\">\n        <label class\\$=\"[[_computeLabelClass(noLabelFloat,alwaysFloatLabel,hasContent)]]\">\n          [[label]]\n        </label>\n        <div id=\"input\" tabindex=\"-1\">&nbsp;</div>\n        <iron-icon icon=\"paper-dropdown-menu:arrow-drop-down\"></iron-icon>\n        <span class=\"error\">[[errorMessage]]</span>\n      </div>\n      <slot id=\"content\" name=\"dropdown-content\" slot=\"dropdown-content\"></slot>\n    </paper-menu-button>\n`,\n\n  is: 'paper-dropdown-menu-light',\n\n  behaviors: [\n    IronButtonState,\n    IronControlState,\n    PaperRippleBehavior,\n    IronFormElementBehavior,\n    IronValidatableBehavior\n  ],\n\n  properties: {\n    /**\n     * The derived \"label\" of the currently selected item. This value\n     * is the `label` property on the selected item if set, or else the\n     * trimmed text content of the selected item.\n     */\n    selectedItemLabel: {type: String, notify: true, readOnly: true},\n\n    /**\n     * The last selected item. An item is selected if the dropdown menu has\n     * a child with class `dropdown-content`, and that child triggers an\n     * `iron-select` event with the selected `item` in the `detail`.\n     *\n     * @type {?Object}\n     */\n    selectedItem: {type: Object, notify: true, readOnly: true},\n\n    /**\n     * The value for this element that will be used when submitting in\n     * a form. It reflects the value of `selectedItemLabel`. If set directly,\n     * it will not update the `selectedItemLabel` value.\n     */\n    value: {\n      type: String,\n      notify: true,\n      observer: '_valueChanged',\n    },\n\n    /**\n     * The label for the dropdown.\n     */\n    label: {type: String},\n\n    /**\n     * The placeholder for the dropdown.\n     */\n    placeholder: {type: String},\n\n    /**\n     * True if the dropdown is open. Otherwise, false.\n     */\n    opened:\n        {type: Boolean, notify: true, value: false, observer: '_openedChanged'},\n\n    /**\n     * By default, the dropdown will constrain scrolling on the page\n     * to itself when opened.\n     * Set to true in order to prevent scroll from being constrained\n     * to the dropdown when it opens.\n     */\n    allowOutsideScroll: {type: Boolean, value: false},\n\n    /**\n     * Set to true to disable the floating label. Bind this to the\n     * `<paper-input-container>`'s `noLabelFloat` property.\n     */\n    noLabelFloat: {type: Boolean, value: false, reflectToAttribute: true},\n\n    /**\n     * Set to true to always float the label. Bind this to the\n     * `<paper-input-container>`'s `alwaysFloatLabel` property.\n     */\n    alwaysFloatLabel: {type: Boolean, value: false},\n\n    /**\n     * Set to true to disable animations when opening and closing the\n     * dropdown.\n     */\n    noAnimations: {type: Boolean, value: false},\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * horizontally relative to the dropdown trigger.\n     */\n    horizontalAlign: {type: String, value: 'right'},\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * vertically relative to the dropdown trigger.\n     */\n    verticalAlign: {type: String, value: 'top'},\n\n    /**\n     * Overrides the vertical offset computed in\n     * _computeMenuVerticalOffset.\n     */\n    verticalOffset: Number,\n\n    hasContent: {type: Boolean, readOnly: true}\n  },\n\n  listeners: {'tap': '_onTap'},\n\n  /**\n   * @type {!Object}\n   */\n  keyBindings: {'up down': 'open', 'esc': 'close'},\n\n  hostAttributes: {\n    tabindex: 0,\n    role: 'combobox',\n    'aria-autocomplete': 'none',\n    'aria-haspopup': 'true'\n  },\n\n  observers: ['_selectedItemChanged(selectedItem)'],\n\n  attached: function() {\n    // NOTE(cdata): Due to timing, a preselected value in a `IronSelectable`\n    // child will cause an `iron-select` event to fire while the element is\n    // still in a `DocumentFragment`. This has the effect of causing\n    // handlers not to fire. So, we double check this value on attached:\n    var contentElement = this.contentElement;\n    if (contentElement && contentElement.selectedItem) {\n      this._setSelectedItem(contentElement.selectedItem);\n    }\n  },\n\n  /**\n   * The content element that is contained by the dropdown menu, if any.\n   */\n  get contentElement() {\n    // Polymer 2.x returns slot.assignedNodes which can contain text nodes.\n    var nodes = dom(this.$.content).getDistributedNodes();\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      if (nodes[i].nodeType === Node.ELEMENT_NODE) {\n        return nodes[i];\n      }\n    }\n  },\n\n  /**\n   * Show the dropdown content.\n   */\n  open: function() {\n    this.$.menuButton.open();\n  },\n\n  /**\n   * Hide the dropdown content.\n   */\n  close: function() {\n    this.$.menuButton.close();\n  },\n\n  /**\n   * A handler that is called when `iron-select` is fired.\n   *\n   * @param {CustomEvent} event An `iron-select` event.\n   */\n  _onIronSelect: function(event) {\n    this._setSelectedItem(event.detail.item);\n  },\n\n  /**\n   * A handler that is called when `iron-deselect` is fired.\n   *\n   * @param {CustomEvent} event An `iron-deselect` event.\n   */\n  _onIronDeselect: function(event) {\n    this._setSelectedItem(null);\n  },\n\n  /**\n   * A handler that is called when the dropdown is tapped.\n   *\n   * @param {CustomEvent} event A tap event.\n   */\n  _onTap: function(event) {\n    if (gestures.findOriginalTarget(event) === this) {\n      this.open();\n    }\n  },\n\n  /**\n   * Compute the label for the dropdown given a selected item.\n   *\n   * @param {Element} selectedItem A selected Element item, with an\n   * optional `label` property.\n   */\n  _selectedItemChanged: function(selectedItem) {\n    var value = '';\n    if (!selectedItem) {\n      value = '';\n    } else {\n      value = selectedItem.label || selectedItem.getAttribute('label') ||\n          selectedItem.textContent.trim();\n    }\n\n    this.value = value;\n    this._setSelectedItemLabel(value);\n  },\n\n  /**\n   * Compute the vertical offset of the menu based on the value of\n   * `noLabelFloat`.\n   *\n   * @param {boolean} noLabelFloat True if the label should not float\n   * @param {number=} opt_verticalOffset Optional offset from the user\n   * above the input, otherwise false.\n   */\n  _computeMenuVerticalOffset: function(noLabelFloat, opt_verticalOffset) {\n    // Override offset if it's passed from the user.\n    if (opt_verticalOffset) {\n      return opt_verticalOffset;\n    }\n\n    // NOTE(cdata): These numbers are somewhat magical because they are\n    // derived from the metrics of elements internal to `paper-input`'s\n    // template. The metrics will change depending on whether or not the\n    // input has a floating label.\n    return noLabelFloat ? -4 : 8;\n  },\n\n  /**\n   * Returns false if the element is required and does not have a selection,\n   * and true otherwise.\n   * @param {*=} _value Ignored.\n   * @return {boolean} true if `required` is false, or if `required` is true\n   * and the element has a valid selection.\n   */\n  _getValidity: function(_value) {\n    return this.disabled || !this.required || (this.required && !!this.value);\n  },\n\n  _openedChanged: function() {\n    var openState = this.opened ? 'true' : 'false';\n    var e = this.contentElement;\n    if (e) {\n      e.setAttribute('aria-expanded', openState);\n    }\n  },\n\n  _computeLabelClass: function(noLabelFloat, alwaysFloatLabel, hasContent) {\n    var cls = '';\n    if (noLabelFloat === true) {\n      return hasContent ? 'label-is-hidden' : '';\n    }\n\n    if (hasContent || alwaysFloatLabel === true) {\n      cls += ' label-is-floating';\n    }\n    return cls;\n  },\n\n  _valueChanged: function() {\n    // Only update if it's actually different.\n    if (this.$.input && this.$.input.textContent !== this.value) {\n      this.$.input.textContent = this.value;\n    }\n    this._setHasContent(!!this.value);\n  }\n});\n"],"sourceRoot":""}