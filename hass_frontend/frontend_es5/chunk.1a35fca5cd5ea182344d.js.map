{"version":3,"sources":["webpack:///./src/panels/config/ha-config-section.ts","webpack:///./src/data/zha.ts","webpack:///./src/panels/config/zha/functions.ts","webpack:///./src/panels/config/zha/zha-config-dashboard.ts"],"names":["_decorate","customElement","_initialize","_HTMLElement","F","_HTMLElement2","HaConfigSection","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_assertThisInitialized","attachShadow","mode","shadowRoot","innerHTML","_inherits","d","HTMLElement","__webpack_require__","__webpack_exports__","reconfigureNode","fetchAttributesForCluster","fetchDevices","fetchZHADevice","fetchBindableDevices","bindDevices","unbindDevices","readAttributeValue","fetchCommandsForCluster","fetchClustersForZhaNode","fetchGroups","removeGroups","fetchGroup","fetchGroupableDevices","addMembersToGroup","removeMembersFromGroup","addGroup","hass","ieeeAddress","callWS","type","ieee","endpointId","clusterId","clusterType","endpoint_id","cluster_id","cluster_type","sourceIEEE","targetIEEE","source_ieee","target_ieee","data","Object","assign","groupIdsToRemove","group_ids","groupId","group_id","membersToAdd","members","membersToRemove","groupName","group_name","formatAsPaddedHex","sortZHADevices","sortZHAGroups","value","hex","parseInt","toString","padStart","a","b","nameA","user_given_name","name","nameb","localeCompare","ZHAConfigDashboard","property","memoizeOne","devices","outputDevices","map","device","nwk","id","narrow","title","sortable","filterable","direction","_get","prototype","_firstUpdatedCalled","_fetchDevices","changedProperties","_this2","html","_templateObject","localize","isWide","pages","page","_templateObject2","concat","_columns","_memoizeDevices","_devices","_handleDeviceClicked","_callee","regeneratorRuntime","wrap","_context","prev","next","t0","sent","sort","stop","_callee2","ev","deviceId","_context2","detail","navigate","haStyle","css","_templateObject3","LitElement"],"mappings":"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","file":"chunk.1a35fca5cd5ea182344d.js","sourcesContent":["import { customElement } from \"lit-element\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = `\n    <style>\n      .content {\n        padding: 28px 20px 0;\n        max-width: 640px;\n        margin: 0 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 20px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        width: 100%;\n        max-width: 500px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n    </style>\n    <div class=\"content\">\n      <div class=\"header\"><slot name=\"header\"></slot></div>\n      <div class=\"together\">\n        <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n        <div class=\"panel\"><slot></slot></div>\n      </div>\n    </div>\n    `;\n  }\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\n\nexport interface ZHAEntityReference extends HassEntity {\n  name: string;\n}\n\nexport interface ZHADevice {\n  name: string;\n  ieee: string;\n  nwk: string;\n  lqi: string;\n  rssi: string;\n  last_seen: string;\n  manufacturer: string;\n  model: string;\n  quirk_applied: boolean;\n  quirk_class: string;\n  entities: ZHAEntityReference[];\n  manufacturer_code: number;\n  device_reg_id: string;\n  user_given_name?: string;\n  power_source?: string;\n  area_id?: string;\n}\n\nexport interface Attribute {\n  name: string;\n  id: number;\n}\n\nexport interface Cluster {\n  name: string;\n  id: number;\n  endpoint_id: number;\n  type: string;\n}\n\nexport interface Command {\n  name: string;\n  id: number;\n  type: string;\n}\n\nexport interface ReadAttributeServiceData {\n  ieee: string;\n  endpoint_id: number;\n  cluster_id: number;\n  cluster_type: string;\n  attribute: number;\n  manufacturer?: number;\n}\n\nexport interface ZHAGroup {\n  name: string;\n  group_id: number;\n  members: ZHADevice[];\n}\n\nexport const reconfigureNode = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/devices/reconfigure\",\n    ieee: ieeeAddress,\n  });\n\nexport const fetchAttributesForCluster = (\n  hass: HomeAssistant,\n  ieeeAddress: string,\n  endpointId: number,\n  clusterId: number,\n  clusterType: string\n): Promise<Attribute[]> =>\n  hass.callWS({\n    type: \"zha/devices/clusters/attributes\",\n    ieee: ieeeAddress,\n    endpoint_id: endpointId,\n    cluster_id: clusterId,\n    cluster_type: clusterType,\n  });\n\nexport const fetchDevices = (hass: HomeAssistant): Promise<ZHADevice[]> =>\n  hass.callWS({\n    type: \"zha/devices\",\n  });\n\nexport const fetchZHADevice = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<ZHADevice> =>\n  hass.callWS({\n    type: \"zha/device\",\n    ieee: ieeeAddress,\n  });\n\nexport const fetchBindableDevices = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<ZHADevice[]> =>\n  hass.callWS({\n    type: \"zha/devices/bindable\",\n    ieee: ieeeAddress,\n  });\n\nexport const bindDevices = (\n  hass: HomeAssistant,\n  sourceIEEE: string,\n  targetIEEE: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/devices/bind\",\n    source_ieee: sourceIEEE,\n    target_ieee: targetIEEE,\n  });\n\nexport const unbindDevices = (\n  hass: HomeAssistant,\n  sourceIEEE: string,\n  targetIEEE: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/devices/unbind\",\n    source_ieee: sourceIEEE,\n    target_ieee: targetIEEE,\n  });\n\nexport const readAttributeValue = (\n  hass: HomeAssistant,\n  data: ReadAttributeServiceData\n): Promise<string> => {\n  return hass.callWS({\n    ...data,\n    type: \"zha/devices/clusters/attributes/value\",\n  });\n};\n\nexport const fetchCommandsForCluster = (\n  hass: HomeAssistant,\n  ieeeAddress: string,\n  endpointId: number,\n  clusterId: number,\n  clusterType: string\n): Promise<Command[]> =>\n  hass.callWS({\n    type: \"zha/devices/clusters/commands\",\n    ieee: ieeeAddress,\n    endpoint_id: endpointId,\n    cluster_id: clusterId,\n    cluster_type: clusterType,\n  });\n\nexport const fetchClustersForZhaNode = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<Cluster[]> =>\n  hass.callWS({\n    type: \"zha/devices/clusters\",\n    ieee: ieeeAddress,\n  });\n\nexport const fetchGroups = (hass: HomeAssistant): Promise<ZHAGroup[]> =>\n  hass.callWS({\n    type: \"zha/groups\",\n  });\n\nexport const removeGroups = (\n  hass: HomeAssistant,\n  groupIdsToRemove: number[]\n): Promise<ZHAGroup[]> =>\n  hass.callWS({\n    type: \"zha/group/remove\",\n    group_ids: groupIdsToRemove,\n  });\n\nexport const fetchGroup = (\n  hass: HomeAssistant,\n  groupId: number\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group\",\n    group_id: groupId,\n  });\n\nexport const fetchGroupableDevices = (\n  hass: HomeAssistant\n): Promise<ZHADevice[]> =>\n  hass.callWS({\n    type: \"zha/devices/groupable\",\n  });\n\nexport const addMembersToGroup = (\n  hass: HomeAssistant,\n  groupId: number,\n  membersToAdd: string[]\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group/members/add\",\n    group_id: groupId,\n    members: membersToAdd,\n  });\n\nexport const removeMembersFromGroup = (\n  hass: HomeAssistant,\n  groupId: number,\n  membersToRemove: string[]\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group/members/remove\",\n    group_id: groupId,\n    members: membersToRemove,\n  });\n\nexport const addGroup = (\n  hass: HomeAssistant,\n  groupName: string,\n  membersToAdd?: string[]\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group/add\",\n    group_name: groupName,\n    members: membersToAdd,\n  });\n","import { ZHADevice, ZHAGroup } from \"../../../data/zha\";\n\nexport const formatAsPaddedHex = (value: string | number): string => {\n  let hex = value;\n  if (typeof value === \"string\") {\n    hex = parseInt(value, 16);\n  }\n  return \"0x\" + hex.toString(16).padStart(4, \"0\");\n};\n\nexport const sortZHADevices = (a: ZHADevice, b: ZHADevice): number => {\n  const nameA = a.user_given_name ? a.user_given_name : a.name;\n  const nameb = b.user_given_name ? b.user_given_name : b.name;\n  return nameA.localeCompare(nameb);\n};\n\nexport const sortZHAGroups = (a: ZHAGroup, b: ZHAGroup): number => {\n  const nameA = a.name;\n  const nameb = b.name;\n  return nameA.localeCompare(nameb);\n};\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  CSSResultArray,\n  css,\n  customElement,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../ha-config-section\";\n\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { fetchDevices, ZHADevice } from \"../../../data/zha\";\nimport { sortZHADevices, formatAsPaddedHex } from \"./functions\";\nimport memoizeOne from \"memoize-one\";\nimport {\n  DataTableColumnContainer,\n  RowClickedEvent,\n} from \"../../../components/data-table/ha-data-table\";\nimport { navigate } from \"../../../common/navigate\";\n\nexport interface DeviceRowData extends ZHADevice {\n  device?: DeviceRowData;\n}\n\n@customElement(\"zha-config-dashboard\")\nclass ZHAConfigDashboard extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public route!: Route;\n  @property() public narrow!: boolean;\n  @property() public isWide!: boolean;\n  @property() private _devices: ZHADevice[] = [];\n  private pages: string[] = [\"add\", \"groups\"];\n  private _firstUpdatedCalled: boolean = false;\n\n  private _memoizeDevices = memoizeOne((devices: ZHADevice[]) => {\n    let outputDevices: DeviceRowData[] = devices;\n\n    outputDevices = outputDevices.map((device) => {\n      return {\n        ...device,\n        name: device.user_given_name ? device.user_given_name : device.name,\n        nwk: formatAsPaddedHex(device.nwk),\n        id: device.ieee,\n      };\n    });\n\n    return outputDevices;\n  });\n\n  private _columns = memoizeOne(\n    (narrow: boolean): DataTableColumnContainer =>\n      narrow\n        ? {\n            name: {\n              title: \"Devices\",\n              sortable: true,\n              filterable: true,\n              direction: \"asc\",\n            },\n          }\n        : {\n            name: {\n              title: \"Name\",\n              sortable: true,\n              filterable: true,\n              direction: \"asc\",\n            },\n            nwk: {\n              title: \"Nwk\",\n              sortable: true,\n              filterable: true,\n            },\n            ieee: {\n              title: \"IEEE\",\n              sortable: true,\n              filterable: true,\n            },\n          }\n  );\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this.hass && this._firstUpdatedCalled) {\n      this._fetchDevices();\n    }\n  }\n\n  protected firstUpdated(changedProperties: PropertyValues): void {\n    super.firstUpdated(changedProperties);\n    if (this.hass) {\n      this._fetchDevices();\n    }\n    this._firstUpdatedCalled = true;\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <hass-subpage\n        .header=${this.hass.localize(\"ui.panel.config.zha.title\")}\n        .showBackButton=${this.isWide}\n      >\n        <ha-config-section .narrow=${this.narrow} .isWide=${this.isWide}>\n          <div slot=\"header\">\n            ${this.hass.localize(\"ui.panel.config.zha.header\")}\n          </div>\n\n          <div slot=\"introduction\">\n            ${this.hass.localize(\"ui.panel.config.zha.introduction\")}\n          </div>\n\n          <ha-card>\n            ${this.pages.map((page) => {\n              return html`\n                <a href=${`/config/zha/${page}`}>\n                  <paper-item>\n                    <paper-item-body two-line=\"\">\n                      ${this.hass.localize(\n                        `ui.panel.config.zha.${page}.caption`\n                      )}\n                      <div secondary>\n                        ${this.hass.localize(\n                          `ui.panel.config.zha.${page}.description`\n                        )}\n                      </div>\n                    </paper-item-body>\n                    <ha-icon-next></ha-icon-next>\n                  </paper-item>\n                </a>\n              `;\n            })}\n          </ha-card>\n          <ha-card>\n            <ha-data-table\n              .columns=${this._columns(this.narrow)}\n              .data=${this._memoizeDevices(this._devices)}\n              @row-click=${this._handleDeviceClicked}\n            ></ha-data-table>\n          </ha-card>\n        </ha-config-section>\n      </hass-subpage>\n    `;\n  }\n\n  private async _fetchDevices() {\n    this._devices = (await fetchDevices(this.hass!)).sort(sortZHADevices);\n  }\n\n  private async _handleDeviceClicked(ev: CustomEvent) {\n    const deviceId = (ev.detail as RowClickedEvent).id;\n    navigate(this, `/config/zha/device/${deviceId}`);\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"zha-config-dashboard\": ZHAConfigDashboard;\n  }\n}\n"],"sourceRoot":""}