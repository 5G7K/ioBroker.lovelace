{"version":3,"sources":["webpack:///./node_modules/@polymer/iron-input/iron-input.js","webpack:///./node_modules/@polymer/iron-checked-element-behavior/iron-checked-element-behavior.js","webpack:///./node_modules/@polymer/paper-behaviors/paper-checked-element-behavior.js","webpack:///./node_modules/@polymer/paper-dropdown-menu/paper-dropdown-menu.js","webpack:///./node_modules/@polymer/paper-dropdown-menu/paper-dropdown-menu-icons.js","webpack:///./node_modules/@polymer/paper-dropdown-menu/paper-dropdown-menu-shared-styles.js","webpack:///./node_modules/@polymer/paper-checkbox/paper-checkbox.js","webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/mixins/events-mixin.js","webpack:///./src/common/entity/compute_state_domain.ts","webpack:///./node_modules/@polymer/paper-spinner/paper-spinner.js","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js","webpack:///./src/panels/config/ha-config-section.ts","webpack:///./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js","webpack:///./node_modules/@polymer/app-layout/app-header/app-header.js","webpack:///./node_modules/@polymer/app-layout/app-scroll-effects/app-scroll-effects-behavior.js","webpack:///./node_modules/@polymer/app-layout/helpers/helpers.js","webpack:///./src/util/hass-attributes-util.js","webpack:///./src/panels/config/ha-form-style.js","webpack:///./src/common/entity/states_sort_by_name.ts","webpack:///./src/panels/config/ha-entity-config.js","webpack:///./src/panels/config/customize/types/ha-customize-array.js","webpack:///./src/panels/config/customize/types/ha-customize-boolean.js","webpack:///./src/panels/config/customize/types/ha-customize-icon.js","webpack:///./src/panels/config/customize/types/ha-customize-key-value.js","webpack:///./src/panels/config/customize/types/ha-customize-string.js","webpack:///./src/panels/config/customize/ha-customize-attribute.js","webpack:///./src/panels/config/customize/ha-form-customize-attributes.js","webpack:///./src/panels/config/customize/ha-form-customize.js","webpack:///./src/panels/config/customize/ha-config-customize.js","webpack:///./node_modules/@polymer/paper-input/paper-input.js","webpack:///./node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js"],"names":["Polymer","_template","html","_templateObject","is","behaviors","IronValidatableBehavior","properties","bindValue","type","String","value","computed","allowedPattern","autoValidate","Boolean","_inputElement","Object","observers","listeners","input","keypress","created","IronA11yAnnouncer","requestAvailability","this","_previousValidInput","_patternAlreadyChecked","attached","_observer","dom","observeNodes","info","_initSlottedInput","bind","detached","unobserveNodes","inputElement","getEffectiveChildren","fire","_patternRegExp","pattern","RegExp","_bindValueChanged","undefined","validate","_onInput","_checkPatternValidity","_announceInvalidCharacter","_isPrintable","event","anyNonPrintable","keyCode","mozNonPrintable","charCode","_onKeypress","regexp","metaKey","ctrlKey","altKey","thisChar","fromCharCode","test","preventDefault","i","length","invalid","valid","checkValidity","required","hasValidator","call","message","text","_computeValue","IronCheckedElementBehaviorImpl","checked","reflectToAttribute","notify","observer","toggles","_hasIronCheckedElementBehavior","_getValidity","_value","disabled","_requiredChanged","setAttribute","removeAttribute","_checkedChanged","active","_valueChanged","IronCheckedElementBehavior","IronFormElementBehavior","__webpack_require__","d","__webpack_exports__","PaperCheckedElementBehavior","PaperCheckedElementBehaviorImpl","hasRipple","_ripple","_buttonStateChanged","PaperRippleBehavior","isAttached","PaperInkyFocusBehavior","IronButtonState","IronControlState","selectedItemLabel","readOnly","selectedItem","label","placeholder","errorMessage","opened","allowOutsideScroll","noLabelFloat","alwaysFloatLabel","noAnimations","horizontalAlign","verticalAlign","verticalOffset","Number","dynamicAlign","restoreFocusOnClose","tap","keyBindings","up down","esc","hostAttributes","role","aria-autocomplete","aria-haspopup","contentElement","_setSelectedItem","nodes","$","content","getDistributedNodes","l","nodeType","Node","ELEMENT_NODE","open","menuButton","close","_onIronSelect","detail","item","_onIronDeselect","_onTap","gestures","_selectedItemChanged","getAttribute","textContent","trim","_setSelectedItemLabel","_computeMenuVerticalOffset","opt_verticalOffset","_openedChanged","openState","e","$_documentContainer","document","createElement","innerHTML","head","appendChild","template","aria-checked","tabindex","ariaActiveAttribute","afterNextRender","getComputedStyleValue","checkboxSizeText","units","unitsMatches","match","checkboxSize","parseFloat","defaultInkSize","Math","floor","updateStyles","--paper-checkbox-ink-size","_computeCheckboxClass","className","_computeCheckmarkClass","_createRipple","_rippleContainer","checkboxContainer","PaperInkyFocusBehaviorImpl","computeStateName","_compute_object_id__WEBPACK_IMPORTED_MODULE_0__","stateObj","attributes","friendly_name","computeObjectId","entity_id","replace","dedupingMixin","superClass","_superClass","_class","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","key","get","hass","localize","Function","EventsMixin","options","fireEvent","node","computeStateDomain","_compute_domain__WEBPACK_IMPORTED_MODULE_0__","computeDomain","PaperSpinnerBehavior","entityId","substr","indexOf","IronScrollTargetBehavior","scrollTarget","HTMLElement","_defaultScrollTarget","_shouldHaveListener","_scrollTargetChanged","_oldScrollTarget","_toggleScrollListener","_doc","domHost","ownerDocument","querySelector","_isValidScrollTarget","_scrollHandler","documentElement","_scrollTop","window","pageYOffset","scrollTop","_scrollLeft","pageXOffset","scrollLeft","top","scrollTo","left","scroll","leftOrOptions","_typeof","_scrollTargetWidth","innerWidth","offsetWidth","_scrollTargetHeight","innerHeight","offsetHeight","yes","eventTarget","_boundScrollHandler","addEventListener","removeEventListener","toggleScrollListener","_decorate","customElement","_initialize","_HTMLElement","F","_HTMLElement2","HaConfigSection","_this","_assertThisInitialized","attachShadow","mode","shadowRoot","AppLayoutBehavior","hasScrollingRegion","header","headerSlot","_updateLayoutStates","wrapper","classList","remove","contentContainer","headerHeight","style","right","requestAnimationFrame","rect","getBoundingClientRect","rightOffset","clientWidth","containerStyle","fixed","condenses","marginTop","paddingTop","AppScrollEffectsBehavior","reveals","shadow","_height","_dHeight","_stickyElTop","_stickyElRef","_top","_progress","_wasScrollingDown","_initScrollTop","_initTimestamp","_lastTimestamp","_lastScrollTop","_maxHeaderTop","_stickyEl","slot","hasAttribute","_configChanged","resetLayout","_notifyLayoutChanged","_clampedScrollTop","firstSetup","currentDisabled","_updateScrollState","_mayMove","offsetTop","_setUpEffect","_layoutIfDirty","forceUpdate","progress","lastTop","maxHeaderTop","dScrollTop","absDScrollTop","abs","isScrollingDown","now","performance","_clamp","max","transitionDuration","scrollVelocity","_runEffects","_transformHeader","willCondense","isOnScreen","isContentBelow","y","translate3d","min","v","_ensureBgContainers","_bgContainer","id","_bgRear","_bgFront","root","insertBefore","_getDOMRef","getScrollState","_polymer_iron_scroll_target_behavior_iron_scroll_target_behavior_js__WEBPACK_IMPORTED_MODULE_1__","_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__","effects","effectsConfig","threshold","thresholdTriggered","_effectsRunFn","_effects","_scrollStateChanged","_tearDownEffects","createEffect","effectName","effectConfig","effectDef","_scrollEffects","ReferenceError","_getUndefinedMsg","prop","_boundEffect","setUp","_effectsChanged","split","forEach","push","console","warn","startsAt","endsAt","deltaS","noop","runFn","run","tearDown","p","_setThresholdTriggered","registerEffect","Error","hassAttributeUtil","binary_sensor","cover","sensor","switch","string","json","icon","boolean","array","key-value","LOGIC_STATE_ATTRIBUTES","entity_picture","description","emulated_hue","domains","emulated_hue_name","haaska_hidden","haaska_name","homebridge_hidden","homebridge_name","supported_features","attribution","restored","custom_ui_more_info","custom_ui_state_card","device_class","DOMAIN_DEVICE_CLASS","hidden","assumed_state","initial_state","unit_of_measurement","documentContainer","sortStatesByName","_compute_state_name__WEBPACK_IMPORTED_MODULE_0__","entityA","entityB","nameA","nameB","HaEntityConfig","PolymerElement","entities","Array","allowDelete","selectedEntity","formState","config","_get","prototype","formEl","component","form","entityChanged","computeSelectCaption","oldEntities","oldEntityId","newIndex","findIndex","ent","index","entity","el","loadEntity","then","saveEntity","customElements","define","HaCustomizeArray","ha_customize_array_templateObject","notifies","domain","sort","getOptions","HaCustomizeBoolean","ha_customize_boolean_templateObject","HaCustomizeIcon","ha_customize_icon_templateObject","HaCustomizeKeyValue","ha_customize_key_value_templateObject","HaCustomizeString","ha_customize_string_templateObject","HaCustomizeAttribute","ha_customize_attribute_templateObject","secondary","assign","closed","child","tag","TYPE_TO_TAG","toUpperCase","lastChild","tagName","removeChild","toLowerCase","setProperties","parentNode","HaFormCustomizeAttributes","MutableData","ha_form_customize_attributes_templateObject","HaFormCustomize","LocalizeMixin","ha_form_customize_templateObject","localAttributes","hasLocalAttributes","globalAttributes","hasGlobalAttributes","existingAttributes","hasExistingAttributes","newAttributes","hasNewAttributes","newAttributesOptions","selectedNewAttribute","localConfig","globalConfig","attribute","callApi","data","local","global","concat","attr","JSON","parse","objectId","UNKNOWN_TYPE","_initOpenObject","stringify","keys","_this2","map","_computeSingleAttribute","localKeys","_computeAttributes","globalKeys","filter","includes","entityKeys","some","every","_this3","conf","filterFromAttributes","selected","option","ADD_TYPE","result","set","getNewAttributesOptions","HaConfigCustomize","ha_config_customize_templateObject","isWide","entityConfig","history","back","states","PaperInputBehavior","_focusableElement","iron-input-ready","_onIronInputReady","nativeInput","$$","_typesThatHaveText","container","_handleValueAndAutoValidate","_text","instance","body","_onIronAnnounce","announce","async"],"mappings":"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","file":"chunk.d9fcd4fa9fb12826891c.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronA11yAnnouncer} from '@polymer/iron-a11y-announcer/iron-a11y-announcer.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`<iron-input>` is a wrapper to a native `<input>` element, that adds two-way\nbinding and prevention of invalid input. To use it, you must distribute a native\n`<input>` yourself. You can continue to use the native `input` as you would\nnormally:\n\n    <iron-input>\n      <input>\n    </iron-input>\n\n    <iron-input>\n      <input type=\"email\" disabled>\n    </iron-input>\n\n### Two-way binding\n\nBy default you can only get notified of changes to a native `<input>`'s `value`\ndue to user input:\n\n    <input value=\"{{myValue::input}}\">\n\nThis means that if you imperatively set the value (i.e. `someNativeInput.value =\n'foo'`), no events will be fired and this change cannot be observed.\n\n`iron-input` adds the `bind-value` property that mirrors the native `input`'s\n'`value` property; this property can be used for two-way data binding.\n`bind-value` will notify if it is changed either by user input or by script.\n\n    <iron-input bind-value=\"{{myValue}}\">\n      <input>\n    </iron-input>\n\nNote: this means that if you want to imperatively set the native `input`'s, you\n_must_ set `bind-value` instead, so that the wrapper `iron-input` can be\nnotified.\n\n### Validation\n\n`iron-input` uses the native `input`'s validation. For simplicity, `iron-input`\nhas a `validate()` method (which internally just checks the distributed\n`input`'s validity), which sets an `invalid` attribute that can also be used for\nstyling.\n\nTo validate automatically as you type, you can use the `auto-validate`\nattribute.\n\n`iron-input` also fires an `iron-input-validate` event after `validate()` is\ncalled. You can use it to implement a custom validator:\n\n    var CatsOnlyValidator = {\n      validate: function(ironInput) {\n        var valid = !ironInput.bindValue || ironInput.bindValue === 'cat';\n        ironInput.invalid = !valid;\n        return valid;\n      }\n    }\n    ironInput.addEventListener('iron-input-validate', function() {\n      CatsOnly.validate(input2);\n    });\n\nYou can also use an element implementing an\n[`IronValidatorBehavior`](/element/PolymerElements/iron-validatable-behavior).\nThis example can also be found in the demo for this element:\n\n    <iron-input validator=\"cats-only\">\n      <input>\n    </iron-input>\n\n### Preventing invalid input\n\nIt may be desirable to only allow users to enter certain characters. You can use\nthe `allowed-pattern` attribute to accomplish this. This feature is separate\nfrom validation, and `allowed-pattern` does not affect how the input is\nvalidated.\n\n    // Only allow typing digits, but a valid input has exactly 5 digits.\n    <iron-input allowed-pattern=\"[0-9]\">\n      <input pattern=\"\\d{5}\">\n    </iron-input>\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n    </style>\n    <slot id=\"content\"></slot>\n`,\n\n  is: 'iron-input',\n  behaviors: [IronValidatableBehavior],\n\n  /**\n   * Fired whenever `validate()` is called.\n   *\n   * @event iron-input-validate\n   */\n\n  properties: {\n\n    /**\n     * Use this property instead of `value` for two-way data binding, or to\n     * set a default value for the input. **Do not** use the distributed\n     * input's `value` property to set a default value.\n     */\n    bindValue: {type: String, value: ''},\n\n    /**\n     * Computed property that echoes `bindValue` (mostly used for Polymer 1.0\n     * backcompatibility, if you were one-way binding to the Polymer 1.0\n     * `input is=\"iron-input\"` value attribute).\n     */\n    value: {type: String, computed: '_computeValue(bindValue)'},\n\n    /**\n     * Regex-like list of characters allowed as input; all characters not in the\n     * list will be rejected. The recommended format should be a list of allowed\n     * characters, for example, `[a-zA-Z0-9.+-!;:]`.\n     *\n     * This pattern represents the allowed characters for the field; as the user\n     * inputs text, each individual character will be checked against the\n     * pattern (rather than checking the entire value as a whole). If a\n     * character is not a match, it will be rejected.\n     *\n     * Pasted input will have each character checked individually; if any\n     * character doesn't match `allowedPattern`, the entire pasted string will\n     * be rejected.\n     *\n     * Note: if you were using `iron-input` in 1.0, you were also required to\n     * set `prevent-invalid-input`. This is no longer needed as of Polymer 2.0,\n     * and will be set automatically for you if an `allowedPattern` is provided.\n     *\n     */\n    allowedPattern: {type: String},\n\n    /**\n     * Set to true to auto-validate the input value as you type.\n     */\n    autoValidate: {type: Boolean, value: false},\n\n    /**\n     * The native input element.\n     */\n    _inputElement: Object,\n  },\n\n  observers: ['_bindValueChanged(bindValue, _inputElement)'],\n  listeners: {'input': '_onInput', 'keypress': '_onKeypress'},\n\n  created: function() {\n    IronA11yAnnouncer.requestAvailability();\n    this._previousValidInput = '';\n    this._patternAlreadyChecked = false;\n  },\n\n  attached: function() {\n    // If the input is added at a later time, update the internal reference.\n    this._observer = dom(this).observeNodes(function(info) {\n      this._initSlottedInput();\n    }.bind(this));\n  },\n\n  detached: function() {\n    if (this._observer) {\n      dom(this).unobserveNodes(this._observer);\n      this._observer = null;\n    }\n  },\n\n  /**\n   * Returns the distributed input element.\n   */\n  get inputElement() {\n    return this._inputElement;\n  },\n\n  _initSlottedInput: function() {\n    this._inputElement = this.getEffectiveChildren()[0];\n\n    if (this.inputElement && this.inputElement.value) {\n      this.bindValue = this.inputElement.value;\n    }\n\n    this.fire('iron-input-ready');\n  },\n\n  get _patternRegExp() {\n    var pattern;\n    if (this.allowedPattern) {\n      pattern = new RegExp(this.allowedPattern);\n    } else {\n      switch (this.inputElement.type) {\n        case 'number':\n          pattern = /[0-9.,e-]/;\n          break;\n      }\n    }\n    return pattern;\n  },\n\n  /**\n   * @suppress {checkTypes}\n   */\n  _bindValueChanged: function(bindValue, inputElement) {\n    // The observer could have run before attached() when we have actually\n    // initialized this property.\n    if (!inputElement) {\n      return;\n    }\n\n    if (bindValue === undefined) {\n      inputElement.value = null;\n    } else if (bindValue !== inputElement.value) {\n      this.inputElement.value = bindValue;\n    }\n\n    if (this.autoValidate) {\n      this.validate();\n    }\n\n    // manually notify because we don't want to notify until after setting value\n    this.fire('bind-value-changed', {value: bindValue});\n  },\n\n  _onInput: function() {\n    // Need to validate each of the characters pasted if they haven't\n    // been validated inside `_onKeypress` already.\n    if (this.allowedPattern && !this._patternAlreadyChecked) {\n      var valid = this._checkPatternValidity();\n      if (!valid) {\n        this._announceInvalidCharacter(\n            'Invalid string of characters not entered.');\n        this.inputElement.value = this._previousValidInput;\n      }\n    }\n    this.bindValue = this._previousValidInput = this.inputElement.value;\n    this._patternAlreadyChecked = false;\n  },\n\n  _isPrintable: function(event) {\n    // What a control/printable character is varies wildly based on the browser.\n    // - most control characters (arrows, backspace) do not send a `keypress`\n    // event\n    //   in Chrome, but the *do* on Firefox\n    // - in Firefox, when they do send a `keypress` event, control chars have\n    //   a charCode = 0, keyCode = xx (for ex. 40 for down arrow)\n    // - printable characters always send a keypress event.\n    // - in Firefox, printable chars always have a keyCode = 0. In Chrome, the\n    // keyCode\n    //   always matches the charCode.\n    // None of this makes any sense.\n\n    // For these keys, ASCII code == browser keycode.\n    var anyNonPrintable = (event.keyCode == 8) ||  // backspace\n        (event.keyCode == 9) ||                    // tab\n        (event.keyCode == 13) ||                   // enter\n        (event.keyCode == 27);                     // escape\n\n    // For these keys, make sure it's a browser keycode and not an ASCII code.\n    var mozNonPrintable = (event.keyCode == 19) ||  // pause\n        (event.keyCode == 20) ||                    // caps lock\n        (event.keyCode == 45) ||                    // insert\n        (event.keyCode == 46) ||                    // delete\n        (event.keyCode == 144) ||                   // num lock\n        (event.keyCode == 145) ||                   // scroll lock\n        (event.keyCode > 32 &&\n         event.keyCode < 41) ||  // page up/down, end, home, arrows\n        (event.keyCode > 111 && event.keyCode < 124);  // fn keys\n\n    return !anyNonPrintable && !(event.charCode == 0 && mozNonPrintable);\n  },\n\n  _onKeypress: function(event) {\n    if (!this.allowedPattern && this.inputElement.type !== 'number') {\n      return;\n    }\n    var regexp = this._patternRegExp;\n    if (!regexp) {\n      return;\n    }\n\n    // Handle special keys and backspace\n    if (event.metaKey || event.ctrlKey || event.altKey) {\n      return;\n    }\n\n    // Check the pattern either here or in `_onInput`, but not in both.\n    this._patternAlreadyChecked = true;\n\n    var thisChar = String.fromCharCode(event.charCode);\n    if (this._isPrintable(event) && !regexp.test(thisChar)) {\n      event.preventDefault();\n      this._announceInvalidCharacter(\n          'Invalid character ' + thisChar + ' not entered.');\n    }\n  },\n\n  _checkPatternValidity: function() {\n    var regexp = this._patternRegExp;\n    if (!regexp) {\n      return true;\n    }\n    for (var i = 0; i < this.inputElement.value.length; i++) {\n      if (!regexp.test(this.inputElement.value[i])) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  /**\n   * Returns true if `value` is valid. The validator provided in `validator`\n   * will be used first, then any constraints.\n   * @return {boolean} True if the value is valid.\n   */\n  validate: function() {\n    if (!this.inputElement) {\n      this.invalid = false;\n      return true;\n    }\n\n    // Use the nested input's native validity.\n    var valid = this.inputElement.checkValidity();\n\n    // Only do extra checking if the browser thought this was valid.\n    if (valid) {\n      // Empty, required input is invalid\n      if (this.required && this.bindValue === '') {\n        valid = false;\n      } else if (this.hasValidator()) {\n        valid = IronValidatableBehavior.validate.call(this, this.bindValue);\n      }\n    }\n\n    this.invalid = !valid;\n    this.fire('iron-input-validate');\n    return valid;\n  },\n\n  _announceInvalidCharacter: function(message) {\n    this.fire('iron-announce', {text: message});\n  },\n\n  _computeValue: function(bindValue) {\n    return bindValue;\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\n\n/**\n * Use `IronCheckedElementBehavior` to implement a custom element that has a\n * `checked` property, which can be used for validation if the element is also\n * `required`. Element instances implementing this behavior will also be\n * registered for use in an `iron-form` element.\n *\n * @demo demo/index.html\n * @polymerBehavior IronCheckedElementBehavior\n */\nexport const IronCheckedElementBehaviorImpl = {\n\n  properties: {\n    /**\n     * Fired when the checked state changes.\n     *\n     * @event iron-change\n     */\n\n    /**\n     * Gets or sets the state, `true` is checked and `false` is unchecked.\n     */\n    checked: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      notify: true,\n      observer: '_checkedChanged'\n    },\n\n    /**\n     * If true, the button toggles the active state with each tap or press\n     * of the spacebar.\n     */\n    toggles: {type: Boolean, value: true, reflectToAttribute: true},\n\n    /* Overriden from IronFormElementBehavior */\n    value: {type: String, value: 'on', observer: '_valueChanged'}\n  },\n\n  observers: ['_requiredChanged(required)'],\n\n  created: function() {\n    // Used by `iron-form` to handle the case that an element with this behavior\n    // doesn't have a role of 'checkbox' or 'radio', but should still only be\n    // included when the form is serialized if `this.checked === true`.\n    this._hasIronCheckedElementBehavior = true;\n  },\n\n  /**\n   * Returns false if the element is required and not checked, and true\n   * otherwise.\n   * @param {*=} _value Ignored.\n   * @return {boolean} true if `required` is false or if `checked` is true.\n   */\n  _getValidity: function(_value) {\n    return this.disabled || !this.required || this.checked;\n  },\n\n  /**\n   * Update the aria-required label when `required` is changed.\n   */\n  _requiredChanged: function() {\n    if (this.required) {\n      this.setAttribute('aria-required', 'true');\n    } else {\n      this.removeAttribute('aria-required');\n    }\n  },\n\n  /**\n   * Fire `iron-changed` when the checked state changes.\n   */\n  _checkedChanged: function() {\n    this.active = this.checked;\n    this.fire('iron-change');\n  },\n\n  /**\n   * Reset value to 'on' if it is set to `undefined`.\n   */\n  _valueChanged: function() {\n    if (this.value === undefined || this.value === null) {\n      this.value = 'on';\n    }\n  }\n};\n\n/** @polymerBehavior */\nexport const IronCheckedElementBehavior = [\n  IronFormElementBehavior,\n  IronValidatableBehavior,\n  IronCheckedElementBehaviorImpl\n];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronCheckedElementBehavior, IronCheckedElementBehaviorImpl} from '@polymer/iron-checked-element-behavior/iron-checked-element-behavior.js';\n\nimport {PaperInkyFocusBehavior} from './paper-inky-focus-behavior.js';\nimport {PaperRippleBehavior} from './paper-ripple-behavior.js';\n\n/**\n * Use `PaperCheckedElementBehavior` to implement a custom element that has a\n * `checked` property similar to `IronCheckedElementBehavior` and is compatible\n * with having a ripple effect.\n * @polymerBehavior PaperCheckedElementBehavior\n */\nexport const PaperCheckedElementBehaviorImpl = {\n  /**\n   * Synchronizes the element's checked state with its ripple effect.\n   */\n  _checkedChanged: function() {\n    IronCheckedElementBehaviorImpl._checkedChanged.call(this);\n    if (this.hasRipple()) {\n      if (this.checked) {\n        this._ripple.setAttribute('checked', '');\n      } else {\n        this._ripple.removeAttribute('checked');\n      }\n    }\n  },\n\n  /**\n   * Synchronizes the element's `active` and `checked` state.\n   */\n  _buttonStateChanged: function() {\n    PaperRippleBehavior._buttonStateChanged.call(this);\n    if (this.disabled) {\n      return;\n    }\n    if (this.isAttached) {\n      this.checked = this.active;\n    }\n  }\n};\n\n/** @polymerBehavior */\nexport const PaperCheckedElementBehavior = [\n  PaperInkyFocusBehavior,\n  IronCheckedElementBehavior,\n  PaperCheckedElementBehaviorImpl\n];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-menu-button/paper-menu-button.js';\nimport '@polymer/paper-ripple/paper-ripple.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport './paper-dropdown-menu-icons.js';\nimport './paper-dropdown-menu-shared-styles.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport * as gestures from '@polymer/polymer/lib/utils/gestures.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design: [Dropdown\nmenus](https://www.google.com/design/spec/components/buttons.html#buttons-dropdown-buttons)\n\n`paper-dropdown-menu` is similar to a native browser select element.\n`paper-dropdown-menu` works with selectable content. The currently selected\nitem is displayed in the control. If no item is selected, the `label` is\ndisplayed instead.\n\nExample:\n\n    <paper-dropdown-menu label=\"Your favourite pastry\">\n      <paper-listbox slot=\"dropdown-content\">\n        <paper-item>Croissant</paper-item>\n        <paper-item>Donut</paper-item>\n        <paper-item>Financier</paper-item>\n        <paper-item>Madeleine</paper-item>\n      </paper-listbox>\n    </paper-dropdown-menu>\n\nThis example renders a dropdown menu with 4 options.\n\nThe child element with the slot `dropdown-content` is used as the dropdown\nmenu. This can be a [`paper-listbox`](paper-listbox), or any other or\nelement that acts like an [`iron-selector`](iron-selector).\n\nSpecifically, the menu child must fire an\n[`iron-select`](iron-selector#event-iron-select) event when one of its\nchildren is selected, and an\n[`iron-deselect`](iron-selector#event-iron-deselect) event when a child is\ndeselected. The selected or deselected item must be passed as the event's\n`detail.item` property.\n\nApplications can listen for the `iron-select` and `iron-deselect` events\nto react when options are selected and deselected.\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dropdown-menu` | A mixin that is applied to the element host | `{}`\n`--paper-dropdown-menu-disabled` | A mixin that is applied to the element host when disabled | `{}`\n`--paper-dropdown-menu-ripple` | A mixin that is applied to the internal ripple | `{}`\n`--paper-dropdown-menu-button` | A mixin that is applied to the internal menu button | `{}`\n`--paper-dropdown-menu-input` | A mixin that is applied to the internal paper input | `{}`\n`--paper-dropdown-menu-icon` | A mixin that is applied to the internal icon | `{}`\n\nYou can also use any of the `paper-input-container` and `paper-menu-button`\nstyle mixins and custom properties to style the internal input and menu button\nrespectively.\n\n@group Paper Elements\n@element paper-dropdown-menu\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-dropdown-menu-shared-styles\"></style>\n\n    <!-- this div fulfills an a11y requirement for combobox, do not remove -->\n    <span role=\"button\"></span>\n    <paper-menu-button id=\"menuButton\" vertical-align=\"[[verticalAlign]]\" horizontal-align=\"[[horizontalAlign]]\" dynamic-align=\"[[dynamicAlign]]\" vertical-offset=\"[[_computeMenuVerticalOffset(noLabelFloat, verticalOffset)]]\" disabled=\"[[disabled]]\" no-animations=\"[[noAnimations]]\" on-iron-select=\"_onIronSelect\" on-iron-deselect=\"_onIronDeselect\" opened=\"{{opened}}\" close-on-activate allow-outside-scroll=\"[[allowOutsideScroll]]\" restore-focus-on-close=\"[[restoreFocusOnClose]]\">\n      <!-- support hybrid mode: user might be using paper-menu-button 1.x which distributes via <content> -->\n      <div class=\"dropdown-trigger\" slot=\"dropdown-trigger\">\n        <paper-ripple></paper-ripple>\n        <!-- paper-input has type=\"text\" for a11y, do not remove -->\n        <paper-input type=\"text\" invalid=\"[[invalid]]\" readonly disabled=\"[[disabled]]\" value=\"[[value]]\" placeholder=\"[[placeholder]]\" error-message=\"[[errorMessage]]\" always-float-label=\"[[alwaysFloatLabel]]\" no-label-float=\"[[noLabelFloat]]\" label=\"[[label]]\">\n          <!-- support hybrid mode: user might be using paper-input 1.x which distributes via <content> -->\n          <iron-icon icon=\"paper-dropdown-menu:arrow-drop-down\" suffix slot=\"suffix\"></iron-icon>\n        </paper-input>\n      </div>\n      <slot id=\"content\" name=\"dropdown-content\" slot=\"dropdown-content\"></slot>\n    </paper-menu-button>\n`,\n\n  is: 'paper-dropdown-menu',\n\n  behaviors: [\n    IronButtonState,\n    IronControlState,\n    IronFormElementBehavior,\n    IronValidatableBehavior\n  ],\n\n  properties: {\n    /**\n     * The derived \"label\" of the currently selected item. This value\n     * is the `label` property on the selected item if set, or else the\n     * trimmed text content of the selected item.\n     */\n    selectedItemLabel: {type: String, notify: true, readOnly: true},\n\n    /**\n     * The last selected item. An item is selected if the dropdown menu has\n     * a child with slot `dropdown-content`, and that child triggers an\n     * `iron-select` event with the selected `item` in the `detail`.\n     *\n     * @type {?Object}\n     */\n    selectedItem: {type: Object, notify: true, readOnly: true},\n\n    /**\n     * The value for this element that will be used when submitting in\n     * a form. It reflects the value of `selectedItemLabel`. If set directly,\n     * it will not update the `selectedItemLabel` value.\n     */\n    value: {\n      type: String,\n      notify: true,\n    },\n\n    /**\n     * The label for the dropdown.\n     */\n    label: {type: String},\n\n    /**\n     * The placeholder for the dropdown.\n     */\n    placeholder: {type: String},\n\n    /**\n     * The error message to display when invalid.\n     */\n    errorMessage: {type: String},\n\n    /**\n     * True if the dropdown is open. Otherwise, false.\n     */\n    opened:\n        {type: Boolean, notify: true, value: false, observer: '_openedChanged'},\n\n    /**\n     * By default, the dropdown will constrain scrolling on the page\n     * to itself when opened.\n     * Set to true in order to prevent scroll from being constrained\n     * to the dropdown when it opens.\n     */\n    allowOutsideScroll: {type: Boolean, value: false},\n\n    /**\n     * Set to true to disable the floating label. Bind this to the\n     * `<paper-input-container>`'s `noLabelFloat` property.\n     */\n    noLabelFloat: {type: Boolean, value: false, reflectToAttribute: true},\n\n    /**\n     * Set to true to always float the label. Bind this to the\n     * `<paper-input-container>`'s `alwaysFloatLabel` property.\n     */\n    alwaysFloatLabel: {type: Boolean, value: false},\n\n    /**\n     * Set to true to disable animations when opening and closing the\n     * dropdown.\n     */\n    noAnimations: {type: Boolean, value: false},\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * horizontally relative to the dropdown trigger.\n     */\n    horizontalAlign: {type: String, value: 'right'},\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * vertically relative to the dropdown trigger.\n     */\n    verticalAlign: {type: String, value: 'top'},\n\n    /**\n     * Overrides the vertical offset computed in\n     * _computeMenuVerticalOffset.\n     */\n    verticalOffset: Number,\n\n    /**\n     * If true, the `horizontalAlign` and `verticalAlign` properties will\n     * be considered preferences instead of strict requirements when\n     * positioning the dropdown and may be changed if doing so reduces\n     * the area of the dropdown falling outside of `fitInto`.\n     */\n    dynamicAlign: {type: Boolean},\n\n    /**\n     * Whether focus should be restored to the dropdown when the menu closes.\n     */\n    restoreFocusOnClose: {type: Boolean, value: true},\n  },\n\n  listeners: {'tap': '_onTap'},\n\n  /**\n   * @type {!Object}\n   */\n  keyBindings: {'up down': 'open', 'esc': 'close'},\n\n  hostAttributes:\n      {role: 'combobox', 'aria-autocomplete': 'none', 'aria-haspopup': 'true'},\n\n  observers: ['_selectedItemChanged(selectedItem)'],\n\n  attached: function() {\n    // NOTE(cdata): Due to timing, a preselected value in a `IronSelectable`\n    // child will cause an `iron-select` event to fire while the element is\n    // still in a `DocumentFragment`. This has the effect of causing\n    // handlers not to fire. So, we double check this value on attached:\n    var contentElement = this.contentElement;\n    if (contentElement && contentElement.selectedItem) {\n      this._setSelectedItem(contentElement.selectedItem);\n    }\n  },\n\n  /**\n   * The content element that is contained by the dropdown menu, if any.\n   */\n  get contentElement() {\n    // Polymer 2.x returns slot.assignedNodes which can contain text nodes.\n    var nodes = dom(this.$.content).getDistributedNodes();\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      if (nodes[i].nodeType === Node.ELEMENT_NODE) {\n        return nodes[i];\n      }\n    }\n  },\n\n  /**\n   * Show the dropdown content.\n   */\n  open: function() {\n    this.$.menuButton.open();\n  },\n\n  /**\n   * Hide the dropdown content.\n   */\n  close: function() {\n    this.$.menuButton.close();\n  },\n\n  /**\n   * A handler that is called when `iron-select` is fired.\n   *\n   * @param {CustomEvent} event An `iron-select` event.\n   */\n  _onIronSelect: function(event) {\n    this._setSelectedItem(event.detail.item);\n  },\n\n  /**\n   * A handler that is called when `iron-deselect` is fired.\n   *\n   * @param {CustomEvent} event An `iron-deselect` event.\n   */\n  _onIronDeselect: function(event) {\n    this._setSelectedItem(null);\n  },\n\n  /**\n   * A handler that is called when the dropdown is tapped.\n   *\n   * @param {CustomEvent} event A tap event.\n   */\n  _onTap: function(event) {\n    if (gestures.findOriginalTarget(event) === this) {\n      this.open();\n    }\n  },\n\n  /**\n   * Compute the label for the dropdown given a selected item.\n   *\n   * @param {Element} selectedItem A selected Element item, with an\n   * optional `label` property.\n   */\n  _selectedItemChanged: function(selectedItem) {\n    var value = '';\n    if (!selectedItem) {\n      value = '';\n    } else {\n      value = selectedItem.label || selectedItem.getAttribute('label') ||\n          selectedItem.textContent.trim();\n    }\n\n    this.value = value;\n    this._setSelectedItemLabel(value);\n  },\n\n  /**\n   * Compute the vertical offset of the menu based on the value of\n   * `noLabelFloat`.\n   *\n   * @param {boolean} noLabelFloat True if the label should not float\n   * @param {number=} opt_verticalOffset Optional offset from the user\n   * above the input, otherwise false.\n   */\n  _computeMenuVerticalOffset: function(noLabelFloat, opt_verticalOffset) {\n    // Override offset if it's passed from the user.\n    if (opt_verticalOffset) {\n      return opt_verticalOffset;\n    }\n\n    // NOTE(cdata): These numbers are somewhat magical because they are\n    // derived from the metrics of elements internal to `paper-input`'s\n    // template. The metrics will change depending on whether or not the\n    // input has a floating label.\n    return noLabelFloat ? -4 : 8;\n  },\n\n  /**\n   * Returns false if the element is required and does not have a selection,\n   * and true otherwise.\n   * @param {*=} _value Ignored.\n   * @return {boolean} true if `required` is false, or if `required` is true\n   * and the element has a valid selection.\n   */\n  _getValidity: function(_value) {\n    return this.disabled || !this.required || (this.required && !!this.value);\n  },\n\n  _openedChanged: function() {\n    var openState = this.opened ? 'true' : 'false';\n    var e = this.contentElement;\n    if (e) {\n      e.setAttribute('aria-expanded', openState);\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-iconset-svg/iron-iconset-svg.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML =\n    `<iron-iconset-svg name=\"paper-dropdown-menu\" size=\"24\">\n<svg><defs>\n<g id=\"arrow-drop-down\"><path d=\"M7 10l5 5 5-5z\"></path></g>\n</defs></svg>\n</iron-iconset-svg>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/paper-styles/default-theme.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML =\n    `<dom-module id=\"paper-dropdown-menu-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        text-align: left;\n\n        /* NOTE(cdata): Both values are needed, since some phones require the\n         * value to be \\`transparent\\`.\n         */\n        -webkit-tap-highlight-color: rgba(0,0,0,0);\n        -webkit-tap-highlight-color: transparent;\n\n        --paper-input-container-input: {\n          overflow: hidden;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          max-width: 100%;\n          box-sizing: border-box;\n          cursor: pointer;\n        };\n\n        @apply --paper-dropdown-menu;\n      }\n\n      :host([disabled]) {\n        @apply --paper-dropdown-menu-disabled;\n      }\n\n      :host([noink]) paper-ripple {\n        display: none;\n      }\n\n      :host([no-label-float]) paper-ripple {\n        top: 8px;\n      }\n\n      paper-ripple {\n        top: 12px;\n        left: 0px;\n        bottom: 8px;\n        right: 0px;\n\n        @apply --paper-dropdown-menu-ripple;\n      }\n\n      paper-menu-button {\n        display: block;\n        padding: 0;\n\n        @apply --paper-dropdown-menu-button;\n      }\n\n      paper-input {\n        @apply --paper-dropdown-menu-input;\n      }\n\n      iron-icon {\n        color: var(--disabled-text-color);\n\n        @apply --paper-dropdown-menu-icon;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/default-theme.js';\n\nimport {PaperCheckedElementBehavior} from '@polymer/paper-behaviors/paper-checked-element-behavior.js';\nimport {PaperInkyFocusBehaviorImpl} from '@polymer/paper-behaviors/paper-inky-focus-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {afterNextRender} from '@polymer/polymer/lib/utils/render-status.js';\n\nconst template = html`<style>\n  :host {\n    display: inline-block;\n    white-space: nowrap;\n    cursor: pointer;\n    --calculated-paper-checkbox-size: var(--paper-checkbox-size, 18px);\n    /* -1px is a sentinel for the default and is replaced in \\`attached\\`. */\n    --calculated-paper-checkbox-ink-size: var(--paper-checkbox-ink-size, -1px);\n    @apply --paper-font-common-base;\n    line-height: 0;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  :host(:focus) {\n    outline: none;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  #checkboxContainer {\n    display: inline-block;\n    position: relative;\n    width: var(--calculated-paper-checkbox-size);\n    height: var(--calculated-paper-checkbox-size);\n    min-width: var(--calculated-paper-checkbox-size);\n    margin: var(--paper-checkbox-margin, initial);\n    vertical-align: var(--paper-checkbox-vertical-align, middle);\n    background-color: var(--paper-checkbox-unchecked-background-color, transparent);\n  }\n\n  #ink {\n    position: absolute;\n\n    /* Center the ripple in the checkbox by negative offsetting it by\n     * (inkWidth - rippleWidth) / 2 */\n    top: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n    left: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n    width: var(--calculated-paper-checkbox-ink-size);\n    height: var(--calculated-paper-checkbox-ink-size);\n    color: var(--paper-checkbox-unchecked-ink-color, var(--primary-text-color));\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  #ink:dir(rtl) {\n    right: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n    left: auto;\n  }\n\n  #ink[checked] {\n    color: var(--paper-checkbox-checked-ink-color, var(--primary-color));\n  }\n\n  #checkbox {\n    position: relative;\n    box-sizing: border-box;\n    height: 100%;\n    border: solid 2px;\n    border-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n    border-radius: 2px;\n    pointer-events: none;\n    -webkit-transition: background-color 140ms, border-color 140ms;\n    transition: background-color 140ms, border-color 140ms;\n\n    -webkit-transition-duration: var(--paper-checkbox-animation-duration, 140ms);\n    transition-duration: var(--paper-checkbox-animation-duration, 140ms);\n  }\n\n  /* checkbox checked animations */\n  #checkbox.checked #checkmark {\n    -webkit-animation: checkmark-expand 140ms ease-out forwards;\n    animation: checkmark-expand 140ms ease-out forwards;\n\n    -webkit-animation-duration: var(--paper-checkbox-animation-duration, 140ms);\n    animation-duration: var(--paper-checkbox-animation-duration, 140ms);\n  }\n\n  @-webkit-keyframes checkmark-expand {\n    0% {\n      -webkit-transform: scale(0, 0) rotate(45deg);\n    }\n    100% {\n      -webkit-transform: scale(1, 1) rotate(45deg);\n    }\n  }\n\n  @keyframes checkmark-expand {\n    0% {\n      transform: scale(0, 0) rotate(45deg);\n    }\n    100% {\n      transform: scale(1, 1) rotate(45deg);\n    }\n  }\n\n  #checkbox.checked {\n    background-color: var(--paper-checkbox-checked-color, var(--primary-color));\n    border-color: var(--paper-checkbox-checked-color, var(--primary-color));\n  }\n\n  #checkmark {\n    position: absolute;\n    width: 36%;\n    height: 70%;\n    border-style: solid;\n    border-top: none;\n    border-left: none;\n    border-right-width: calc(2/15 * var(--calculated-paper-checkbox-size));\n    border-bottom-width: calc(2/15 * var(--calculated-paper-checkbox-size));\n    border-color: var(--paper-checkbox-checkmark-color, white);\n    -webkit-transform-origin: 97% 86%;\n    transform-origin: 97% 86%;\n    box-sizing: content-box; /* protect against page-level box-sizing */\n  }\n\n  #checkmark:dir(rtl) {\n    -webkit-transform-origin: 50% 14%;\n    transform-origin: 50% 14%;\n  }\n\n  /* label */\n  #checkboxLabel {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    padding-left: var(--paper-checkbox-label-spacing, 8px);\n    white-space: normal;\n    line-height: normal;\n    color: var(--paper-checkbox-label-color, var(--primary-text-color));\n    @apply --paper-checkbox-label;\n  }\n\n  :host([checked]) #checkboxLabel {\n    color: var(--paper-checkbox-label-checked-color, var(--paper-checkbox-label-color, var(--primary-text-color)));\n    @apply --paper-checkbox-label-checked;\n  }\n\n  #checkboxLabel:dir(rtl) {\n    padding-right: var(--paper-checkbox-label-spacing, 8px);\n    padding-left: 0;\n  }\n\n  #checkboxLabel[hidden] {\n    display: none;\n  }\n\n  /* disabled state */\n\n  :host([disabled]) #checkbox {\n    opacity: 0.5;\n    border-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n  }\n\n  :host([disabled][checked]) #checkbox {\n    background-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n    opacity: 0.5;\n  }\n\n  :host([disabled]) #checkboxLabel  {\n    opacity: 0.65;\n  }\n\n  /* invalid state */\n  #checkbox.invalid:not(.checked) {\n    border-color: var(--paper-checkbox-error-color, var(--error-color));\n  }\n</style>\n\n<div id=\"checkboxContainer\">\n  <div id=\"checkbox\" class$=\"[[_computeCheckboxClass(checked, invalid)]]\">\n    <div id=\"checkmark\" class$=\"[[_computeCheckmarkClass(checked)]]\"></div>\n  </div>\n</div>\n\n<div id=\"checkboxLabel\"><slot></slot></div>`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design:\n[Checkbox](https://www.google.com/design/spec/components/selection-controls.html#selection-controls-checkbox)\n\n`paper-checkbox` is a button that can be either checked or unchecked. User can\ntap the checkbox to check or uncheck it. Usually you use checkboxes to allow\nuser to select multiple options from a set. If you have a single ON/OFF option,\navoid using a single checkbox and use `paper-toggle-button` instead.\n\nExample:\n\n    <paper-checkbox>label</paper-checkbox>\n\n    <paper-checkbox checked> label</paper-checkbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-checkbox-unchecked-background-color` | Checkbox background color when the input is not checked | `transparent`\n`--paper-checkbox-unchecked-color` | Checkbox border color when the input is not checked | `--primary-text-color`\n`--paper-checkbox-unchecked-ink-color` | Selected/focus ripple color when the input is not checked | `--primary-text-color`\n`--paper-checkbox-checked-color` | Checkbox color when the input is checked | `--primary-color`\n`--paper-checkbox-checked-ink-color` | Selected/focus ripple color when the input is checked | `--primary-color`\n`--paper-checkbox-checkmark-color` | Checkmark color | `white`\n`--paper-checkbox-label-color` | Label color | `--primary-text-color`\n`--paper-checkbox-label-checked-color` | Label color when the input is checked | `--paper-checkbox-label-color`\n`--paper-checkbox-label-spacing` | Spacing between the label and the checkbox | `8px`\n`--paper-checkbox-label` | Mixin applied to the label | `{}`\n`--paper-checkbox-label-checked` | Mixin applied to the label when the input is checked | `{}`\n`--paper-checkbox-error-color` | Checkbox color when invalid | `--error-color`\n`--paper-checkbox-size` | Size of the checkbox | `18px`\n`--paper-checkbox-ink-size` | Size of the ripple | `48px`\n`--paper-checkbox-margin` | Margin around the checkbox container | `initial`\n`--paper-checkbox-vertical-align` | Vertical alignment of the checkbox container | `middle`\n\nThis element applies the mixin `--paper-font-common-base` but does not import\n`paper-styles/typography.html`. In order to apply the `Roboto` font to this\nelement, make sure you've imported `paper-styles/typography.html`.\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-checkbox',\n\n  behaviors: [PaperCheckedElementBehavior],\n\n  /** @private */\n  hostAttributes: {role: 'checkbox', 'aria-checked': false, tabindex: 0},\n\n  properties: {\n    /**\n     * Fired when the checked state changes due to user interaction.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when the checked state changes.\n     *\n     * @event iron-change\n     */\n    ariaActiveAttribute: {type: String, value: 'aria-checked'}\n  },\n\n  attached: function() {\n    // Wait until styles have resolved to check for the default sentinel.\n    // See polymer#4009 for more details.\n    afterNextRender(this, function() {\n      var inkSize =\n          this.getComputedStyleValue('--calculated-paper-checkbox-ink-size')\n              .trim();\n      // If unset, compute and set the default `--paper-checkbox-ink-size`.\n      if (inkSize === '-1px') {\n        var checkboxSizeText =\n            this.getComputedStyleValue('--calculated-paper-checkbox-size')\n                .trim();\n\n        var units = 'px';\n        var unitsMatches = checkboxSizeText.match(/[A-Za-z]+$/);\n        if (unitsMatches !== null) {\n          units = unitsMatches[0];\n        }\n\n        var checkboxSize = parseFloat(checkboxSizeText);\n        var defaultInkSize = (8 / 3) * checkboxSize;\n\n        if (units === 'px') {\n          defaultInkSize = Math.floor(defaultInkSize);\n\n          // The checkbox and ripple need to have the same parity so that their\n          // centers align.\n          if (defaultInkSize % 2 !== checkboxSize % 2) {\n            defaultInkSize++;\n          }\n        }\n\n        this.updateStyles({\n          '--paper-checkbox-ink-size': defaultInkSize + units,\n        });\n      }\n    });\n  },\n\n  _computeCheckboxClass: function(checked, invalid) {\n    var className = '';\n    if (checked) {\n      className += 'checked ';\n    }\n    if (invalid) {\n      className += 'invalid';\n    }\n    return className;\n  },\n\n  _computeCheckmarkClass: function(checked) {\n    return checked ? '' : 'hidden';\n  },\n\n  // create ripple inside the checkboxContainer\n  _createRipple: function() {\n    this._rippleContainer = this.$.checkboxContainer;\n    return PaperInkyFocusBehaviorImpl._createRipple.call(this);\n  }\n\n});\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute_object_id\";\n\nexport const computeStateName = (stateObj: HassEntity): string => {\n  return stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n};\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute_domain\";\n\nexport const computeStateDomain = (stateObj: HassEntity) => {\n  return computeDomain(stateObj.entity_id);\n};\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/color.js';\nimport './paper-spinner-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperSpinnerBehavior} from './paper-spinner-behavior.js';\n\nconst template = html`\n  <style include=\"paper-spinner-styles\"></style>\n\n  <div id=\"spinnerContainer\" class-name=\"[[__computeContainerClasses(active, __coolingDown)]]\" on-animationend=\"__reset\" on-webkit-animation-end=\"__reset\">\n    <div class=\"spinner-layer layer-1\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-2\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-3\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-4\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design: [Progress &\nactivity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a multiple color material design circular spinner.\n\n    <paper-spinner active></paper-spinner>\n\nThe default spinner cycles between four layers of colors; by default they are\nblue, red, yellow and green. It can be customized to cycle between four\ndifferent colors. Use <paper-spinner-lite> for single color spinners.\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If\nnot provided, it defaults to 'loading'. Empty alt can be provided to mark the\nelement as decorative if alternative content is provided in another form (e.g. a\ntext block following the spinner).\n\n    <paper-spinner alt=\"Loading contacts list\" active></paper-spinner>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-layer-1-color` | Color of the first spinner rotation | `--google-blue-500`\n`--paper-spinner-layer-2-color` | Color of the second spinner rotation | `--google-red-500`\n`--paper-spinner-layer-3-color` | Color of the third spinner rotation | `--google-yellow-500`\n`--paper-spinner-layer-4-color` | Color of the fourth spinner rotation | `--google-green-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n@group Paper Elements\n@element paper-spinner\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-spinner',\n\n  behaviors: [PaperSpinnerBehavior]\n});\n","/** Compute the object ID of a state. */\nexport const computeObjectId = (entityId: string): string => {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `Polymer.IronScrollTargetBehavior` allows an element to respond to scroll\n * events from a designated scroll target.\n *\n * Elements that consume this behavior can override the `_scrollHandler`\n * method to add logic on the scroll event.\n *\n * @demo demo/scrolling-region.html Scrolling Region\n * @demo demo/document.html Document Element\n * @polymerBehavior\n */\nexport const IronScrollTargetBehavior = {\n\n  properties: {\n\n    /**\n     * Specifies the element that will handle the scroll event\n     * on the behalf of the current element. This is typically a reference to an\n     *element, but there are a few more posibilities:\n     *\n     * ### Elements id\n     *\n     *```html\n     * <div id=\"scrollable-element\" style=\"overflow: auto;\">\n     *  <x-element scroll-target=\"scrollable-element\">\n     *    <!-- Content-->\n     *  </x-element>\n     * </div>\n     *```\n     * In this case, the `scrollTarget` will point to the outer div element.\n     *\n     * ### Document scrolling\n     *\n     * For document scrolling, you can use the reserved word `document`:\n     *\n     *```html\n     * <x-element scroll-target=\"document\">\n     *   <!-- Content -->\n     * </x-element>\n     *```\n     *\n     * ### Elements reference\n     *\n     *```js\n     * appHeader.scrollTarget = document.querySelector('#scrollable-element');\n     *```\n     *\n     * @type {HTMLElement}\n     * @default document\n     */\n    scrollTarget: {\n      type: HTMLElement,\n      value: function() {\n        return this._defaultScrollTarget;\n      }\n    }\n  },\n\n  observers: ['_scrollTargetChanged(scrollTarget, isAttached)'],\n\n  /**\n   * True if the event listener should be installed.\n   */\n  _shouldHaveListener: true,\n\n  _scrollTargetChanged: function(scrollTarget, isAttached) {\n    var eventTarget;\n\n    if (this._oldScrollTarget) {\n      this._toggleScrollListener(false, this._oldScrollTarget);\n      this._oldScrollTarget = null;\n    }\n    if (!isAttached) {\n      return;\n    }\n    // Support element id references\n    if (scrollTarget === 'document') {\n      this.scrollTarget = this._doc;\n\n    } else if (typeof scrollTarget === 'string') {\n      var domHost = this.domHost;\n\n      this.scrollTarget = domHost && domHost.$ ?\n          domHost.$[scrollTarget] :\n          dom(this.ownerDocument).querySelector('#' + scrollTarget);\n\n    } else if (this._isValidScrollTarget()) {\n      this._oldScrollTarget = scrollTarget;\n      this._toggleScrollListener(this._shouldHaveListener, scrollTarget);\n    }\n  },\n\n  /**\n   * Runs on every scroll event. Consumer of this behavior may override this\n   * method.\n   *\n   * @protected\n   */\n  _scrollHandler: function scrollHandler() {},\n\n  /**\n   * The default scroll target. Consumers of this behavior may want to customize\n   * the default scroll target.\n   *\n   * @type {Element}\n   */\n  get _defaultScrollTarget() {\n    return this._doc;\n  },\n\n  /**\n   * Shortcut for the document element\n   *\n   * @type {Element}\n   */\n  get _doc() {\n    return this.ownerDocument.documentElement;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  get _scrollTop() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageYOffset :\n                                               this.scrollTarget.scrollTop;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  get _scrollLeft() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageXOffset :\n                                               this.scrollTarget.scrollLeft;\n    }\n    return 0;\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  set _scrollTop(top) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(window.pageXOffset, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  set _scrollLeft(left) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, window.pageYOffset);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n    }\n  },\n\n  /**\n   * Scrolls the content to a particular place.\n   *\n   * @method scroll\n   * @param {number|!{left: number, top: number}} leftOrOptions The left position or scroll options\n   * @param {number=} top The top position\n   * @return {void}\n   */\n  scroll: function(leftOrOptions, top) {\n    var left;\n\n    if (typeof leftOrOptions === 'object') {\n      left = leftOrOptions.left;\n      top = leftOrOptions.top;\n    } else {\n      left = leftOrOptions;\n    }\n\n    left = left || 0;\n    top = top || 0;\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Gets the width of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetWidth() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerWidth :\n                                               this.scrollTarget.offsetWidth;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the height of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetHeight() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerHeight :\n                                               this.scrollTarget.offsetHeight;\n    }\n    return 0;\n  },\n\n  /**\n   * Returns true if the scroll target is a valid HTMLElement.\n   *\n   * @return {boolean}\n   */\n  _isValidScrollTarget: function() {\n    return this.scrollTarget instanceof HTMLElement;\n  },\n\n  _toggleScrollListener: function(yes, scrollTarget) {\n    var eventTarget = scrollTarget === this._doc ? window : scrollTarget;\n    if (yes) {\n      if (!this._boundScrollHandler) {\n        this._boundScrollHandler = this._scrollHandler.bind(this);\n        eventTarget.addEventListener('scroll', this._boundScrollHandler);\n      }\n    } else {\n      if (this._boundScrollHandler) {\n        eventTarget.removeEventListener('scroll', this._boundScrollHandler);\n        this._boundScrollHandler = null;\n      }\n    }\n  },\n\n  /**\n   * Enables or disables the scroll event listener.\n   *\n   * @param {boolean} yes True to add the event, False to remove it.\n   */\n  toggleScrollListener: function(yes) {\n    this._shouldHaveListener = yes;\n    this._toggleScrollListener(yes, this.scrollTarget);\n  }\n\n};\n","import { customElement } from \"lit-element\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = `\n    <style>\n      .content {\n        padding: 28px 20px 0;\n        max-width: 640px;\n        margin: 0 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 20px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        width: 100%;\n        max-width: 500px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n    </style>\n    <div class=\"content\">\n      <div class=\"header\"><slot name=\"header\"></slot></div>\n      <div class=\"together\">\n        <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n        <div class=\"panel\"><slot></slot></div>\n      </div>\n    </div>\n    `;\n  }\n}\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {AppLayoutBehavior} from '../app-layout-behavior/app-layout-behavior.js';\n\n/**\napp-header-layout is a wrapper element that positions an app-header and other\ncontent. This element uses the document scroll by default, but it can also\ndefine its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of\nits container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n@group App Elements\n@element app-header-layout\n@demo app-header-layout/demo/simple.html Simple Demo\n@demo app-header-layout/demo/scrolling-region.html Scrolling Region\n@demo app-header-layout/demo/music.html Music Demo\n@demo app-header-layout/demo/footer.html Footer Demo\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n        position: relative;\n        z-index: 0;\n      }\n\n      #wrapper ::slotted([slot=header]) {\n        @apply --layout-fixed-top;\n        z-index: 1;\n      }\n\n      #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) {\n        height: 100%;\n      }\n\n      :host([has-scrolling-region]) #wrapper ::slotted([slot=header]) {\n        position: absolute;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) #wrapper #contentContainer {\n        @apply --layout-fit;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n        position: relative;\n      }\n\n      :host([fullbleed]) {\n        @apply --layout-vertical;\n        @apply --layout-fit;\n      }\n\n      :host([fullbleed]) #wrapper,\n      :host([fullbleed]) #wrapper #contentContainer {\n        @apply --layout-vertical;\n        @apply --layout-flex;\n      }\n\n      #contentContainer {\n        /* Create a stacking context here so that all children appear below the header. */\n        position: relative;\n        z-index: 0;\n      }\n\n      @media print {\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          overflow-y: visible;\n        }\n      }\n\n    </style>\n\n    <div id=\"wrapper\" class=\"initializing\">\n      <slot id=\"headerSlot\" name=\"header\"></slot>\n\n      <div id=\"contentContainer\">\n        <slot></slot>\n      </div>\n    </div>\n`,\n\n  is: 'app-header-layout',\n  behaviors: [AppLayoutBehavior],\n\n  properties: {\n    /**\n     * If true, the current element will have its own scrolling region.\n     * Otherwise, it will use the document scroll to control the header.\n     */\n    hasScrollingRegion: {type: Boolean, value: false, reflectToAttribute: true}\n  },\n\n  observers: ['resetLayout(isAttached, hasScrollingRegion)'],\n\n  /**\n   * A reference to the app-header element.\n   *\n   * @property header\n   */\n  get header() {\n    return dom(this.$.headerSlot).getDistributedNodes()[0];\n  },\n\n  _updateLayoutStates: function() {\n    var header = this.header;\n    if (!this.isAttached || !header) {\n      return;\n    }\n    // Remove the initializing class, which staticly positions the header and\n    // the content until the height of the header can be read.\n    this.$.wrapper.classList.remove('initializing');\n    // Update scroll target.\n    header.scrollTarget = this.hasScrollingRegion ?\n        this.$.contentContainer :\n        this.ownerDocument.documentElement;\n    // Get header height here so that style reads are batched together before\n    // style writes (i.e. getBoundingClientRect() below).\n    var headerHeight = header.offsetHeight;\n    // Update the header position.\n    if (!this.hasScrollingRegion) {\n      requestAnimationFrame(function() {\n        var rect = this.getBoundingClientRect();\n        var rightOffset = document.documentElement.clientWidth - rect.right;\n        header.style.left = rect.left + 'px';\n        header.style.right = rightOffset + 'px';\n      }.bind(this));\n    } else {\n      header.style.left = '';\n      header.style.right = '';\n    }\n    // Update the content container position.\n    var containerStyle = this.$.contentContainer.style;\n    if (header.fixed && !header.condenses && this.hasScrollingRegion) {\n      // If the header size does not change and we're using a scrolling region,\n      // exclude the header area from the scrolling region so that the header\n      // doesn't overlap the scrollbar.\n      containerStyle.marginTop = headerHeight + 'px';\n      containerStyle.paddingTop = '';\n    } else {\n      containerStyle.paddingTop = headerHeight + 'px';\n      containerStyle.marginTop = '';\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {AppLayoutBehavior} from '../app-layout-behavior/app-layout-behavior.js';\nimport {AppScrollEffectsBehavior} from '../app-scroll-effects/app-scroll-effects-behavior.js';\n\n/**\napp-header is container element for app-toolbars at the top of the screen that\ncan have scroll effects. By default, an app-header moves away from the viewport\nwhen scrolling down and if using `reveals`, the header slides back when\nscrolling back up. For example:\n\n```html\n<app-header reveals>\n  <app-toolbar>\n    <div main-title>App name</div>\n  </app-toolbar>\n</app-header>\n```\n\napp-header can also condense when scrolling down. To achieve this behavior, the\nheader must have a larger height than the `sticky` element in the light DOM. For\nexample:\n\n```html\n<app-header style=\"height: 96px;\" condenses fixed>\n  <app-toolbar style=\"height: 64px;\">\n    <div main-title>App name</div>\n  </app-toolbar>\n</app-header>\n```\n\nIn this case the header is initially `96px` tall, and it shrinks to `64px` when\nscrolling down. That is what is meant by \"condensing\".\n\n### Sticky element\n\nThe element that is positioned fixed to top of the header's `scrollTarget` when\na threshold is reached, similar to `position: sticky` in CSS. This element\n**must** be an immediate child of app-header. By default, the `sticky` element\nis the first `app-toolbar that is an immediate child of app-header.\n\n```html\n<app-header condenses>\n  <app-toolbar> Sticky element </app-toolbar>\n</app-header>\n```\n\n#### Customizing the sticky element\n\n```html\n<app-header condenses>\n  <app-toolbar></app-toolbar>\n  <app-toolbar sticky> Sticky element </app-toolbar>\n</app-header>\n```\n\n### Scroll target\n\nThe app-header's `scrollTarget` property allows to customize the scrollable\nelement to which the header responds when the user scrolls. By default,\napp-header uses the document as the scroll target, but you can customize this\nproperty by setting the id of the element, e.g.\n\n```html\n<div id=\"scrollingRegion\" style=\"overflow-y: auto;\">\n  <app-header scroll-target=\"scrollingRegion\">\n  </app-header>\n</div>\n```\n\nIn this case, the `scrollTarget` property points to the outer div element.\nAlternatively, you can set this property programmatically:\n\n```js\nappHeader.scrollTarget = document.querySelector(\"#scrollingRegion\");\n```\n\n## Backgrounds\napp-header has two background layers that can be used for styling when the\nheader is condensed or when the scrollable element is scrolled to the top.\n\n## Scroll effects\n\nScroll effects are _optional_ visual effects applied in app-header based on\nscroll position. For example, The [Material Design scrolling\ntechniques](https://www.google.com/design/spec/patterns/scrolling-techniques.html)\nrecommends effects that can be installed via the `effects` property. e.g.\n\n```html\n<app-header effects=\"waterfall\">\n  <app-toolbar>App name</app-toolbar>\n</app-header>\n```\n\n#### Importing the effects\n\nTo use the scroll effects, you must explicitly import them in addition to\n`app-header`:\n\n```js\nimport '@polymer/app-layout/app-scroll-effects/app-scroll-effects.js';\n```\n\n#### List of effects\n\n* **blend-background**\nFades in/out two background elements by applying CSS opacity based on scroll\nposition. You can use this effect to smoothly change the background color or\nimage of the header. For example, using the mixin\n`--app-header-background-rear-layer` lets you assign a different background when\nthe header is condensed:\n\n```css\napp-header {\n  background-color: red;\n  --app-header-background-rear-layer: {\n    /* The header is blue when condensed *\\/\n    background-color: blue;\n  };\n}\n```\n\n* **fade-background**\nUpon scrolling past a threshold, this effect will trigger an opacity transition\nto fade in/out the backgrounds. Compared to the `blend-background` effect, this\neffect doesn't interpolate the opacity based on scroll position.\n\n\n* **parallax-background**\nA simple parallax effect that vertically translates the backgrounds based on a\nfraction of the scroll position. For example:\n\n```css\napp-header {\n  --app-header-background-front-layer: {\n    background-image: url(...);\n  };\n}\n```\n```html\n<app-header style=\"height: 300px;\" effects=\"parallax-background\">\n  <app-toolbar>App name</app-toolbar>\n</app-header>\n```\n\nThe fraction determines how far the background moves relative to the scroll\nposition. This value can be assigned via the `scalar` config value and it is\ntypically a value between 0 and 1 inclusive. If `scalar=0`, the background\ndoesn't move away from the header.\n\n* **resize-title**\nProgressively interpolates the size of the title from the element with the\n`main-title` attribute to the element with the `condensed-title` attribute as\nthe header condenses. For example:\n\n```html\n<app-header condenses reveals effects=\"resize-title\">\n  <app-toolbar>\n      <h4 condensed-title>App name</h4>\n  </app-toolbar>\n  <app-toolbar>\n      <h1 main-title>App name</h1>\n  </app-toolbar>\n</app-header>\n```\n\n* **resize-snapped-title**\nUpon scrolling past a threshold, this effect fades in/out the titles using\nopacity transitions. Similarly to `resize-title`, the `main-title` and\n`condensed-title` elements must be placed in the light DOM.\n\n* **waterfall**\nToggles the shadow property in app-header to create a sense of depth (as\nrecommended in the MD spec) between the header and the underneath content. You\ncan change the shadow by customizing the `--app-header-shadow` mixin. For\nexample:\n\n```css\napp-header {\n  --app-header-shadow: {\n    box-shadow: inset 0px 5px 2px -3px rgba(0, 0, 0, 0.2);\n  };\n}\n```\n\n```html\n<app-header condenses reveals effects=\"waterfall\">\n  <app-toolbar>\n      <h1 main-title>App name</h1>\n  </app-toolbar>\n</app-header>\n```\n\n* **material**\nInstalls the waterfall, resize-title, blend-background and parallax-background\neffects.\n\n### Content attributes\n\nAttribute | Description         | Default\n----------|---------------------|----------------------------------------\n`sticky` | Element that remains at the top when the header condenses. | The first app-toolbar in the light DOM.\n\n\n## Styling\n\nMixin | Description | Default\n------|-------------|----------\n`--app-header-background-front-layer` | Applies to the front layer of the background. | {}\n`--app-header-background-rear-layer` | Applies to the rear layer of the background. | {}\n`--app-header-shadow` | Applies to the shadow. | {}\n\n@group App Elements\n@element app-header\n@demo app-header/demo/blend-background-1.html Blend Background Image\n@demo app-header/demo/blend-background-2.html Blend 2 Background Images\n@demo app-header/demo/blend-background-3.html Blend Background Colors\n@demo app-header/demo/contacts.html Contacts Demo\n@demo app-header/demo/give.html Resize Snapped Title Demo\n@demo app-header/demo/music.html Reveals Demo\n@demo app-header/demo/no-effects.html Condenses and Reveals Demo\n@demo app-header/demo/notes.html Fixed with Dynamic Shadow Demo\n@demo app-header/demo/custom-sticky-element-1.html Custom Sticky Element Demo 1\n@demo app-header/demo/custom-sticky-element-2.html Custom Sticky Element Demo 2\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        position: relative;\n        display: block;\n        transition-timing-function: linear;\n        transition-property: -webkit-transform;\n        transition-property: transform;\n      }\n\n      :host::before {\n        position: absolute;\n        right: 0px;\n        bottom: -5px;\n        left: 0px;\n        width: 100%;\n        height: 5px;\n        content: \"\";\n        transition: opacity 0.4s;\n        pointer-events: none;\n        opacity: 0;\n        box-shadow: inset 0px 5px 6px -3px rgba(0, 0, 0, 0.4);\n        will-change: opacity;\n        @apply --app-header-shadow;\n      }\n\n      :host([shadow])::before {\n        opacity: 1;\n      }\n\n      #background {\n        @apply --layout-fit;\n        overflow: hidden;\n      }\n\n      #backgroundFrontLayer,\n      #backgroundRearLayer {\n        @apply --layout-fit;\n        height: 100%;\n        pointer-events: none;\n        background-size: cover;\n      }\n\n      #backgroundFrontLayer {\n        @apply --app-header-background-front-layer;\n      }\n\n      #backgroundRearLayer {\n        opacity: 0;\n        @apply --app-header-background-rear-layer;\n      }\n\n      #contentContainer {\n        position: relative;\n        width: 100%;\n        height: 100%;\n      }\n\n      :host([disabled]),\n      :host([disabled])::after,\n      :host([disabled]) #backgroundFrontLayer,\n      :host([disabled]) #backgroundRearLayer,\n      /* Silent scrolling should not run CSS transitions */\n      :host([silent-scroll]),\n      :host([silent-scroll])::after,\n      :host([silent-scroll]) #backgroundFrontLayer,\n      :host([silent-scroll]) #backgroundRearLayer {\n        transition: none !important;\n      }\n\n      :host([disabled]) ::slotted(app-toolbar:first-of-type),\n      :host([disabled]) ::slotted([sticky]),\n      /* Silent scrolling should not run CSS transitions */\n      :host([silent-scroll]) ::slotted(app-toolbar:first-of-type),\n      :host([silent-scroll]) ::slotted([sticky]) {\n        transition: none !important;\n      }\n\n    </style>\n    <div id=\"contentContainer\">\n      <slot id=\"slot\"></slot>\n    </div>\n`,\n\n  is: 'app-header',\n  behaviors: [AppScrollEffectsBehavior, AppLayoutBehavior],\n\n  properties: {\n    /**\n     * If true, the header will automatically collapse when scrolling down.\n     * That is, the `sticky` element remains visible when the header is fully\n     *condensed whereas the rest of the elements will collapse below `sticky`\n     *element.\n     *\n     * By default, the `sticky` element is the first toolbar in the light DOM:\n     *\n     *```html\n     * <app-header condenses>\n     *   <app-toolbar>This toolbar remains on top</app-toolbar>\n     *   <app-toolbar></app-toolbar>\n     *   <app-toolbar></app-toolbar>\n     * </app-header>\n     * ```\n     *\n     * Additionally, you can specify which toolbar or element remains visible in\n     *condensed mode by adding the `sticky` attribute to that element. For\n     *example: if we want the last toolbar to remain visible, we can add the\n     *`sticky` attribute to it.\n     *\n     *```html\n     * <app-header condenses>\n     *   <app-toolbar></app-toolbar>\n     *   <app-toolbar></app-toolbar>\n     *   <app-toolbar sticky>This toolbar remains on top</app-toolbar>\n     * </app-header>\n     * ```\n     *\n     * Note the `sticky` element must be a direct child of `app-header`.\n     */\n    condenses: {type: Boolean, value: false},\n\n    /**\n     * Mantains the header fixed at the top so it never moves away.\n     */\n    fixed: {type: Boolean, value: false},\n\n    /**\n     * Slides back the header when scrolling back up.\n     */\n    reveals: {type: Boolean, value: false},\n\n    /**\n     * Displays a shadow below the header.\n     */\n    shadow: {type: Boolean, reflectToAttribute: true, value: false}\n  },\n\n  observers: ['_configChanged(isAttached, condenses, fixed)'],\n\n  /**\n   * A cached offsetHeight of the current element.\n   *\n   * @type {number}\n   */\n  _height: 0,\n\n  /**\n   * The distance in pixels the header will be translated to when scrolling.\n   *\n   * @type {number}\n   */\n  _dHeight: 0,\n\n  /**\n   * The offsetTop of `_stickyEl`\n   *\n   * @type {number}\n   */\n  _stickyElTop: 0,\n\n  /**\n   * A reference to the element that remains visible when the header condenses.\n   *\n   * @type {HTMLElement}\n   */\n  _stickyElRef: null,\n\n  /**\n   * The header's top value used for the `transformY`\n   *\n   * @type {number}\n   */\n  _top: 0,\n\n  /**\n   * The current scroll progress.\n   *\n   * @type {number}\n   */\n  _progress: 0,\n\n  _wasScrollingDown: false,\n  _initScrollTop: 0,\n  _initTimestamp: 0,\n  _lastTimestamp: 0,\n  _lastScrollTop: 0,\n\n  /**\n   * The distance the header is allowed to move away.\n   *\n   * @type {number}\n   */\n  get _maxHeaderTop() {\n    return this.fixed ? this._dHeight : this._height + 5;\n  },\n\n  /**\n   * Returns a reference to the sticky element.\n   *\n   * @return {HTMLElement}?\n   */\n  get _stickyEl() {\n    if (this._stickyElRef) {\n      return this._stickyElRef;\n    }\n    var nodes = dom(this.$.slot).getDistributedNodes();\n    // Get the element with the sticky attribute on it or the first element in\n    // the light DOM.\n    for (var i = 0, node; node = /** @type {!HTMLElement} */ (nodes[i]); i++) {\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        if (node.hasAttribute('sticky')) {\n          this._stickyElRef = node;\n          break;\n        } else if (!this._stickyElRef) {\n          this._stickyElRef = node;\n        }\n      }\n    }\n    return this._stickyElRef;\n  },\n\n  _configChanged: function() {\n    this.resetLayout();\n    this._notifyLayoutChanged();\n  },\n\n  _updateLayoutStates: function() {\n    if (this.offsetWidth === 0 && this.offsetHeight === 0) {\n      return;\n    }\n    var scrollTop = this._clampedScrollTop;\n    var firstSetup = this._height === 0 || scrollTop === 0;\n    var currentDisabled = this.disabled;\n    this._height = this.offsetHeight;\n    this._stickyElRef = null;\n    this.disabled = true;\n    // prepare for measurement\n    if (!firstSetup) {\n      this._updateScrollState(0, true);\n    }\n    if (this._mayMove()) {\n      this._dHeight =\n          this._stickyEl ? this._height - this._stickyEl.offsetHeight : 0;\n    } else {\n      this._dHeight = 0;\n    }\n    this._stickyElTop = this._stickyEl ? this._stickyEl.offsetTop : 0;\n    this._setUpEffect();\n    if (firstSetup) {\n      this._updateScrollState(scrollTop, true);\n    } else {\n      this._updateScrollState(this._lastScrollTop, true);\n      this._layoutIfDirty();\n    }\n    // restore no transition\n    this.disabled = currentDisabled;\n  },\n\n  /**\n   * Updates the scroll state.\n   *\n   * @param {number} scrollTop\n   * @param {boolean=} forceUpdate (default: false)\n   */\n  _updateScrollState: function(scrollTop, forceUpdate) {\n    if (this._height === 0) {\n      return;\n    }\n    var progress = 0;\n    var top = 0;\n    var lastTop = this._top;\n    var lastScrollTop = this._lastScrollTop;\n    var maxHeaderTop = this._maxHeaderTop;\n    var dScrollTop = scrollTop - this._lastScrollTop;\n    var absDScrollTop = Math.abs(dScrollTop);\n    var isScrollingDown = scrollTop > this._lastScrollTop;\n    var now = performance.now();\n\n    if (this._mayMove()) {\n      top = this._clamp(\n          this.reveals ? lastTop + dScrollTop : scrollTop, 0, maxHeaderTop);\n    }\n    if (scrollTop >= this._dHeight) {\n      top = this.condenses && !this.fixed ? Math.max(this._dHeight, top) : top;\n      this.style.transitionDuration = '0ms';\n    }\n    if (this.reveals && !this.disabled && absDScrollTop < 100) {\n      // set the initial scroll position\n      if (now - this._initTimestamp > 300 ||\n          this._wasScrollingDown !== isScrollingDown) {\n        this._initScrollTop = scrollTop;\n        this._initTimestamp = now;\n      }\n      if (scrollTop >= maxHeaderTop) {\n        // check if the header is allowed to snap\n        if (Math.abs(this._initScrollTop - scrollTop) > 30 ||\n            absDScrollTop > 10) {\n          if (isScrollingDown && scrollTop >= maxHeaderTop) {\n            top = maxHeaderTop;\n          } else if (!isScrollingDown && scrollTop >= this._dHeight) {\n            top = this.condenses && !this.fixed ? this._dHeight : 0;\n          }\n          var scrollVelocity = dScrollTop / (now - this._lastTimestamp);\n          this.style.transitionDuration =\n              this._clamp((top - lastTop) / scrollVelocity, 0, 300) + 'ms';\n        } else {\n          top = this._top;\n        }\n      }\n    }\n    if (this._dHeight === 0) {\n      progress = scrollTop > 0 ? 1 : 0;\n    } else {\n      progress = top / this._dHeight;\n    }\n    if (!forceUpdate) {\n      this._lastScrollTop = scrollTop;\n      this._top = top;\n      this._wasScrollingDown = isScrollingDown;\n      this._lastTimestamp = now;\n    }\n    if (forceUpdate || progress !== this._progress || lastTop !== top ||\n        scrollTop === 0) {\n      this._progress = progress;\n      this._runEffects(progress, top);\n      this._transformHeader(top);\n    }\n  },\n\n  /**\n   * Returns true if the current header is allowed to move as the user scrolls.\n   *\n   * @return {boolean}\n   */\n  _mayMove: function() {\n    return this.condenses || !this.fixed;\n  },\n\n  /**\n   * Returns true if the current header will condense based on the size of the\n   * header and the `consenses` property.\n   *\n   * @return {boolean}\n   */\n  willCondense: function() {\n    return this._dHeight > 0 && this.condenses;\n  },\n\n  /**\n   * Returns true if the current element is on the screen.\n   * That is, visible in the current viewport.\n   *\n   * @method isOnScreen\n   * @return {boolean}\n   */\n  isOnScreen: function() {\n    return this._height !== 0 && this._top < this._height;\n  },\n\n  /**\n   * Returns true if there's content below the current element.\n   *\n   * @method isContentBelow\n   * @return {boolean}\n   */\n  isContentBelow: function() {\n    return this._top === 0 ? this._clampedScrollTop > 0 :\n                             this._clampedScrollTop - this._maxHeaderTop >= 0;\n  },\n\n  /**\n   * Transforms the header.\n   *\n   * @param {number} y\n   */\n  _transformHeader: function(y) {\n    this.translate3d(0, (-y) + 'px', 0);\n    if (this._stickyEl) {\n      this.translate3d(\n          0,\n          this.condenses && y >= this._stickyElTop ?\n              (Math.min(y, this._dHeight) - this._stickyElTop) + 'px' :\n              0,\n          0,\n          this._stickyEl);\n    }\n  },\n\n  _clamp: function(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n\n  _ensureBgContainers: function() {\n    if (!this._bgContainer) {\n      this._bgContainer = document.createElement('div');\n      this._bgContainer.id = 'background';\n      this._bgRear = document.createElement('div');\n      this._bgRear.id = 'backgroundRearLayer';\n      this._bgContainer.appendChild(this._bgRear);\n      this._bgFront = document.createElement('div');\n      this._bgFront.id = 'backgroundFrontLayer';\n      this._bgContainer.appendChild(this._bgFront);\n      dom(this.root).insertBefore(this._bgContainer, this.$.contentContainer);\n    }\n  },\n\n  _getDOMRef: function(id) {\n    switch (id) {\n      case 'backgroundFrontLayer':\n        this._ensureBgContainers();\n        return this._bgFront;\n      case 'backgroundRearLayer':\n        this._ensureBgContainers();\n        return this._bgRear;\n      case 'background':\n        this._ensureBgContainers();\n        return this._bgContainer;\n      case 'mainTitle':\n        return dom(this).querySelector('[main-title]');\n      case 'condensedTitle':\n        return dom(this).querySelector('[condensed-title]');\n    }\n    return null;\n  },\n\n  /**\n   * Returns an object containing the progress value of the scroll effects\n   * and the top position of the header.\n   *\n   * @method getScrollState\n   * @return {Object}\n   */\n  getScrollState: function() {\n    return {progress: this._progress, top: this._top};\n  }\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronScrollTargetBehavior} from '@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js';\nimport {_scrollEffects} from '../helpers/helpers.js';\n\n/**\n * `Polymer.AppScrollEffectsBehavior` provides an interface that allows an\n * element to use scrolls effects.\n *\n * ### Importing the app-layout effects\n *\n * app-layout provides a set of scroll effects that can be used by explicitly\n * importing `app-scroll-effects.js`:\n *\n * ```js\n * import '@polymer/app-layout/app-scroll-effects/app-scroll-effects.js';\n * ```\n *\n * The scroll effects can also be used by individually importing\n * `@polymer/app-layout/app-scroll-effects/effects/[effectName].js`. For\n * example:\n *\n * ```js\n * import '@polymer/app-layout/app-scroll-effects/effects/waterfall.js';\n * ```\n *\n * ### Consuming effects\n *\n * Effects can be consumed via the `effects` property. For example:\n *\n * ```html\n * <app-header effects=\"waterfall\"></app-header>\n * ```\n *\n * ### Creating scroll effects\n *\n * You may want to create a custom scroll effect if you need to modify the CSS\n * of an element based on the scroll position.\n *\n * A scroll effect definition is an object with `setUp()`, `tearDown()` and\n * `run()` functions.\n *\n * To register the effect, you can use\n * `Polymer.AppLayout.registerEffect(effectName, effectDef)` For example, let's\n * define an effect that resizes the header's logo:\n *\n * ```js\n * Polymer.AppLayout.registerEffect('resizable-logo', {\n *   setUp: function(config) {\n *     // the effect's config is passed to the setUp.\n *     this._fxResizeLogo = { logo: Polymer.dom(this).querySelector('[logo]') };\n *   },\n *\n *   run: function(progress) {\n *      // the progress of the effect\n *      this.transform('scale3d(' + progress + ', '+ progress +', 1)',\n * this._fxResizeLogo.logo);\n *   },\n *\n *   tearDown: function() {\n *      // clean up and reset of states\n *      delete this._fxResizeLogo;\n *   }\n * });\n * ```\n * Now, you can consume the effect:\n *\n * ```html\n * <app-header id=\"appHeader\" effects=\"resizable-logo\">\n *   <img logo src=\"logo.svg\">\n * </app-header>\n * ```\n *\n * ### Imperative API\n *\n * ```js\n * var logoEffect = appHeader.createEffect('resizable-logo', effectConfig);\n * // run the effect: logoEffect.run(progress);\n * // tear down the effect: logoEffect.tearDown();\n * ```\n *\n * ### Configuring effects\n *\n * For effects installed via the `effects` property, their configuration can be\n * set via the `effectsConfig` property. For example:\n *\n * ```html\n * <app-header effects=\"waterfall\"\n *   effects-config='{\"waterfall\": {\"startsAt\": 0, \"endsAt\": 0.5}}'>\n * </app-header>\n * ```\n *\n * All effects have a `startsAt` and `endsAt` config property. They specify at\n * what point the effect should start and end. This value goes from 0 to 1\n * inclusive.\n *\n * @polymerBehavior\n */\nexport const AppScrollEffectsBehavior = [\n  IronScrollTargetBehavior,\n  {\n\n    properties: {\n\n      /**\n       * A space-separated list of the effects names that will be triggered when\n       * the user scrolls. e.g. `waterfall parallax-background` installs the\n       * `waterfall` and `parallax-background`.\n       */\n      effects: {type: String},\n\n      /**\n       * An object that configurates the effects installed via the `effects`\n       * property. e.g.\n       * ```js\n       *  element.effectsConfig = {\n       *   \"blend-background\": {\n       *     \"startsAt\": 0.5\n       *   }\n       * };\n       * ```\n       * Every effect has at least two config properties: `startsAt` and\n       * `endsAt`. These properties indicate when the event should start and end\n       * respectively and relative to the overall element progress. So for\n       * example, if `blend-background` starts at `0.5`, the effect will only\n       * start once the current element reaches 0.5 of its progress. In this\n       * context, the progress is a value in the range of `[0, 1]` that\n       * indicates where this element is on the screen relative to the viewport.\n       */\n      effectsConfig: {\n        type: Object,\n        value: function() {\n          return {};\n        }\n      },\n\n      /**\n       * Disables CSS transitions and scroll effects on the element.\n       */\n      disabled: {type: Boolean, reflectToAttribute: true, value: false},\n\n      /**\n       * Allows to set a `scrollTop` threshold. When greater than 0,\n       * `thresholdTriggered` is true only when the scroll target's `scrollTop`\n       * has reached this value.\n       *\n       * For example, if `threshold = 100`, `thresholdTriggered` is true when\n       * the `scrollTop` is at least `100`.\n       */\n      threshold: {type: Number, value: 0},\n\n      /**\n       * True if the `scrollTop` threshold (set in `scrollTopThreshold`) has\n       * been reached.\n       */\n      thresholdTriggered: {\n        type: Boolean,\n        notify: true,\n        readOnly: true,\n        reflectToAttribute: true\n      }\n    },\n\n    observers: ['_effectsChanged(effects, effectsConfig, isAttached)'],\n\n    /**\n     * Updates the scroll state. This method should be overridden\n     * by the consumer of this behavior.\n     *\n     * @method _updateScrollState\n     * @param {number} scrollTop\n     */\n    _updateScrollState: function(scrollTop) {},\n\n    /**\n     * Returns true if the current element is on the screen.\n     * That is, visible in the current viewport. This method should be\n     * overridden by the consumer of this behavior.\n     *\n     * @method isOnScreen\n     * @return {boolean}\n     */\n    isOnScreen: function() {\n      return false;\n    },\n\n    /**\n     * Returns true if there's content below the current element. This method\n     * should be overridden by the consumer of this behavior.\n     *\n     * @method isContentBelow\n     * @return {boolean}\n     */\n    isContentBelow: function() {\n      return false;\n    },\n\n    /**\n     * List of effects handlers that will take place during scroll.\n     *\n     * @type {Array<Function>}\n     */\n    _effectsRunFn: null,\n\n    /**\n     * List of the effects definitions installed via the `effects` property.\n     *\n     * @type {Array<Object>}\n     */\n    _effects: null,\n\n    /**\n     * The clamped value of `_scrollTop`.\n     * @type number\n     */\n    get _clampedScrollTop() {\n      return Math.max(0, this._scrollTop);\n    },\n\n    attached: function() {\n      this._scrollStateChanged();\n    },\n\n    detached: function() {\n      this._tearDownEffects();\n    },\n\n    /**\n     * Creates an effect object from an effect's name that can be used to run\n     * effects programmatically.\n     *\n     * @method createEffect\n     * @param {string} effectName The effect's name registered via `Polymer.AppLayout.registerEffect`.\n     * @param {Object=} effectConfig The effect config object. (Optional)\n     * @return {Object} An effect object with the following functions:\n     *\n     *  * `effect.setUp()`, Sets up the requirements for the effect.\n     *       This function is called automatically before the `effect` function\n     * returns.\n     *  * `effect.run(progress, y)`, Runs the effect given a `progress`.\n     *  * `effect.tearDown()`, Cleans up any DOM nodes or element references\n     * used by the effect.\n     *\n     * Example:\n     * ```js\n     * var parallax = element.createEffect('parallax-background');\n     * // runs the effect\n     * parallax.run(0.5, 0);\n     * ```\n     */\n    createEffect: function(effectName, effectConfig) {\n      var effectDef = _scrollEffects[effectName];\n      if (!effectDef) {\n        throw new ReferenceError(this._getUndefinedMsg(effectName));\n      }\n      var prop = this._boundEffect(effectDef, effectConfig || {});\n      prop.setUp();\n      return prop;\n    },\n\n    /**\n     * Called when `effects` or `effectsConfig` changes.\n     */\n    _effectsChanged: function(effects, effectsConfig, isAttached) {\n      this._tearDownEffects();\n\n      if (!effects || !isAttached) {\n        return;\n      }\n      effects.split(' ').forEach(function(effectName) {\n        var effectDef;\n        if (effectName !== '') {\n          if ((effectDef = _scrollEffects[effectName])) {\n            this._effects.push(\n                this._boundEffect(effectDef, effectsConfig[effectName]));\n          } else {\n            console.warn(this._getUndefinedMsg(effectName));\n          }\n        }\n      }, this);\n\n      this._setUpEffect();\n    },\n\n    /**\n     * Forces layout\n     */\n    _layoutIfDirty: function() {\n      return this.offsetWidth;\n    },\n\n    /**\n     * Returns an effect object bound to the current context.\n     *\n     * @param {Object} effectDef\n     * @param {Object=} effectsConfig The effect config object if the effect accepts config values. (Optional)\n     */\n    _boundEffect: function(effectDef, effectsConfig) {\n      effectsConfig = effectsConfig || {};\n      var startsAt = parseFloat(effectsConfig.startsAt || 0);\n      var endsAt = parseFloat(effectsConfig.endsAt || 1);\n      var deltaS = endsAt - startsAt;\n      var noop = function() {};\n      // fast path if possible\n      var runFn = (startsAt === 0 && endsAt === 1) ?\n          effectDef.run :\n          function(progress, y) {\n            effectDef.run.call(\n                this, Math.max(0, (progress - startsAt) / deltaS), y);\n          };\n      return {\n        setUp: effectDef.setUp ? effectDef.setUp.bind(this, effectsConfig) :\n                                 noop,\n        run: effectDef.run ? runFn.bind(this) : noop,\n        tearDown: effectDef.tearDown ? effectDef.tearDown.bind(this) : noop\n      };\n    },\n\n    /**\n     * Sets up the effects.\n     */\n    _setUpEffect: function() {\n      if (this.isAttached && this._effects) {\n        this._effectsRunFn = [];\n        this._effects.forEach(function(effectDef) {\n          // install the effect only if no error was reported\n          if (effectDef.setUp() !== false) {\n            this._effectsRunFn.push(effectDef.run);\n          }\n        }, this);\n      }\n    },\n\n    /**\n     * Tears down the effects.\n     */\n    _tearDownEffects: function() {\n      if (this._effects) {\n        this._effects.forEach(function(effectDef) {\n          effectDef.tearDown();\n        });\n      }\n      this._effectsRunFn = [];\n      this._effects = [];\n    },\n\n    /**\n     * Runs the effects.\n     *\n     * @param {number} p The progress\n     * @param {number} y The top position of the current element relative to the viewport.\n     */\n    _runEffects: function(p, y) {\n      if (this._effectsRunFn) {\n        this._effectsRunFn.forEach(function(run) {\n          run(p, y);\n        });\n      }\n    },\n\n    /**\n     * Overrides the `_scrollHandler`.\n     */\n    _scrollHandler: function() {\n      this._scrollStateChanged();\n    },\n\n    _scrollStateChanged: function() {\n      if (!this.disabled) {\n        var scrollTop = this._clampedScrollTop;\n        this._updateScrollState(scrollTop);\n        if (this.threshold > 0) {\n          this._setThresholdTriggered(scrollTop >= this.threshold);\n        }\n      }\n    },\n\n    /**\n     * Override this method to return a reference to a node in the local DOM.\n     * The node is consumed by a scroll effect.\n     *\n     * @param {string} id The id for the node.\n     */\n    _getDOMRef: function(id) {\n      console.warn('_getDOMRef', '`' + id + '` is undefined');\n    },\n\n    _getUndefinedMsg: function(effectName) {\n      return 'Scroll effect `' + effectName + '` is undefined. ' +\n          'Did you forget to import app-layout/app-scroll-effects/effects/' +\n          effectName + '.html ?';\n    }\n\n  }\n];\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nexport const _scrollEffects = {};\nexport let _scrollTimer = null;\n\nexport const scrollTimingFunction = function easeOutQuad(t, b, c, d) {\n  t /= d;\n  return -c * t * (t - 2) + b;\n};\n\n/**\n * Registers a scroll effect to be used in elements that implement the\n * `Polymer.AppScrollEffectsBehavior` behavior.\n *\n * @param {string} effectName The effect name.\n * @param {Object} effectDef The effect definition.\n */\nexport const registerEffect = function registerEffect(effectName, effectDef) {\n  if (_scrollEffects[effectName] != null) {\n    throw new Error('effect `' + effectName + '` is already registered.');\n  }\n  _scrollEffects[effectName] = effectDef;\n};\n\nexport const queryAllRoot = function(selector, root) {\n  var queue = [root];\n  var matches = [];\n\n  while (queue.length > 0) {\n    var node = queue.shift();\n    matches.push.apply(matches, node.querySelectorAll(selector));\n    for (var i = 0; node.children[i]; i++) {\n      if (node.children[i].shadowRoot) {\n        queue.push(node.children[i].shadowRoot);\n      }\n    }\n  }\n  return matches;\n};\n\n/**\n * Scrolls to a particular set of coordinates in a scroll target.\n * If the scroll target is not defined, then it would use the main document as\n * the target.\n *\n * To scroll in a smooth fashion, you can set the option `behavior: 'smooth'`.\n * e.g.\n *\n * ```js\n * Polymer.AppLayout.scroll({top: 0, behavior: 'smooth'});\n * ```\n *\n * To scroll in a silent mode, without notifying scroll changes to any\n * app-layout elements, you can set the option `behavior: 'silent'`. This is\n * particularly useful we you are using `app-header` and you desire to scroll to\n * the top of a scrolling region without running scroll effects. e.g.\n *\n * ```js\n * Polymer.AppLayout.scroll({top: 0, behavior: 'silent'});\n * ```\n *\n * @param {Object} options {top: Number, left: Number, behavior: String(smooth | silent)}\n */\nexport const scroll = function scroll(options) {\n  options = options || {};\n\n  var docEl = document.documentElement;\n  var target = options.target || docEl;\n  var hasNativeScrollBehavior =\n      'scrollBehavior' in target.style && target.scroll;\n  var scrollClassName = 'app-layout-silent-scroll';\n  var scrollTop = options.top || 0;\n  var scrollLeft = options.left || 0;\n  var scrollTo = target === docEl ? window.scrollTo :\n                                    function scrollTo(scrollLeft, scrollTop) {\n                                      target.scrollLeft = scrollLeft;\n                                      target.scrollTop = scrollTop;\n                                    };\n\n  if (options.behavior === 'smooth') {\n    if (hasNativeScrollBehavior) {\n      target.scroll(options);\n\n    } else {\n      var timingFn = scrollTimingFunction;\n      var startTime = Date.now();\n      var currentScrollTop =\n          target === docEl ? window.pageYOffset : target.scrollTop;\n      var currentScrollLeft =\n          target === docEl ? window.pageXOffset : target.scrollLeft;\n      var deltaScrollTop = scrollTop - currentScrollTop;\n      var deltaScrollLeft = scrollLeft - currentScrollLeft;\n      var duration = 300;\n      var updateFrame =\n          (function updateFrame() {\n            var now = Date.now();\n            var elapsedTime = now - startTime;\n\n            if (elapsedTime < duration) {\n              scrollTo(\n                  timingFn(\n                      elapsedTime,\n                      currentScrollLeft,\n                      deltaScrollLeft,\n                      duration),\n                  timingFn(\n                      elapsedTime, currentScrollTop, deltaScrollTop, duration));\n              requestAnimationFrame(updateFrame);\n            } else {\n              scrollTo(scrollLeft, scrollTop);\n            }\n          }).bind(this);\n\n      updateFrame();\n    }\n\n  } else if (options.behavior === 'silent') {\n    var headers = queryAllRoot('app-header', document.body);\n\n    headers.forEach(function(header) {\n      header.setAttribute('silent-scroll', '');\n    });\n\n    // Browsers keep the scroll momentum even if the bottom of the scrolling\n    // content was reached. This means that calling scroll({top: 0, behavior:\n    // 'silent'}) when the momentum is still going will result in more scroll\n    // events and thus scroll effects. This seems to only apply when using\n    // document scrolling. Therefore, when should we remove the class from the\n    // document element?\n\n    if (_scrollTimer) {\n      window.cancelAnimationFrame(_scrollTimer);\n    }\n\n    _scrollTimer = window.requestAnimationFrame(function() {\n      headers.forEach(function(header) {\n        header.removeAttribute('silent-scroll');\n      });\n      _scrollTimer = null;\n    });\n\n    scrollTo(scrollLeft, scrollTop);\n\n  } else {\n    scrollTo(scrollLeft, scrollTop);\n  }\n};\n","const hassAttributeUtil = {};\n\nhassAttributeUtil.DOMAIN_DEVICE_CLASS = {\n  binary_sensor: [\n    \"battery\",\n    \"cold\",\n    \"connectivity\",\n    \"door\",\n    \"garage_door\",\n    \"gas\",\n    \"heat\",\n    \"light\",\n    \"lock\",\n    \"moisture\",\n    \"motion\",\n    \"moving\",\n    \"occupancy\",\n    \"opening\",\n    \"plug\",\n    \"power\",\n    \"presence\",\n    \"problem\",\n    \"safety\",\n    \"smoke\",\n    \"sound\",\n    \"vibration\",\n    \"window\",\n  ],\n  cover: [\n    \"awning\",\n    \"blind\",\n    \"curtain\",\n    \"damper\",\n    \"door\",\n    \"garage\",\n    \"shade\",\n    \"shutter\",\n    \"window\",\n  ],\n  sensor: [\n    \"battery\",\n    \"humidity\",\n    \"illuminance\",\n    \"temperature\",\n    \"pressure\",\n    \"power\",\n    \"signal_strength\",\n    \"timestamp\",\n  ],\n  switch: [\"switch\", \"outlet\"],\n};\n\nhassAttributeUtil.UNKNOWN_TYPE = \"json\";\nhassAttributeUtil.ADD_TYPE = \"key-value\";\n\nhassAttributeUtil.TYPE_TO_TAG = {\n  string: \"ha-customize-string\",\n  json: \"ha-customize-string\",\n  icon: \"ha-customize-icon\",\n  boolean: \"ha-customize-boolean\",\n  array: \"ha-customize-array\",\n  \"key-value\": \"ha-customize-key-value\",\n};\n\n// Attributes here serve dual purpose:\n// 1) Any key of this object won't be shown in more-info window.\n// 2) Any key which has value other than undefined will appear in customization\n//    config according to its value.\nhassAttributeUtil.LOGIC_STATE_ATTRIBUTES = hassAttributeUtil.LOGIC_STATE_ATTRIBUTES || {\n  entity_picture: undefined,\n  friendly_name: { type: \"string\", description: \"Name\" },\n  icon: { type: \"icon\" },\n  emulated_hue: {\n    type: \"boolean\",\n    domains: [\"emulated_hue\"],\n  },\n  emulated_hue_name: {\n    type: \"string\",\n    domains: [\"emulated_hue\"],\n  },\n  haaska_hidden: undefined,\n  haaska_name: undefined,\n  homebridge_hidden: { type: \"boolean\" },\n  homebridge_name: { type: \"string\" },\n  supported_features: undefined,\n  attribution: undefined,\n  restored: undefined,\n  custom_ui_more_info: { type: \"string\" },\n  custom_ui_state_card: { type: \"string\" },\n  device_class: {\n    type: \"array\",\n    options: hassAttributeUtil.DOMAIN_DEVICE_CLASS,\n    description: \"Device class\",\n    domains: [\"binary_sensor\", \"cover\", \"sensor\", \"switch\"],\n  },\n  hidden: { type: \"boolean\", description: \"Hide from UI\" },\n  assumed_state: {\n    type: \"boolean\",\n    domains: [\n      \"switch\",\n      \"light\",\n      \"cover\",\n      \"climate\",\n      \"fan\",\n      \"group\",\n      \"water_heater\",\n    ],\n  },\n  initial_state: {\n    type: \"string\",\n    domains: [\"automation\"],\n  },\n  unit_of_measurement: { type: \"string\" },\n};\n\nexport default hassAttributeUtil;\n","const documentContainer = document.createElement(\"template\");\ndocumentContainer.setAttribute(\"style\", \"display: none;\");\n\ndocumentContainer.innerHTML = `<dom-module id=\"ha-form-style\">\n  <template>\n    <style>\n      .form-group {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        padding: 8px 16px;\n      }\n\n      .form-group label {\n        @apply --layout-flex-2;\n      }\n\n      .form-group .form-control {\n        @apply --layout-flex;\n      }\n\n      .form-group.vertical {\n        @apply --layout-vertical;\n        @apply --layout-start;\n      }\n\n      paper-dropdown-menu.form-control {\n        margin: -9px 0;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild(documentContainer.content);\n","/**\n * Sort function to help sort states by name\n *\n * Usage:\n *   const states = [state1, state2]\n *   states.sort(statessortStatesByName);\n */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeStateName } from \"./compute_state_name\";\n\nexport const sortStatesByName = (entityA: HassEntity, entityB: HassEntity) => {\n  const nameA = computeStateName(entityA);\n  const nameB = computeStateName(entityB);\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  return 0;\n};\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"../../components/ha-card\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\n\nclass HaEntityConfig extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        ha-card {\n          direction: ltr;\n        }\n\n        .device-picker {\n          @apply --layout-horizontal;\n          padding-bottom: 24px;\n        }\n\n        .form-placeholder {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          height: 96px;\n        }\n\n        [hidden]: {\n          display: none;\n        }\n\n        .card-actions {\n          @apply --layout-horizontal;\n          @apply --layout-justified;\n        }\n      </style>\n      <ha-card>\n        <div class=\"card-content\">\n          <div class=\"device-picker\">\n            <paper-dropdown-menu\n              label=\"[[label]]\"\n              class=\"flex\"\n              disabled=\"[[!entities.length]]\"\n            >\n              <paper-listbox\n                slot=\"dropdown-content\"\n                selected=\"{{selectedEntity}}\"\n              >\n                <template is=\"dom-repeat\" items=\"[[entities]]\" as=\"state\">\n                  <paper-item>[[computeSelectCaption(state)]]</paper-item>\n                </template>\n              </paper-listbox>\n            </paper-dropdown-menu>\n          </div>\n\n          <div class=\"form-container\">\n            <template is=\"dom-if\" if=\"[[computeShowPlaceholder(formState)]]\">\n              <div class=\"form-placeholder\">\n                <template is=\"dom-if\" if=\"[[computeShowNoDevices(formState)]]\">\n                  No entities found! :-(\n                </template>\n\n                <template is=\"dom-if\" if=\"[[computeShowSpinner(formState)]]\">\n                  <paper-spinner active=\"\" alt=\"[[formState]]\"></paper-spinner>\n                  [[formState]]\n                </template>\n              </div>\n            </template>\n\n            <div hidden$=\"[[!computeShowForm(formState)]]\" id=\"form\"></div>\n          </div>\n        </div>\n        <div class=\"card-actions\">\n          <mwc-button\n            on-click=\"saveEntity\"\n            disabled=\"[[computeShowPlaceholder(formState)]]\"\n            >SAVE</mwc-button\n          >\n          <template is=\"dom-if\" if=\"[[allowDelete]]\">\n            <mwc-button\n              class=\"warning\"\n              on-click=\"deleteEntity\"\n              disabled=\"[[computeShowPlaceholder(formState)]]\"\n              >DELETE</mwc-button\n            >\n          </template>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: \"hassChanged\",\n      },\n\n      label: {\n        type: String,\n        value: \"Device\",\n      },\n\n      entities: {\n        type: Array,\n        observer: \"entitiesChanged\",\n      },\n\n      allowDelete: {\n        type: Boolean,\n        value: false,\n      },\n\n      selectedEntity: {\n        type: Number,\n        value: -1,\n        observer: \"entityChanged\",\n      },\n\n      formState: {\n        type: String,\n        // no-devices, loading, saving, editing\n        value: \"no-devices\",\n      },\n\n      config: {\n        type: Object,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.formEl = document.createElement(this.config.component);\n    this.formEl.hass = this.hass;\n    this.$.form.appendChild(this.formEl);\n    this.entityChanged(this.selectedEntity);\n  }\n\n  computeSelectCaption(stateObj) {\n    return this.config.computeSelectCaption\n      ? this.config.computeSelectCaption(stateObj)\n      : computeStateName(stateObj);\n  }\n\n  computeShowNoDevices(formState) {\n    return formState === \"no-devices\";\n  }\n\n  computeShowSpinner(formState) {\n    return formState === \"loading\" || formState === \"saving\";\n  }\n\n  computeShowPlaceholder(formState) {\n    return formState !== \"editing\";\n  }\n\n  computeShowForm(formState) {\n    return formState === \"editing\";\n  }\n\n  hassChanged(hass) {\n    if (this.formEl) {\n      this.formEl.hass = hass;\n    }\n  }\n\n  entitiesChanged(entities, oldEntities) {\n    if (entities.length === 0) {\n      this.formState = \"no-devices\";\n      return;\n    }\n    if (!oldEntities) {\n      this.selectedEntity = 0;\n      return;\n    }\n\n    var oldEntityId = oldEntities[this.selectedEntity].entity_id;\n\n    var newIndex = entities.findIndex(function(ent) {\n      return ent.entity_id === oldEntityId;\n    });\n\n    if (newIndex === -1) {\n      this.selectedEntity = 0;\n    } else if (newIndex !== this.selectedEntity) {\n      // Entity moved index\n      this.selectedEntity = newIndex;\n    }\n  }\n\n  entityChanged(index) {\n    if (!this.entities || !this.formEl) return;\n    var entity = this.entities[index];\n    if (!entity) return;\n\n    this.formState = \"loading\";\n    var el = this;\n    this.formEl.loadEntity(entity).then(function() {\n      el.formState = \"editing\";\n    });\n  }\n\n  saveEntity() {\n    this.formState = \"saving\";\n    var el = this;\n    this.formEl.saveEntity().then(function() {\n      el.formState = \"editing\";\n    });\n  }\n}\n\ncustomElements.define(\"ha-entity-config\", HaEntityConfig);\n","import \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaCustomizeArray extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        paper-dropdown-menu {\n          margin: -9px 0;\n        }\n      </style>\n      <paper-dropdown-menu\n        label=\"[[item.description]]\"\n        disabled=\"[[item.secondary]]\"\n        selected-item-label=\"{{item.value}}\"\n        dynamic-align=\"\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          selected=\"[[computeSelected(item)]]\"\n        >\n          <template is=\"dom-repeat\" items=\"[[getOptions(item)]]\" as=\"option\">\n            <paper-item>[[option]]</paper-item>\n          </template>\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notifies: true,\n      },\n    };\n  }\n\n  getOptions(item) {\n    const domain = item.domain || \"*\";\n    const options = item.options[domain] || item.options[\"*\"];\n    if (!options) {\n      this.item.type = \"string\";\n      this.fire(\"item-changed\");\n      return [];\n    }\n    return options.sort();\n  }\n\n  computeSelected(item) {\n    const options = this.getOptions(item);\n    return options.indexOf(item.value);\n  }\n}\ncustomElements.define(\"ha-customize-array\", HaCustomizeArray);\n","import \"@polymer/paper-checkbox/paper-checkbox\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nclass HaCustomizeBoolean extends PolymerElement {\n  static get template() {\n    return html`\n      <paper-checkbox disabled=\"[[item.secondary]]\" checked=\"{{item.value}}\">\n        [[item.description]]\n      </paper-checkbox>\n    `;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notifies: true,\n      },\n    };\n  }\n}\ncustomElements.define(\"ha-customize-boolean\", HaCustomizeBoolean);\n","import \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-input/paper-input\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nclass HaCustomizeIcon extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          @apply --layout-horizontal;\n        }\n        .icon-image {\n          border: 1px solid grey;\n          padding: 8px;\n          margin-right: 20px;\n          margin-top: 10px;\n        }\n      </style>\n      <iron-icon class=\"icon-image\" icon=\"[[item.value]]\"></iron-icon>\n      <paper-input\n        disabled=\"[[item.secondary]]\"\n        label=\"icon\"\n        value=\"{{item.value}}\"\n      >\n      </paper-input>\n    `;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notifies: true,\n      },\n    };\n  }\n}\ncustomElements.define(\"ha-customize-icon\", HaCustomizeIcon);\n","import \"@polymer/paper-input/paper-input\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nclass HaCustomizeKeyValue extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          @apply --layout-horizontal;\n        }\n        paper-input {\n          @apply --layout-flex;\n        }\n        .key {\n          padding-right: 20px;\n        }\n      </style>\n      <paper-input\n        disabled=\"[[item.secondary]]\"\n        class=\"key\"\n        label=\"Attribute name\"\n        value=\"{{item.attribute}}\"\n      >\n      </paper-input>\n      <paper-input\n        disabled=\"[[item.secondary]]\"\n        label=\"Attribute value\"\n        value=\"{{item.value}}\"\n      >\n      </paper-input>\n    `;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notifies: true,\n      },\n    };\n  }\n}\ncustomElements.define(\"ha-customize-key-value\", HaCustomizeKeyValue);\n","import \"@polymer/paper-input/paper-input\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nclass HaCustomizeString extends PolymerElement {\n  static get template() {\n    return html`\n      <paper-input\n        disabled=\"[[item.secondary]]\"\n        label=\"[[getLabel(item)]]\"\n        value=\"{{item.value}}\"\n      >\n      </paper-input>\n    `;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notifies: true,\n      },\n    };\n  }\n\n  getLabel(item) {\n    return item.description + (item.type === \"json\" ? \" (JSON formatted)\" : \"\");\n  }\n}\ncustomElements.define(\"ha-customize-string\", HaCustomizeString);\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport hassAttributeUtil from \"../../../util/hass-attributes-util\";\nimport \"../ha-form-style\";\nimport \"./types/ha-customize-array\";\nimport \"./types/ha-customize-boolean\";\nimport \"./types/ha-customize-icon\";\nimport \"./types/ha-customize-key-value\";\nimport \"./types/ha-customize-string\";\n\nclass HaCustomizeAttribute extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"ha-form-style\">\n        :host {\n          display: block;\n          position: relative;\n          padding-right: 40px;\n        }\n\n        .button {\n          position: absolute;\n          margin-top: -20px;\n          top: 50%;\n          right: 0;\n        }\n      </style>\n      <div id=\"wrapper\" class=\"form-group\"></div>\n      <paper-icon-button\n        class=\"button\"\n        icon=\"[[getIcon(item.secondary)]]\"\n        on-click=\"tapButton\"\n      ></paper-icon-button>\n    `;\n  }\n\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        notify: true,\n        observer: \"itemObserver\",\n      },\n    };\n  }\n\n  tapButton() {\n    if (this.item.secondary) {\n      this.item = { ...this.item, secondary: false };\n    } else {\n      this.item = { ...this.item, closed: true };\n    }\n  }\n\n  getIcon(secondary) {\n    return secondary ? \"hass:pencil\" : \"hass:close\";\n  }\n\n  itemObserver(item) {\n    const wrapper = this.$.wrapper;\n    const tag = hassAttributeUtil.TYPE_TO_TAG[item.type].toUpperCase();\n    let child;\n    if (wrapper.lastChild && wrapper.lastChild.tagName === tag) {\n      child = wrapper.lastChild;\n    } else {\n      if (wrapper.lastChild) {\n        wrapper.removeChild(wrapper.lastChild);\n      }\n      // Creating an element with upper case works fine in Chrome, but in FF it doesn't immediately\n      // become a defined Custom Element. Polymer does that in some later pass.\n      this.$.child = child = document.createElement(tag.toLowerCase());\n      child.className = \"form-control\";\n      child.addEventListener(\"item-changed\", () => {\n        this.item = { ...child.item };\n      });\n    }\n    child.setProperties({ item: this.item });\n    if (child.parentNode === null) {\n      wrapper.appendChild(child);\n    }\n  }\n}\ncustomElements.define(\"ha-customize-attribute\", HaCustomizeAttribute);\n","import { MutableData } from \"@polymer/polymer/lib/mixins/mutable-data\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-customize-attribute\";\n\nclass HaFormCustomizeAttributes extends MutableData(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        [hidden] {\n          display: none;\n        }\n      </style>\n      <template is=\"dom-repeat\" items=\"{{attributes}}\" mutable-data=\"\">\n        <ha-customize-attribute item=\"{{item}}\" hidden$=\"[[item.closed]]\">\n        </ha-customize-attribute>\n      </template>\n    `;\n  }\n\n  static get properties() {\n    return {\n      attributes: {\n        type: Array,\n        notify: true,\n      },\n    };\n  }\n}\ncustomElements.define(\n  \"ha-form-customize-attributes\",\n  HaFormCustomizeAttributes\n);\n","import \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\n\nimport hassAttributeUtil from \"../../../util/hass-attributes-util\";\nimport \"./ha-form-customize-attributes\";\n\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\n\nclass HaFormCustomize extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style ha-form-style\">\n        .warning {\n          color: red;\n        }\n\n        .attributes-text {\n          padding-left: 20px;\n        }\n      </style>\n      <template\n        is=\"dom-if\"\n        if=\"[[computeShowWarning(localConfig, globalConfig)]]\"\n      >\n        <div class=\"warning\">\n          [[localize('ui.panel.config.customize.warning.include_sentence')]]\n          <a\n            href=\"https://www.home-assistant.io/docs/configuration/customizing-devices/#customization-using-the-ui\"\n            target=\"_blank\"\n            >[[localize('ui.panel.config.customize.warning.include_link')]]</a\n          >.<br />\n          [[localize('ui.panel.config.customize.warning.not_applied')]]\n        </div>\n      </template>\n      <template is=\"dom-if\" if=\"[[hasLocalAttributes]]\">\n        <h4 class=\"attributes-text\">\n          [[localize('ui.panel.config.customize.attributes_customize')]]<br />\n        </h4>\n        <ha-form-customize-attributes\n          attributes=\"{{localAttributes}}\"\n        ></ha-form-customize-attributes>\n      </template>\n      <template is=\"dom-if\" if=\"[[hasGlobalAttributes]]\">\n        <h4 class=\"attributes-text\">\n          [[localize('ui.panel.config.customize.attributes_outside')]]<br />\n          [[localize('ui.panel.config.customize.different_include')]]\n        </h4>\n        <ha-form-customize-attributes\n          attributes=\"{{globalAttributes}}\"\n        ></ha-form-customize-attributes>\n      </template>\n      <template is=\"dom-if\" if=\"[[hasExistingAttributes]]\">\n        <h4 class=\"attributes-text\">\n          [[localize('ui.panel.config.customize.attributes_set')]]<br />\n          [[localize('ui.panel.config.customize.attributes_override')]]\n        </h4>\n        <ha-form-customize-attributes\n          attributes=\"{{existingAttributes}}\"\n        ></ha-form-customize-attributes>\n      </template>\n      <template is=\"dom-if\" if=\"[[hasNewAttributes]]\">\n        <h4 class=\"attributes-text\">\n          [[localize('ui.panel.config.customize.attributes_not_set')]]\n        </h4>\n        <ha-form-customize-attributes\n          attributes=\"{{newAttributes}}\"\n        ></ha-form-customize-attributes>\n      </template>\n      <div class=\"form-group\">\n        <paper-dropdown-menu\n          label=\"[[localize('ui.panel.config.customize.pick_attribute')]]\"\n          class=\"flex\"\n          dynamic-align=\"\"\n        >\n          <paper-listbox\n            slot=\"dropdown-content\"\n            selected=\"{{selectedNewAttribute}}\"\n          >\n            <template\n              is=\"dom-repeat\"\n              items=\"[[newAttributesOptions]]\"\n              as=\"option\"\n            >\n              <paper-item>[[option]]</paper-item>\n            </template>\n          </paper-listbox>\n        </paper-dropdown-menu>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      entity: Object,\n\n      localAttributes: {\n        type: Array,\n        computed: \"computeLocalAttributes(localConfig)\",\n      },\n      hasLocalAttributes: Boolean,\n\n      globalAttributes: {\n        type: Array,\n        computed: \"computeGlobalAttributes(localConfig, globalConfig)\",\n      },\n      hasGlobalAttributes: Boolean,\n\n      existingAttributes: {\n        type: Array,\n        computed:\n          \"computeExistingAttributes(localConfig, globalConfig, entity)\",\n      },\n      hasExistingAttributes: Boolean,\n\n      newAttributes: {\n        type: Array,\n        value: [],\n      },\n      hasNewAttributes: Boolean,\n\n      newAttributesOptions: Array,\n      selectedNewAttribute: {\n        type: Number,\n        value: -1,\n        observer: \"selectedNewAttributeObserver\",\n      },\n\n      localConfig: Object,\n      globalConfig: Object,\n    };\n  }\n\n  static get observers() {\n    return [\n      \"attributesObserver(localAttributes.*, globalAttributes.*, existingAttributes.*, newAttributes.*)\",\n    ];\n  }\n\n  _initOpenObject(key, value, secondary, config) {\n    return {\n      attribute: key,\n      value: value,\n      closed: false,\n      domain: computeStateDomain(this.entity),\n      secondary: secondary,\n      description: key,\n      ...config,\n    };\n  }\n\n  loadEntity(entity) {\n    this.entity = entity;\n    return this.hass\n      .callApi(\"GET\", \"config/customize/config/\" + entity.entity_id)\n      .then((data) => {\n        this.localConfig = data.local;\n        this.globalConfig = data.global;\n        this.newAttributes = [];\n      });\n  }\n\n  saveEntity() {\n    const data = {};\n    const attrs = this.localAttributes.concat(\n      this.globalAttributes,\n      this.existingAttributes,\n      this.newAttributes\n    );\n    attrs.forEach((attr) => {\n      if (attr.closed || attr.secondary || !attr.attribute || !attr.value)\n        return;\n      const value = attr.type === \"json\" ? JSON.parse(attr.value) : attr.value;\n      if (!value) return;\n      data[attr.attribute] = value;\n    });\n\n    const objectId = this.entity.entity_id;\n    return this.hass.callApi(\n      \"POST\",\n      \"config/customize/config/\" + objectId,\n      data\n    );\n  }\n\n  _computeSingleAttribute(key, value, secondary) {\n    const config = hassAttributeUtil.LOGIC_STATE_ATTRIBUTES[key] || {\n      type: hassAttributeUtil.UNKNOWN_TYPE,\n    };\n    return this._initOpenObject(\n      key,\n      config.type === \"json\" ? JSON.stringify(value) : value,\n      secondary,\n      config\n    );\n  }\n\n  _computeAttributes(config, keys, secondary) {\n    return keys.map((key) =>\n      this._computeSingleAttribute(key, config[key], secondary)\n    );\n  }\n\n  computeLocalAttributes(localConfig) {\n    if (!localConfig) return [];\n    const localKeys = Object.keys(localConfig);\n    const result = this._computeAttributes(localConfig, localKeys, false);\n    return result;\n  }\n\n  computeGlobalAttributes(localConfig, globalConfig) {\n    if (!localConfig || !globalConfig) return [];\n    const localKeys = Object.keys(localConfig);\n    const globalKeys = Object.keys(globalConfig).filter(\n      (key) => !localKeys.includes(key)\n    );\n    return this._computeAttributes(globalConfig, globalKeys, true);\n  }\n\n  computeExistingAttributes(localConfig, globalConfig, entity) {\n    if (!localConfig || !globalConfig || !entity) return [];\n    const localKeys = Object.keys(localConfig);\n    const globalKeys = Object.keys(globalConfig);\n    const entityKeys = Object.keys(entity.attributes).filter(\n      (key) => !localKeys.includes(key) && !globalKeys.includes(key)\n    );\n    return this._computeAttributes(entity.attributes, entityKeys, true);\n  }\n\n  computeShowWarning(localConfig, globalConfig) {\n    if (!localConfig || !globalConfig) return false;\n    return Object.keys(localConfig).some(\n      (key) =>\n        JSON.stringify(globalConfig[key]) !== JSON.stringify(localConfig[key])\n    );\n  }\n\n  filterFromAttributes(attributes) {\n    return (key) =>\n      !attributes ||\n      attributes.every((attr) => attr.attribute !== key || attr.closed);\n  }\n\n  getNewAttributesOptions(\n    localAttributes,\n    globalAttributes,\n    existingAttributes,\n    newAttributes\n  ) {\n    const knownKeys = Object.keys(hassAttributeUtil.LOGIC_STATE_ATTRIBUTES)\n      .filter((key) => {\n        const conf = hassAttributeUtil.LOGIC_STATE_ATTRIBUTES[key];\n        return (\n          conf &&\n          (!conf.domains ||\n            !this.entity ||\n            conf.domains.includes(computeStateDomain(this.entity)))\n        );\n      })\n      .filter(this.filterFromAttributes(localAttributes))\n      .filter(this.filterFromAttributes(globalAttributes))\n      .filter(this.filterFromAttributes(existingAttributes))\n      .filter(this.filterFromAttributes(newAttributes));\n    return knownKeys.sort().concat(\"Other\");\n  }\n\n  selectedNewAttributeObserver(selected) {\n    if (selected < 0) return;\n    const option = this.newAttributesOptions[selected];\n    if (selected === this.newAttributesOptions.length - 1) {\n      // The \"Other\" option.\n      const attr = this._initOpenObject(\"\", \"\", false /* secondary */, {\n        type: hassAttributeUtil.ADD_TYPE,\n      });\n      this.push(\"newAttributes\", attr);\n      this.selectedNewAttribute = -1;\n      return;\n    }\n    let result = this.localAttributes.findIndex(\n      (attr) => attr.attribute === option\n    );\n    if (result >= 0) {\n      this.set(\"localAttributes.\" + result + \".closed\", false);\n      this.selectedNewAttribute = -1;\n      return;\n    }\n    result = this.globalAttributes.findIndex(\n      (attr) => attr.attribute === option\n    );\n    if (result >= 0) {\n      this.set(\"globalAttributes.\" + result + \".closed\", false);\n      this.selectedNewAttribute = -1;\n      return;\n    }\n    result = this.existingAttributes.findIndex(\n      (attr) => attr.attribute === option\n    );\n    if (result >= 0) {\n      this.set(\"existingAttributes.\" + result + \".closed\", false);\n      this.selectedNewAttribute = -1;\n      return;\n    }\n    result = this.newAttributes.findIndex((attr) => attr.attribute === option);\n    if (result >= 0) {\n      this.set(\"newAttributes.\" + result + \".closed\", false);\n      this.selectedNewAttribute = -1;\n      return;\n    }\n    const attr = this._computeSingleAttribute(\n      option,\n      \"\",\n      false /* secondary */\n    );\n    this.push(\"newAttributes\", attr);\n    this.selectedNewAttribute = -1;\n  }\n\n  attributesObserver() {\n    this.hasLocalAttributes =\n      this.localAttributes && this.localAttributes.some((attr) => !attr.closed);\n    this.hasGlobalAttributes =\n      this.globalAttributes &&\n      this.globalAttributes.some((attr) => !attr.closed);\n    this.hasExistingAttributes =\n      this.existingAttributes &&\n      this.existingAttributes.some((attr) => !attr.closed);\n    this.hasNewAttributes =\n      this.newAttributes && this.newAttributes.some((attr) => !attr.closed);\n    this.newAttributesOptions = this.getNewAttributesOptions(\n      this.localAttributes,\n      this.globalAttributes,\n      this.existingAttributes,\n      this.newAttributes\n    );\n  }\n}\ncustomElements.define(\"ha-form-customize\", HaFormCustomize);\n","import \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../resources/ha-style\";\nimport \"../../../components/ha-paper-icon-button-arrow-prev\";\n\nimport \"../ha-config-section\";\nimport \"../ha-entity-config\";\nimport \"./ha-form-customize\";\n\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { computeStateDomain } from \"../../../common/entity/compute_state_domain\";\nimport { sortStatesByName } from \"../../../common/entity/states_sort_by_name\";\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigCustomize extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        ha-paper-icon-button-arrow-prev[hide] {\n          visibility: hidden;\n        }\n      </style>\n\n      <app-header-layout has-scrolling-region=\"\">\n        <app-header slot=\"header\" fixed=\"\">\n          <app-toolbar>\n            <ha-paper-icon-button-arrow-prev\n              hide$=\"[[isWide]]\"\n              on-click=\"_backTapped\"\n            ></ha-paper-icon-button-arrow-prev>\n            <div main-title=\"\">\n              [[localize('ui.panel.config.customize.caption')]]\n            </div>\n          </app-toolbar>\n        </app-header>\n\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">\n              [[localize('ui.panel.config.customize.picker.header')]]\n            </span>\n            <span slot=\"introduction\">\n              [[localize('ui.panel.config.customize.picker.introduction')]]\n            </span>\n            <ha-entity-config\n              hass=\"[[hass]]\"\n              label=\"Entity\"\n              entities=\"[[entities]]\"\n              config=\"[[entityConfig]]\"\n            >\n            </ha-entity-config>\n          </ha-config-section>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n\n      entities: {\n        type: Array,\n        computed: \"computeEntities(hass)\",\n      },\n\n      entityConfig: {\n        type: Object,\n        value: {\n          component: \"ha-form-customize\",\n          computeSelectCaption: (stateObj) =>\n            computeStateName(stateObj) +\n            \" (\" +\n            computeStateDomain(stateObj) +\n            \")\",\n        },\n      },\n    };\n  }\n\n  computeClasses(isWide) {\n    return isWide ? \"content\" : \"content narrow\";\n  }\n\n  _backTapped() {\n    history.back();\n  }\n\n  computeEntities(hass) {\n    return Object.keys(hass.states)\n      .map((key) => hass.states[key])\n      .sort(sortStatesByName);\n  }\n}\ncustomElements.define(\"ha-config-customize\", HaConfigCustomize);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-input/iron-input.js';\nimport './paper-input-char-counter.js';\nimport './paper-input-container.js';\nimport './paper-input-error.js';\n\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {DomModule} from '@polymer/polymer/lib/elements/dom-module.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {PaperInputBehavior} from './paper-input-behavior.js';\n\n/**\nMaterial design: [Text\nfields](https://www.google.com/design/spec/components/text-fields.html)\n\n`<paper-input>` is a single-line text field with Material Design styling.\n\n    <paper-input label=\"Input label\"></paper-input>\n\nIt may include an optional error message or character counter.\n\n    <paper-input error-message=\"Invalid input!\" label=\"Input\n    label\"></paper-input> <paper-input char-counter label=\"Input\n    label\"></paper-input>\n\nIt can also include custom prefix or suffix elements, which are displayed\nbefore or after the text input itself. In order for an element to be\nconsidered as a prefix, it must have the `prefix` attribute (and similarly\nfor `suffix`).\n\n    <paper-input label=\"total\">\n      <div prefix>$</div>\n      <paper-icon-button slot=\"suffix\" icon=\"clear\"></paper-icon-button>\n    </paper-input>\n\nA `paper-input` can use the native `type=search` or `type=file` features.\nHowever, since we can't control the native styling of the input (search icon,\nfile button, date placeholder, etc.), in these cases the label will be\nautomatically floated. The `placeholder` attribute can still be used for\nadditional informational text.\n\n    <paper-input label=\"search!\" type=\"search\"\n        placeholder=\"search for cats\" autosave=\"test\" results=\"5\">\n    </paper-input>\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n### Focus\n\nTo focus a paper-input, you can call the native `focus()` method as long as the\npaper input has a tab index. Similarly, `blur()` will blur the element.\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-ms-clear` | Mixin applied to the Internet Explorer reveal button (the eyeball) | {}\n\n@group Paper Elements\n@element paper-input\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  is: 'paper-input',\n\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host([focused]) {\n        outline: none;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      input {\n        /* Firefox sets a min-width on the input, which can cause layout issues */\n        min-width: 0;\n      }\n\n      /* In 1.x, the <input> is distributed to paper-input-container, which styles it.\n      In 2.x the <iron-input> is distributed to paper-input-container, which styles\n      it, but in order for this to work correctly, we need to reset some\n      of the native input's properties to inherit (from the iron-input) */\n      iron-input > input {\n        @apply --paper-input-container-shared-input-style;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        letter-spacing: inherit;\n        word-spacing: inherit;\n        line-height: inherit;\n        text-shadow: inherit;\n        color: inherit;\n        cursor: inherit;\n      }\n\n      input:disabled {\n        @apply --paper-input-container-input-disabled;\n      }\n\n      input::-webkit-outer-spin-button,\n      input::-webkit-inner-spin-button {\n        @apply --paper-input-container-input-webkit-spinner;\n      }\n\n      input::-webkit-clear-button {\n        @apply --paper-input-container-input-webkit-clear;\n      }\n\n      input::-webkit-calendar-picker-indicator {\n        @apply --paper-input-container-input-webkit-calendar-picker-indicator;\n      }\n\n      input::-webkit-input-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      input:-moz-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      input::-moz-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      input::-ms-clear {\n        @apply --paper-input-container-ms-clear;\n      }\n\n      input::-ms-reveal {\n        @apply --paper-input-container-ms-reveal;\n      }\n\n      input:-ms-input-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      label {\n        pointer-events: none;\n      }\n    </style>\n\n    <paper-input-container id=\"container\" no-label-float=\"[[noLabelFloat]]\" always-float-label=\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\" auto-validate$=\"[[autoValidate]]\" disabled$=\"[[disabled]]\" invalid=\"[[invalid]]\">\n\n      <slot name=\"prefix\" slot=\"prefix\"></slot>\n\n      <label hidden$=\"[[!label]]\" aria-hidden=\"true\" for$=\"[[_inputId]]\" slot=\"label\">[[label]]</label>\n\n      <!-- Need to bind maxlength so that the paper-input-char-counter works correctly -->\n      <iron-input bind-value=\"{{value}}\" slot=\"input\" class=\"input-element\" id$=\"[[_inputId]]\" maxlength$=\"[[maxlength]]\" allowed-pattern=\"[[allowedPattern]]\" invalid=\"{{invalid}}\" validator=\"[[validator]]\">\n        <input aria-labelledby$=\"[[_ariaLabelledBy]]\" aria-describedby$=\"[[_ariaDescribedBy]]\" disabled$=\"[[disabled]]\" title$=\"[[title]]\" type$=\"[[type]]\" pattern$=\"[[pattern]]\" required$=\"[[required]]\" autocomplete$=\"[[autocomplete]]\" autofocus$=\"[[autofocus]]\" inputmode$=\"[[inputmode]]\" minlength$=\"[[minlength]]\" maxlength$=\"[[maxlength]]\" min$=\"[[min]]\" max$=\"[[max]]\" step$=\"[[step]]\" name$=\"[[name]]\" placeholder$=\"[[placeholder]]\" readonly$=\"[[readonly]]\" list$=\"[[list]]\" size$=\"[[size]]\" autocapitalize$=\"[[autocapitalize]]\" autocorrect$=\"[[autocorrect]]\" on-change=\"_onChange\" tabindex$=\"[[tabIndex]]\" autosave$=\"[[autosave]]\" results$=\"[[results]]\" accept$=\"[[accept]]\" multiple$=\"[[multiple]]\">\n      </iron-input>\n\n      <slot name=\"suffix\" slot=\"suffix\"></slot>\n\n      <template is=\"dom-if\" if=\"[[errorMessage]]\">\n        <paper-input-error aria-live=\"assertive\" slot=\"add-on\">[[errorMessage]]</paper-input-error>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[charCounter]]\">\n        <paper-input-char-counter slot=\"add-on\"></paper-input-char-counter>\n      </template>\n\n    </paper-input-container>\n  `,\n\n  behaviors: [PaperInputBehavior, IronFormElementBehavior],\n\n  properties: {\n    value: {\n      // Required for the correct TypeScript type-generation\n      type: String\n    }\n  },\n\n  /**\n   * Returns a reference to the focusable element. Overridden from\n   * PaperInputBehavior to correctly focus the native input.\n   *\n   * @return {!HTMLElement}\n   */\n  get _focusableElement() {\n    return this.inputElement._inputElement;\n  },\n\n  // Note: This event is only available in the 1.0 version of this element.\n  // In 2.0, the functionality of `_onIronInputReady` is done in\n  // PaperInputBehavior::attached.\n  listeners: {'iron-input-ready': '_onIronInputReady'},\n\n  _onIronInputReady: function() {\n    // Even though this is only used in the next line, save this for\n    // backwards compatibility, since the native input had this ID until 2.0.5.\n    if (!this.$.nativeInput) {\n      this.$.nativeInput = this.$$('input');\n    }\n    if (this.inputElement &&\n        this._typesThatHaveText.indexOf(this.$.nativeInput.type) !== -1) {\n      this.alwaysFloatLabel = true;\n    }\n\n    // Only validate when attached if the input already has a value.\n    if (!!this.inputElement.bindValue) {\n      this.$.container._handleValueAndAutoValidate(this.inputElement);\n    }\n  },\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`iron-a11y-announcer` is a singleton element that is intended to add a11y\nto features that require on-demand announcement from screen readers. In\norder to make use of the announcer, it is best to request its availability\nin the announcing element.\n\nExample:\n\n    Polymer({\n\n      is: 'x-chatty',\n\n      attached: function() {\n        // This will create the singleton element if it has not\n        // been created yet:\n        Polymer.IronA11yAnnouncer.requestAvailability();\n      }\n    });\n\nAfter the `iron-a11y-announcer` has been made available, elements can\nmake announces by firing bubbling `iron-announce` events.\n\nExample:\n\n    this.fire('iron-announce', {\n      text: 'This is an announcement!'\n    }, { bubbles: true });\n\nNote: announcements are only audible if you have a screen reader enabled.\n\n@group Iron Elements\n@demo demo/index.html\n*/\nexport const IronA11yAnnouncer = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: fixed;\n        clip: rect(0px,0px,0px,0px);\n      }\n    </style>\n    <div aria-live$=\"[[mode]]\">[[_text]]</div>\n`,\n\n  is: 'iron-a11y-announcer',\n\n  properties: {\n\n    /**\n     * The value of mode is used to set the `aria-live` attribute\n     * for the element that will be announced. Valid values are: `off`,\n     * `polite` and `assertive`.\n     */\n    mode: {type: String, value: 'polite'},\n\n    _text: {type: String, value: ''}\n  },\n\n  created: function() {\n    if (!IronA11yAnnouncer.instance) {\n      IronA11yAnnouncer.instance = this;\n    }\n\n    document.body.addEventListener(\n        'iron-announce', this._onIronAnnounce.bind(this));\n  },\n\n  /**\n   * Cause a text string to be announced by screen readers.\n   *\n   * @param {string} text The text that should be announced.\n   */\n  announce: function(text) {\n    this._text = '';\n    this.async(function() {\n      this._text = text;\n    }, 100);\n  },\n\n  _onIronAnnounce: function(event) {\n    if (event.detail && event.detail.text) {\n      this.announce(event.detail.text);\n    }\n  }\n});\n\nIronA11yAnnouncer.instance = null;\n\nIronA11yAnnouncer.requestAvailability = function() {\n  if (!IronA11yAnnouncer.instance) {\n    IronA11yAnnouncer.instance = document.createElement('iron-a11y-announcer');\n  }\n\n  document.body.appendChild(IronA11yAnnouncer.instance);\n};\n"],"sourceRoot":""}