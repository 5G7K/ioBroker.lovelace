{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-media-control-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","cardConfigStruct","type","entity","HuiMediaControlCardEditor","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","config","_config","hass","html","_templateObject2","localize","_entity","_valueChanged","_templateObject","ev","target","configValue","Object","assign","fireEvent","LitElement"],"mappings":"oGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAIO,IAAMA,EAASC,YAAY,CAChCC,MAAO,CACLC,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,k9ECYX,IAAME,EAAmBP,YAAO,CAC9BQ,KAAM,SACNC,OAAQ,YAIGC,80LAAbC,CAAA,CADCC,YAAc,kCACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,GAAA,SAAAN,IAAA,IAAAO,EAAAC,+FAAAC,CAAAC,KAAAV,GAAA,QAAAW,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,uEAAAS,CAAAP,MAAAH,EAAAW,EAAAlB,IAAAmB,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,KAAAX,EAAAmB,EAAAd,MAAA,yOAAAe,CAAAvB,EAAAI,GAAAJ,EAAA,GAAAZ,EAAA,EAAAoC,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,OAAAjC,WAAA,IAAA8B,KAAA,QAAAC,WAAA,CAIGC,eAJHC,IAAA,UAAAjC,WAAA,IAAA8B,KAAA,SAAAG,IAAA,YAAAjC,MAME,SAAiBkC,GACfA,EAAS/B,EAAiB+B,GAC1BlB,KAAKmB,QAAUD,IARnB,CAAAJ,KAAA,MAAAG,IAAA,UAAAjC,MAWE,WACE,OAAOgB,KAAKmB,QAAS9B,QAAU,KAZnC,CAAAyB,KAAA,SAAAG,IAAA,SAAAjC,MAeE,WACE,OAAKgB,KAAKoB,KAIHC,YAAPC,IAGgBtB,KAAKoB,KAAKG,SAClB,gDACIvB,KAAKoB,KAAKG,SACd,iDAEOvB,KAAKoB,KACJpB,KAAKwB,QACA,SAEJxB,KAAKyB,eAfbJ,YAAPK,OAjBN,CAAAZ,KAAA,SAAAG,IAAA,gBAAAjC,MAuCE,SAAsB2C,GACpB,GAAK3B,KAAKmB,SAAYnB,KAAKoB,KAA3B,CAGA,UAAMQ,EAASD,EAAGC,OAClB,GAAI5B,KAAA,IAAAW,OAASiB,EAAOC,gBAAmBD,EAAO5C,MAG1C4C,EAAOC,cACY,KAAjBD,EAAO5C,aACFgB,KAAKmB,QAAQS,EAAOC,aAE3B7B,KAAKmB,QAALW,OAAAC,OAAA,GACK/B,KAAKmB,WADV,KAEGS,EAAOC,cAAeD,EAAO5C,wGAIpCgD,YAAUhC,KAAM,iBAAkB,CAAEkB,OAAQlB,KAAKmB,gBAzDNc","file":"chunk.6f0649b7402047e82610.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { MediaControlCardConfig } from \"../../cards/hui-media-control-card\";\n\nimport \"../../../../components/entity/ha-entity-picker\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n});\n\n@customElement(\"hui-media-control-card-editor\")\nexport class HuiMediaControlCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MediaControlCardConfig;\n\n  public setConfig(config: MediaControlCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          include-domains='[\"media_player\"]'\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-media-control-card-editor\": HuiMediaControlCardEditor;\n  }\n}\n"],"sourceRoot":""}