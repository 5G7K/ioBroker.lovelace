{"version":3,"sources":["webpack:///./src/cards/ha-badges-card.js","webpack:///./src/cards/ha-camera-card.js","webpack:///./src/cards/ha-card-chooser.js","webpack:///./src/cards/ha-entities-card.js","webpack:///./src/cards/ha-persistent_notification-card.js","webpack:///./src/cards/ha-plant-card.js","webpack:///./src/common/config/location_name.ts","webpack:///./src/components/ha-cards.js","webpack:///./src/components/ha-demo-badge.js","webpack:///./src/mixins/navigate-mixin.js","webpack:///./src/panels/states/ha-panel-states.js"],"names":["HaBadgesCard","html","hass","Object","states","Array","PolymerElement","customElements","define","UPDATE_INTERVAL","HaCameraCard","addEventListener","cardTapped","timer","setInterval","updateCameraFeedSrc","clearInterval","imageLoaded","fire","entityId","stateObj","entity_id","fetchThumbnailUrlWithCache","cameraFeedSrc","computeStateName","type","observer","String","value","Boolean","LocalizeMixin","EventsMixin","HaCardChooser","newData","dynamicContentUpdater","cardType","toUpperCase","_updatesAllowed","IntersectionObserver","entries","length","isIntersecting","style","height","_detachedChild","appendChild","_updateCard","cardData","offsetHeight","lastChild","removeChild","observe","eligibleToObserver","window","unobserve","createObserver","HaEntitiesCard","groupEntity","title","computed","entityTapped","bind","localize","trim","domain","computeStateDomain","replace","classes","stateMoreInfoType","cards","root","querySelectorAll","forEach","card","classList","contains","removeEventListener","ev","item","querySelector","itemForElement","target","stopPropagation","attributes","control","state","canToggleCount","i","canToggleState","HaPersistentNotificationCard","preventDefault","callService","notification_id","computeObjectId","HaPlantCard","config","sensors","moisture","temperature","brightness","conductivity","battery","name","data","keys","filter","key","attr","batLvl","icon","Math","round","dict","problem","indexOf","entityPicture","model","computeLocationName","location_name","DOMAINS_WITH_CARD","camera","history_graph","media_player","persistent_notification","plant","weather","PRIORITY","configurator","updater","sun","person","device_tracker","alarm_control_panel","sensor","binary_sensor","mailbox","getPriority","sortPriority","domainA","domainB","priority","entitySortBy","entityA","entityB","nameA","friendly_name","toLowerCase","nameB","iterateDomainSorted","collection","func","map","sort","HaCards","columns","viewVisible","orderedGroupEntities","$","main","parentNode","_parentNode","_debouncer","Debouncer","debounce","timeOut","after","computeCards","demo","badges","emptyCards","entityCount","push","getIndex","size","minIndex","addEntitiesCard","entities","owncard","other","entity","custom_ui_state_card","curIndex","splitted","splitByGroups","groups","gr1","gr2","order","badgesColl","beforeGroupColl","afterGroupedColl","ungrouped","coll","apply","e1","e2","groupState","getGroupEntities","val","Number","HaDemoBadge","dedupingMixin","superClass","args","navigate","DEFAULT_VIEW_ENTITY_ID","ALWAYS_SHOW_DOMAIN","PartialCards","_updateColumns","mqls","width","matchMedia","mql","addListener","removeListener","matchColumns","reduce","cols","matches","_columns","max","narrow","dockedSidebar","views","showTabs","top","scroller","layout","header","scrollTarget","easingFn","easeOutQuad","t","b","c","d","animationId","random","duration","startTime","Date","now","currentScrollTop","scrollTop","deltaScrollTop","_currentAnimationId","updateFrame","elapsedTime","requestAnimationFrame","call","view","detail","getAttribute","currentView","path","routeMatch","routeData","defaultView","locationName","extractViews","shift","setProperties","hidden","entityIds","_defaultViewFilter","isView","_computeDefaultViewStates","getViewEntities","includes","entitiesList","panelVisible","route","viewStates","NavigateMixin"],"mappings":"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","file":"panel-states.chunk.js","sourcesContent":["import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../components/entity/ha-state-label-badge\";\n\nclass HaBadgesCard extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        ha-state-label-badge {\n          display: inline-block;\n          margin-bottom: var(--ha-state-label-badge-margin-bottom, 16px);\n        }\n      </style>\n      <template is=\"dom-repeat\" items=\"[[states]]\">\n        <ha-state-label-badge\n          hass=\"[[hass]]\"\n          state=\"[[item]]\"\n        ></ha-state-label-badge>\n      </template>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      states: Array,\n    };\n  }\n}\ncustomElements.define(\"ha-badges-card\", HaBadgesCard);\n","import \"@polymer/paper-styles/element-styles/paper-material-styles\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport computeStateName from \"../common/entity/compute_state_name\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\nimport LocalizeMixin from \"../mixins/localize-mixin\";\nimport { fetchThumbnailUrlWithCache } from \"../data/camera\";\n\nconst UPDATE_INTERVAL = 10000; // ms\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaCameraCard extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"paper-material-styles\">\n        :host {\n          @apply --paper-material-elevation-1;\n          display: block;\n          position: relative;\n          font-size: 0px;\n          border-radius: 2px;\n          cursor: pointer;\n          min-height: 48px;\n          line-height: 0;\n        }\n        .camera-feed {\n          width: 100%;\n          height: auto;\n          border-radius: 2px;\n        }\n        .caption {\n          @apply --paper-font-common-nowrap;\n          position: absolute;\n          left: 0px;\n          right: 0px;\n          bottom: 0px;\n          border-bottom-left-radius: 2px;\n          border-bottom-right-radius: 2px;\n\n          background-color: rgba(0, 0, 0, 0.3);\n          padding: 16px;\n\n          font-size: 16px;\n          font-weight: 500;\n          line-height: 16px;\n          color: white;\n        }\n      </style>\n\n      <template is=\"dom-if\" if=\"[[cameraFeedSrc]]\">\n        <img\n          src=\"[[cameraFeedSrc]]\"\n          class=\"camera-feed\"\n          alt=\"[[_computeStateName(stateObj)]]\"\n          on-load=\"_imageLoaded\"\n          on-error=\"_imageError\"\n        />\n      </template>\n      <div class=\"caption\">\n        [[_computeStateName(stateObj)]]\n        <template is=\"dom-if\" if=\"[[!imageLoaded]]\">\n          ([[localize('ui.card.camera.not_available')]])\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: {\n        type: Object,\n        observer: \"updateCameraFeedSrc\",\n      },\n      cameraFeedSrc: {\n        type: String,\n        value: \"\",\n      },\n      imageLoaded: {\n        type: Boolean,\n        value: true,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"click\", () => this.cardTapped());\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.timer = setInterval(() => this.updateCameraFeedSrc(), UPDATE_INTERVAL);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    clearInterval(this.timer);\n  }\n\n  _imageLoaded() {\n    this.imageLoaded = true;\n  }\n\n  _imageError() {\n    this.imageLoaded = false;\n  }\n\n  cardTapped() {\n    this.fire(\"hass-more-info\", { entityId: this.stateObj.entity_id });\n  }\n\n  async updateCameraFeedSrc() {\n    this.cameraFeedSrc = await fetchThumbnailUrlWithCache(\n      this.hass,\n      this.stateObj.entity_id\n    );\n  }\n\n  _computeStateName(stateObj) {\n    return computeStateName(stateObj);\n  }\n}\ncustomElements.define(\"ha-camera-card\", HaCameraCard);\n","import { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-camera-card\";\nimport \"./ha-entities-card\";\nimport \"./ha-history_graph-card\";\nimport \"./ha-media_player-card\";\nimport \"./ha-persistent_notification-card\";\nimport \"./ha-plant-card\";\nimport \"./ha-weather-card\";\n\nimport dynamicContentUpdater from \"../common/dom/dynamic_content_updater\";\n\nclass HaCardChooser extends PolymerElement {\n  static get properties() {\n    return {\n      cardData: {\n        type: Object,\n        observer: \"cardDataChanged\",\n      },\n    };\n  }\n\n  _updateCard(newData) {\n    dynamicContentUpdater(\n      this,\n      \"HA-\" + newData.cardType.toUpperCase() + \"-CARD\",\n      newData\n    );\n  }\n\n  createObserver() {\n    this._updatesAllowed = false;\n    this.observer = new IntersectionObserver((entries) => {\n      if (!entries.length) return;\n      if (entries[0].isIntersecting) {\n        this.style.height = \"\";\n        if (this._detachedChild) {\n          this.appendChild(this._detachedChild);\n          this._detachedChild = null;\n        }\n        this._updateCard(this.cardData); // Don't use 'newData' as it might have changed.\n        this._updatesAllowed = true;\n      } else {\n        // Set the card to be 48px high. Otherwise if the card is kept as 0px height then all\n        // following cards would trigger the observer at once.\n        const offsetHeight = this.offsetHeight;\n        this.style.height = `${offsetHeight || 48}px`;\n        if (this.lastChild) {\n          this._detachedChild = this.lastChild;\n          this.removeChild(this.lastChild);\n        }\n        this._updatesAllowed = false;\n      }\n    });\n    this.observer.observe(this);\n  }\n\n  cardDataChanged(newData) {\n    if (!newData) return;\n    // ha-entities-card is exempt from observer as it doesn't load heavy resources.\n    // and usually doesn't load external resources (except for entity_picture).\n    const eligibleToObserver =\n      window.IntersectionObserver && newData.cardType !== \"entities\";\n    if (!eligibleToObserver) {\n      if (this.observer) {\n        this.observer.unobserve(this);\n        this.observer = null;\n      }\n      this.style.height = \"\";\n      this._updateCard(newData);\n      return;\n    }\n    if (!this.observer) {\n      this.createObserver();\n    }\n    if (this._updatesAllowed) {\n      this._updateCard(newData);\n    }\n  }\n}\ncustomElements.define(\"ha-card-chooser\", HaCardChooser);\n","import \"@polymer/iron-flex-layout/iron-flex-layout-classes\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../components/entity/ha-entity-toggle\";\nimport \"../components/ha-card\";\nimport \"../state-summary/state-card-content\";\n\nimport computeStateDomain from \"../common/entity/compute_state_domain\";\nimport computeStateName from \"../common/entity/compute_state_name\";\nimport stateMoreInfoType from \"../common/entity/state_more_info_type\";\nimport canToggleState from \"../common/entity/can_toggle_state\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\nclass HaEntitiesCard extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex\"></style>\n      <style>\n        ha-card {\n          padding: 16px;\n        }\n        .states {\n          margin: -4px 0;\n        }\n        .state {\n          padding: 4px 0;\n        }\n        .header {\n          @apply --paper-font-headline;\n          /* overwriting line-height +8 because entity-toggle can be 40px height,\n           compensating this with reduced padding */\n          line-height: 40px;\n          color: var(--primary-text-color);\n          padding: 4px 0 12px;\n        }\n        .header .name {\n          @apply --paper-font-common-nowrap;\n        }\n        ha-entity-toggle {\n          margin-left: 16px;\n        }\n        .more-info {\n          cursor: pointer;\n        }\n      </style>\n\n      <ha-card>\n        <template is=\"dom-if\" if=\"[[title]]\">\n          <div\n            class$=\"[[computeTitleClass(groupEntity)]]\"\n            on-click=\"entityTapped\"\n          >\n            <div class=\"flex name\">[[title]]</div>\n            <template is=\"dom-if\" if=\"[[showGroupToggle(groupEntity, states)]]\">\n              <ha-entity-toggle\n                hass=\"[[hass]]\"\n                state-obj=\"[[groupEntity]]\"\n              ></ha-entity-toggle>\n            </template>\n          </div>\n        </template>\n        <div class=\"states\">\n          <template\n            is=\"dom-repeat\"\n            items=\"[[states]]\"\n            on-dom-change=\"addTapEvents\"\n          >\n            <div class$=\"[[computeStateClass(item)]]\">\n              <state-card-content\n                hass=\"[[hass]]\"\n                class=\"state-card\"\n                state-obj=\"[[item]]\"\n              ></state-card-content>\n            </div>\n          </template>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      states: Array,\n      groupEntity: Object,\n      title: {\n        type: String,\n        computed: \"computeTitle(states, groupEntity, localize)\",\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    // We need to save a single bound function reference to ensure the event listener\n    // can identify it properly.\n    this.entityTapped = this.entityTapped.bind(this);\n  }\n\n  computeTitle(states, groupEntity, localize) {\n    if (groupEntity) {\n      return computeStateName(groupEntity).trim();\n    }\n    const domain = computeStateDomain(states[0]);\n    return (\n      (localize && localize(`domain.${domain}`)) || domain.replace(/_/g, \" \")\n    );\n  }\n\n  computeTitleClass(groupEntity) {\n    let classes = \"header horizontal layout center \";\n    if (groupEntity) {\n      classes += \"more-info\";\n    }\n    return classes;\n  }\n\n  computeStateClass(stateObj) {\n    return stateMoreInfoType(stateObj) !== \"hidden\"\n      ? \"state more-info\"\n      : \"state\";\n  }\n\n  addTapEvents() {\n    const cards = this.root.querySelectorAll(\".state\");\n    cards.forEach((card) => {\n      if (card.classList.contains(\"more-info\")) {\n        card.addEventListener(\"click\", this.entityTapped);\n      } else {\n        card.removeEventListener(\"click\", this.entityTapped);\n      }\n    });\n  }\n\n  entityTapped(ev) {\n    const item = this.root\n      .querySelector(\"dom-repeat\")\n      .itemForElement(ev.target);\n    let entityId;\n    if (!item && !this.groupEntity) {\n      return;\n    }\n    ev.stopPropagation();\n\n    if (item) {\n      entityId = item.entity_id;\n    } else {\n      entityId = this.groupEntity.entity_id;\n    }\n    this.fire(\"hass-more-info\", { entityId: entityId });\n  }\n\n  showGroupToggle(groupEntity, states) {\n    if (\n      !groupEntity ||\n      !states ||\n      groupEntity.attributes.control === \"hidden\" ||\n      (groupEntity.state !== \"on\" && groupEntity.state !== \"off\")\n    ) {\n      return false;\n    }\n\n    // Only show if we can toggle 2+ entities in group\n    let canToggleCount = 0;\n    for (let i = 0; i < states.length; i++) {\n      if (!canToggleState(this.hass, states[i])) {\n        continue;\n      }\n\n      canToggleCount++;\n\n      if (canToggleCount > 1) {\n        break;\n      }\n    }\n\n    return canToggleCount > 1;\n  }\n}\ncustomElements.define(\"ha-entities-card\", HaEntitiesCard);\n","import \"@material/mwc-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../components/ha-card\";\nimport \"../components/ha-markdown\";\n\nimport computeStateName from \"../common/entity/compute_state_name\";\nimport LocalizeMixin from \"../mixins/localize-mixin\";\nimport computeObjectId from \"../common/entity/compute_object_id\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPersistentNotificationCard extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          @apply --paper-font-body1;\n        }\n        ha-markdown {\n          display: block;\n          padding: 0 16px;\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n        ha-markdown p:first-child {\n          margin-top: 0;\n        }\n        ha-markdown p:last-child {\n          margin-bottom: 0;\n        }\n        ha-markdown a {\n          color: var(--primary-color);\n        }\n        ha-markdown img {\n          max-width: 100%;\n        }\n        mwc-button {\n          margin: 8px;\n        }\n      </style>\n\n      <ha-card header=\"[[computeTitle(stateObj)]]\">\n        <ha-markdown content=\"[[stateObj.attributes.message]]\"></ha-markdown>\n        <mwc-button on-click=\"dismissTap\"\n          >[[localize('ui.card.persistent_notification.dismiss')]]</mwc-button\n        >\n      </ha-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: Object,\n    };\n  }\n\n  computeTitle(stateObj) {\n    return stateObj.attributes.title || computeStateName(stateObj);\n  }\n\n  dismissTap(ev) {\n    ev.preventDefault();\n    this.hass.callService(\"persistent_notification\", \"dismiss\", {\n      notification_id: computeObjectId(this.stateObj.entity_id),\n    });\n  }\n}\ncustomElements.define(\n  \"ha-persistent_notification-card\",\n  HaPersistentNotificationCard\n);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../components/ha-card\";\nimport \"../components/ha-icon\";\n\nimport computeStateName from \"../common/entity/compute_state_name\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nclass HaPlantCard extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        .banner {\n          display: flex;\n          align-items: flex-end;\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: center;\n          padding-top: 12px;\n        }\n        .has-plant-image .banner {\n          padding-top: 30%;\n        }\n        .header {\n          @apply --paper-font-headline;\n          line-height: 40px;\n          padding: 8px 16px;\n        }\n        .has-plant-image .header {\n          font-size: 16px;\n          font-weight: 500;\n          line-height: 16px;\n          padding: 16px;\n          color: white;\n          width: 100%;\n          background: rgba(0, 0, 0, var(--dark-secondary-opacity));\n        }\n        .content {\n          display: flex;\n          justify-content: space-between;\n          padding: 16px 32px 24px 32px;\n        }\n        .has-plant-image .content {\n          padding-bottom: 16px;\n        }\n        ha-icon {\n          color: var(--paper-item-icon-color);\n          margin-bottom: 8px;\n        }\n        .attributes {\n          cursor: pointer;\n        }\n        .attributes div {\n          text-align: center;\n        }\n        .problem {\n          color: var(--google-red-500);\n          font-weight: bold;\n        }\n        .uom {\n          color: var(--secondary-text-color);\n        }\n      </style>\n\n      <ha-card\n        class$=\"[[computeImageClass(stateObj.attributes.entity_picture)]]\"\n      >\n        <div\n          class=\"banner\"\n          style=\"background-image:url([[stateObj.attributes.entity_picture]])\"\n        >\n          <div class=\"header\">[[computeTitle(stateObj)]]</div>\n        </div>\n        <div class=\"content\">\n          <template\n            is=\"dom-repeat\"\n            items=\"[[computeAttributes(stateObj.attributes)]]\"\n          >\n            <div class=\"attributes\" on-click=\"attributeClicked\">\n              <div>\n                <ha-icon\n                  icon=\"[[computeIcon(item, stateObj.attributes.battery)]]\"\n                ></ha-icon>\n              </div>\n              <div\n                class$=\"[[computeAttributeClass(stateObj.attributes.problem, item)]]\"\n              >\n                [[computeValue(stateObj.attributes, item)]]\n              </div>\n              <div class=\"uom\">\n                [[computeUom(stateObj.attributes.unit_of_measurement_dict,\n                item)]]\n              </div>\n            </div>\n          </template>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: Object,\n      config: Object,\n    };\n  }\n\n  constructor() {\n    super();\n    this.sensors = {\n      moisture: \"hass:water\",\n      temperature: \"hass:thermometer\",\n      brightness: \"hass:white-balance-sunny\",\n      conductivity: \"hass:emoticon-poop\",\n      battery: \"hass:battery\",\n    };\n  }\n\n  computeTitle(stateObj) {\n    return (this.config && this.config.name) || computeStateName(stateObj);\n  }\n\n  computeAttributes(data) {\n    return Object.keys(this.sensors).filter((key) => key in data);\n  }\n\n  computeIcon(attr, batLvl) {\n    const icon = this.sensors[attr];\n    if (attr === \"battery\") {\n      if (batLvl <= 5) {\n        return `${icon}-alert`;\n      }\n      if (batLvl < 95) {\n        return `${icon}-${Math.round(batLvl / 10 - 0.01) * 10}`;\n      }\n    }\n    return icon;\n  }\n\n  computeValue(attributes, attr) {\n    return attributes[attr];\n  }\n\n  computeUom(dict, attr) {\n    return dict[attr] || \"\";\n  }\n\n  computeAttributeClass(problem, attr) {\n    return problem.indexOf(attr) === -1 ? \"\" : \"problem\";\n  }\n\n  computeImageClass(entityPicture) {\n    return entityPicture ? \"has-plant-image\" : \"\";\n  }\n\n  attributeClicked(ev) {\n    this.fire(\"hass-more-info\", {\n      entityId: this.stateObj.attributes.sensors[ev.model.item],\n    });\n  }\n}\n\ncustomElements.define(\"ha-plant-card\", HaPlantCard);\n","import { HomeAssistant } from \"../../types\";\n\n/** Get the location name from a hass object. */\nexport default function computeLocationName(hass: HomeAssistant): string {\n  return hass && hass.config.location_name;\n}\n","import \"@polymer/iron-flex-layout/iron-flex-layout-classes\";\nimport { timeOut } from \"@polymer/polymer/lib/utils/async\";\nimport { Debouncer } from \"@polymer/polymer/lib/utils/debounce\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../cards/ha-badges-card\";\nimport \"../cards/ha-card-chooser\";\nimport \"./ha-demo-badge\";\n\nimport computeStateDomain from \"../common/entity/compute_state_domain\";\nimport splitByGroups from \"../common/entity/split_by_groups\";\nimport getGroupEntities from \"../common/entity/get_group_entities\";\n\n// mapping domain to size of the card.\nconst DOMAINS_WITH_CARD = {\n  camera: 4,\n  history_graph: 4,\n  media_player: 3,\n  persistent_notification: 0,\n  plant: 3,\n  weather: 4,\n};\n\n// 4 types:\n// badges: 0 .. 10\n// before groups < 0\n// groups: X\n// rest: 100\n\nconst PRIORITY = {\n  // before groups < 0\n  configurator: -20,\n  persistent_notification: -15,\n\n  // badges have priority >= 0\n  updater: 0,\n  sun: 1,\n  person: 2,\n  device_tracker: 3,\n  alarm_control_panel: 4,\n  timer: 5,\n  sensor: 6,\n  binary_sensor: 7,\n  mailbox: 8,\n};\n\nconst getPriority = (domain) => (domain in PRIORITY ? PRIORITY[domain] : 100);\n\nconst sortPriority = (domainA, domainB) => domainA.priority - domainB.priority;\n\nconst entitySortBy = (entityA, entityB) => {\n  const nameA = (\n    entityA.attributes.friendly_name || entityA.entity_id\n  ).toLowerCase();\n  const nameB = (\n    entityB.attributes.friendly_name || entityB.entity_id\n  ).toLowerCase();\n\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  return 0;\n};\n\nconst iterateDomainSorted = (collection, func) => {\n  Object.keys(collection)\n    .map((key) => collection[key])\n    .sort(sortPriority)\n    .forEach((domain) => {\n      domain.states.sort(entitySortBy);\n      func(domain);\n    });\n};\n\nclass HaCards extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex iron-flex-factors\"></style>\n      <style>\n        :host {\n          display: block;\n          padding: 4px 4px 0;\n          transform: translateZ(0);\n          position: relative;\n        }\n\n        .badges {\n          font-size: 85%;\n          text-align: center;\n          padding-top: 16px;\n        }\n\n        .column {\n          max-width: 500px;\n          overflow-x: hidden;\n        }\n\n        ha-card-chooser {\n          display: block;\n          margin: 4px 4px 8px;\n        }\n\n        @media (max-width: 500px) {\n          :host {\n            padding-left: 0;\n            padding-right: 0;\n          }\n\n          ha-card-chooser {\n            margin-left: 0;\n            margin-right: 0;\n          }\n        }\n\n        @media (max-width: 599px) {\n          .column {\n            max-width: 600px;\n          }\n        }\n      </style>\n\n      <div id=\"main\">\n        <template is=\"dom-if\" if=\"[[cards.badges.length]]\">\n          <div class=\"badges\">\n            <template is=\"dom-if\" if=\"[[cards.demo]]\">\n              <ha-demo-badge></ha-demo-badge>\n            </template>\n\n            <ha-badges-card\n              states=\"[[cards.badges]]\"\n              hass=\"[[hass]]\"\n            ></ha-badges-card>\n          </div>\n        </template>\n\n        <div class=\"horizontal layout center-justified\">\n          <template is=\"dom-repeat\" items=\"[[cards.columns]]\" as=\"column\">\n            <div class=\"column flex-1\">\n              <template is=\"dom-repeat\" items=\"[[column]]\" as=\"card\">\n                <ha-card-chooser card-data=\"[[card]]\"></ha-card-chooser>\n              </template>\n            </div>\n          </template>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      columns: {\n        type: Number,\n        value: 2,\n      },\n\n      states: Object,\n\n      viewVisible: {\n        type: Boolean,\n        value: false,\n      },\n\n      orderedGroupEntities: Array,\n\n      cards: Object,\n    };\n  }\n\n  static get observers() {\n    return [\"updateCards(columns, states, viewVisible, orderedGroupEntities)\"];\n  }\n\n  updateCards(columns, states, viewVisible, orderedGroupEntities) {\n    if (!viewVisible) {\n      if (this.$.main.parentNode) {\n        this.$.main._parentNode = this.$.main.parentNode;\n        this.$.main.parentNode.removeChild(this.$.main);\n      }\n      return;\n    }\n    if (!this.$.main.parentNode && this.$.main._parentNode) {\n      this.$.main._parentNode.appendChild(this.$.main);\n    }\n    this._debouncer = Debouncer.debounce(\n      this._debouncer,\n      timeOut.after(10),\n      () => {\n        // Things might have changed since it got scheduled.\n        if (this.viewVisible) {\n          this.cards = this.computeCards(columns, states, orderedGroupEntities);\n        }\n      }\n    );\n  }\n\n  emptyCards() {\n    return {\n      demo: false,\n      badges: [],\n      columns: [],\n    };\n  }\n\n  computeCards(columns, states, orderedGroupEntities) {\n    const hass = this.hass;\n\n    const cards = this.emptyCards();\n\n    const entityCount = [];\n    for (let i = 0; i < columns; i++) {\n      cards.columns.push([]);\n      entityCount.push(0);\n    }\n\n    // Find column with < 5 entities, else column with lowest count\n    function getIndex(size) {\n      let minIndex = 0;\n      for (let i = 0; i < entityCount.length; i++) {\n        if (entityCount[i] < 5) {\n          minIndex = i;\n          break;\n        }\n        if (entityCount[i] < entityCount[minIndex]) {\n          minIndex = i;\n        }\n      }\n\n      entityCount[minIndex] += size;\n\n      return minIndex;\n    }\n\n    function addEntitiesCard(name, entities, groupEntity) {\n      if (entities.length === 0) return;\n\n      const owncard = [];\n      const other = [];\n\n      let size = 0;\n\n      entities.forEach((entity) => {\n        const domain = computeStateDomain(entity);\n\n        if (\n          domain in DOMAINS_WITH_CARD &&\n          !entity.attributes.custom_ui_state_card\n        ) {\n          owncard.push(entity);\n          size += DOMAINS_WITH_CARD[domain];\n        } else {\n          other.push(entity);\n          size++;\n        }\n      });\n\n      // Add 1 to the size if we're rendering entities card\n      size += other.length > 0;\n\n      const curIndex = getIndex(size);\n\n      if (other.length > 0) {\n        cards.columns[curIndex].push({\n          hass: hass,\n          cardType: \"entities\",\n          states: other,\n          groupEntity: groupEntity || false,\n        });\n      }\n\n      owncard.forEach((entity) => {\n        cards.columns[curIndex].push({\n          hass: hass,\n          cardType: computeStateDomain(entity),\n          stateObj: entity,\n        });\n      });\n    }\n\n    const splitted = splitByGroups(states);\n    if (orderedGroupEntities) {\n      splitted.groups.sort(\n        (gr1, gr2) =>\n          orderedGroupEntities[gr1.entity_id] -\n          orderedGroupEntities[gr2.entity_id]\n      );\n    } else {\n      splitted.groups.sort(\n        (gr1, gr2) => gr1.attributes.order - gr2.attributes.order\n      );\n    }\n\n    const badgesColl = {};\n    const beforeGroupColl = {};\n    const afterGroupedColl = {};\n\n    Object.keys(splitted.ungrouped).forEach((key) => {\n      const state = splitted.ungrouped[key];\n      const domain = computeStateDomain(state);\n\n      if (domain === \"a\") {\n        cards.demo = true;\n        return;\n      }\n\n      const priority = getPriority(domain);\n      let coll;\n\n      if (priority < 0) {\n        coll = beforeGroupColl;\n      } else if (priority < 10) {\n        coll = badgesColl;\n      } else {\n        coll = afterGroupedColl;\n      }\n\n      if (!(domain in coll)) {\n        coll[domain] = {\n          domain: domain,\n          priority: priority,\n          states: [],\n        };\n      }\n\n      coll[domain].states.push(state);\n    });\n\n    if (orderedGroupEntities) {\n      Object.keys(badgesColl)\n        .map((key) => badgesColl[key])\n        .forEach((domain) => {\n          cards.badges.push.apply(cards.badges, domain.states);\n        });\n\n      cards.badges.sort(\n        (e1, e2) =>\n          orderedGroupEntities[e1.entity_id] -\n          orderedGroupEntities[e2.entity_id]\n      );\n    } else {\n      iterateDomainSorted(badgesColl, (domain) => {\n        cards.badges.push.apply(cards.badges, domain.states);\n      });\n    }\n\n    iterateDomainSorted(beforeGroupColl, (domain) => {\n      addEntitiesCard(domain.domain, domain.states);\n    });\n\n    splitted.groups.forEach((groupState) => {\n      const entities = getGroupEntities(states, groupState);\n      addEntitiesCard(\n        groupState.entity_id,\n        Object.keys(entities).map((key) => entities[key]),\n        groupState\n      );\n    });\n\n    iterateDomainSorted(afterGroupedColl, (domain) => {\n      addEntitiesCard(domain.domain, domain.states);\n    });\n\n    // Remove empty columns\n    cards.columns = cards.columns.filter((val) => val.length > 0);\n\n    return cards;\n  }\n}\ncustomElements.define(\"ha-cards\", HaCards);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-label-badge\";\n\nclass HaDemoBadge extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          --ha-label-badge-color: #dac90d;\n        }\n      </style>\n\n      <ha-label-badge\n        icon=\"hass:emoticon\"\n        label=\"Demo\"\n        description=\"\"\n      ></ha-label-badge>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-demo-badge\", HaDemoBadge);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\nimport { navigate } from \"../common/navigate\";\n\n/*\n * @polymerMixin\n * @appliesMixin EventsMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      navigate(...args) {\n        navigate(this, ...args);\n      }\n    }\n);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-scroll-effects/effects/waterfall\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/app-route/app-route\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes\";\nimport \"@polymer/iron-pages/iron-pages\";\nimport \"@polymer/paper-tabs/paper-tab\";\nimport \"@polymer/paper-tabs/paper-tabs\";\n\nimport \"../../components/ha-cards\";\nimport \"../../components/ha-icon\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-start-voice-button\";\n\nimport \"../../layouts/ha-app-layout\";\n\nimport extractViews from \"../../common/entity/extract_views\";\nimport getViewEntities from \"../../common/entity/get_view_entities\";\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport computeStateDomain from \"../../common/entity/compute_state_domain\";\nimport computeLocationName from \"../../common/config/location_name\";\nimport NavigateMixin from \"../../mixins/navigate-mixin\";\nimport { EventsMixin } from \"../../mixins/events-mixin\";\n\nconst DEFAULT_VIEW_ENTITY_ID = \"group.default_view\";\nconst ALWAYS_SHOW_DOMAIN = [\"persistent_notification\", \"configurator\"];\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin NavigateMixin\n */\nclass PartialCards extends EventsMixin(NavigateMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex iron-positioning ha-style\">\n        :host {\n          -ms-user-select: none;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n        }\n\n        ha-app-layout {\n          min-height: 100%;\n          background-color: var(--secondary-background-color, #e5e5e5);\n        }\n\n        iron-pages {\n          height: 100%;\n        }\n\n        paper-tabs {\n          margin-left: 12px;\n          --paper-tabs-selection-bar-color: var(--text-primary-color, #fff);\n          text-transform: uppercase;\n        }\n      </style>\n      <app-route\n        route=\"{{route}}\"\n        pattern=\"/:view\"\n        data=\"{{routeData}}\"\n        active=\"{{routeMatch}}\"\n      ></app-route>\n      <ha-app-layout id=\"layout\">\n        <app-header effects=\"waterfall\" condenses=\"\" fixed=\"\" slot=\"header\">\n          <app-toolbar>\n            <ha-menu-button></ha-menu-button>\n            <div main-title=\"\">\n              [[computeTitle(views, defaultView, locationName)]]\n            </div>\n            <ha-start-voice-button hass=\"[[hass]]\"></ha-start-voice-button>\n          </app-toolbar>\n\n          <div sticky=\"\" hidden$=\"[[areTabsHidden(views, showTabs)]]\">\n            <paper-tabs\n              scrollable=\"\"\n              selected=\"[[currentView]]\"\n              attr-for-selected=\"data-entity\"\n              on-iron-activate=\"handleViewSelected\"\n            >\n              <paper-tab data-entity=\"\" on-click=\"scrollToTop\">\n                <template is=\"dom-if\" if=\"[[!defaultView]]\">\n                  Home\n                </template>\n                <template is=\"dom-if\" if=\"[[defaultView]]\">\n                  <template is=\"dom-if\" if=\"[[defaultView.attributes.icon]]\">\n                    <ha-icon\n                      title$=\"[[_computeStateName(defaultView)]]\"\n                      icon=\"[[defaultView.attributes.icon]]\"\n                    ></ha-icon>\n                  </template>\n                  <template is=\"dom-if\" if=\"[[!defaultView.attributes.icon]]\">\n                    [[_computeStateName(defaultView)]]\n                  </template>\n                </template>\n              </paper-tab>\n              <template is=\"dom-repeat\" items=\"[[views]]\">\n                <paper-tab\n                  data-entity$=\"[[item.entity_id]]\"\n                  on-click=\"scrollToTop\"\n                >\n                  <template is=\"dom-if\" if=\"[[item.attributes.icon]]\">\n                    <ha-icon\n                      title$=\"[[_computeStateName(item)]]\"\n                      icon=\"[[item.attributes.icon]]\"\n                    ></ha-icon>\n                  </template>\n                  <template is=\"dom-if\" if=\"[[!item.attributes.icon]]\">\n                    [[_computeStateName(item)]]\n                  </template>\n                </paper-tab>\n              </template>\n            </paper-tabs>\n          </div>\n        </app-header>\n\n        <iron-pages\n          attr-for-selected=\"data-view\"\n          selected=\"[[currentView]]\"\n          selected-attribute=\"view-visible\"\n        >\n          <ha-cards\n            data-view=\"\"\n            states=\"[[viewStates]]\"\n            columns=\"[[_columns]]\"\n            hass=\"[[hass]]\"\n            panel-visible=\"[[panelVisible]]\"\n            ordered-group-entities=\"[[orderedGroupEntities]]\"\n          ></ha-cards>\n\n          <template is=\"dom-repeat\" items=\"[[views]]\">\n            <ha-cards\n              data-view$=\"[[item.entity_id]]\"\n              states=\"[[viewStates]]\"\n              columns=\"[[_columns]]\"\n              hass=\"[[hass]]\"\n              panel-visible=\"[[panelVisible]]\"\n              ordered-group-entities=\"[[orderedGroupEntities]]\"\n            ></ha-cards>\n          </template>\n        </iron-pages>\n      </ha-app-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        value: null,\n        observer: \"hassChanged\",\n      },\n\n      narrow: {\n        type: Boolean,\n        value: false,\n      },\n\n      panelVisible: {\n        type: Boolean,\n        value: false,\n      },\n\n      route: Object,\n      routeData: Object,\n      routeMatch: Boolean,\n\n      _columns: {\n        type: Number,\n        value: 1,\n      },\n\n      locationName: {\n        type: String,\n        value: \"\",\n        computed: \"_computeLocationName(hass)\",\n      },\n\n      currentView: {\n        type: String,\n        computed: \"_computeCurrentView(hass, routeMatch, routeData)\",\n      },\n\n      views: {\n        type: Array,\n      },\n\n      defaultView: {\n        type: Object,\n      },\n\n      viewStates: {\n        type: Object,\n        computed: \"computeViewStates(currentView, hass, defaultView)\",\n      },\n\n      orderedGroupEntities: {\n        type: Array,\n        computed: \"computeOrderedGroupEntities(currentView, hass, defaultView)\",\n      },\n\n      showTabs: {\n        type: Boolean,\n        value: true,\n      },\n    };\n  }\n\n  static get observers() {\n    return [\"_updateColumns(narrow, hass.dockedSidebar)\"];\n  }\n\n  ready() {\n    this._updateColumns = this._updateColumns.bind(this);\n    this.mqls = [300, 600, 900, 1200].map((width) =>\n      matchMedia(`(min-width: ${width}px)`)\n    );\n    super.ready();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.mqls.forEach((mql) => mql.addListener(this._updateColumns));\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.mqls.forEach((mql) => mql.removeListener(this._updateColumns));\n  }\n\n  _updateColumns() {\n    const matchColumns = this.mqls.reduce((cols, mql) => cols + mql.matches, 0);\n    // Do -1 column if the menu is docked and open\n    this._columns = Math.max(\n      1,\n      matchColumns - (!this.narrow && this.hass.dockedSidebar)\n    );\n  }\n\n  areTabsHidden(views, showTabs) {\n    return !views || !views.length || !showTabs;\n  }\n\n  /**\n   * Scroll to a specific y coordinate.\n   *\n   * Copied from paper-scroll-header-panel.\n   *\n   * @method scroll\n   * @param {number} top The coordinate to scroll to, along the y-axis.\n   * @param {boolean} smooth true if the scroll position should be smoothly adjusted.\n   */\n  scrollToTop() {\n    // the scroll event will trigger _updateScrollState directly,\n    // However, _updateScrollState relies on the previous `scrollTop` to update the states.\n    // Calling _updateScrollState will ensure that the states are synced correctly.\n    var top = 0;\n    var scroller = this.$.layout.header.scrollTarget;\n    var easingFn = function easeOutQuad(t, b, c, d) {\n      /* eslint-disable no-param-reassign, space-infix-ops, no-mixed-operators */\n      t /= d;\n      return -c * t * (t - 2) + b;\n      /* eslint-enable no-param-reassign, space-infix-ops, no-mixed-operators */\n    };\n    var animationId = Math.random();\n    var duration = 200;\n    var startTime = Date.now();\n    var currentScrollTop = scroller.scrollTop;\n    var deltaScrollTop = top - currentScrollTop;\n    this._currentAnimationId = animationId;\n    (function updateFrame() {\n      var now = Date.now();\n      var elapsedTime = now - startTime;\n      if (elapsedTime > duration) {\n        scroller.scrollTop = top;\n      } else if (this._currentAnimationId === animationId) {\n        scroller.scrollTop = easingFn(\n          elapsedTime,\n          currentScrollTop,\n          deltaScrollTop,\n          duration\n        );\n        requestAnimationFrame(updateFrame.bind(this));\n      }\n    }.call(this));\n  }\n\n  handleViewSelected(ev) {\n    const view = ev.detail.item.getAttribute(\"data-entity\") || null;\n\n    if (view !== this.currentView) {\n      let path = \"/states\";\n      if (view) {\n        path += \"/\" + view;\n      }\n      this.navigate(path);\n    }\n  }\n\n  _computeCurrentView(hass, routeMatch, routeData) {\n    if (!routeMatch) return \"\";\n    if (\n      !hass.states[routeData.view] ||\n      !hass.states[routeData.view].attributes.view\n    ) {\n      return \"\";\n    }\n    return routeData.view;\n  }\n\n  computeTitle(views, defaultView, locationName) {\n    return (views &&\n      views.length > 0 &&\n      !defaultView &&\n      locationName === \"Home\") ||\n      !locationName\n      ? \"Home Assistant\"\n      : locationName;\n  }\n\n  _computeStateName(stateObj) {\n    return computeStateName(stateObj);\n  }\n\n  _computeLocationName(hass) {\n    return computeLocationName(hass);\n  }\n\n  hassChanged(hass) {\n    if (!hass) return;\n    const views = extractViews(hass.states);\n    let defaultView = null;\n    // If default view present, it's in first index.\n    if (views.length > 0 && views[0].entity_id === DEFAULT_VIEW_ENTITY_ID) {\n      defaultView = views.shift();\n    }\n\n    this.setProperties({ views, defaultView });\n  }\n\n  isView(currentView, defaultView) {\n    return (\n      (currentView || defaultView) &&\n      this.hass.states[currentView || DEFAULT_VIEW_ENTITY_ID]\n    );\n  }\n\n  _defaultViewFilter(hass, entityId) {\n    // Filter out hidden\n    return !hass.states[entityId].attributes.hidden;\n  }\n\n  _computeDefaultViewStates(hass, entityIds) {\n    const states = {};\n    entityIds\n      .filter(this._defaultViewFilter.bind(null, hass))\n      .forEach((entityId) => {\n        states[entityId] = hass.states[entityId];\n      });\n    return states;\n  }\n\n  /*\n    Compute the states to show for current view.\n\n    Will make sure we always show entities from ALWAYS_SHOW_DOMAINS domains.\n  */\n  computeViewStates(currentView, hass, defaultView) {\n    const entityIds = Object.keys(hass.states);\n\n    // If we base off all entities, only have to filter out hidden\n    if (!this.isView(currentView, defaultView)) {\n      return this._computeDefaultViewStates(hass, entityIds);\n    }\n\n    let states;\n    if (currentView) {\n      states = getViewEntities(hass.states, hass.states[currentView]);\n    } else {\n      states = getViewEntities(\n        hass.states,\n        hass.states[DEFAULT_VIEW_ENTITY_ID]\n      );\n    }\n\n    // Make sure certain domains are always shown.\n    entityIds.forEach((entityId) => {\n      const state = hass.states[entityId];\n\n      if (ALWAYS_SHOW_DOMAIN.includes(computeStateDomain(state))) {\n        states[entityId] = state;\n      }\n    });\n\n    return states;\n  }\n\n  /*\n    Compute the ordered list of groups for this view\n  */\n  computeOrderedGroupEntities(currentView, hass, defaultView) {\n    if (!this.isView(currentView, defaultView)) {\n      return null;\n    }\n\n    var orderedGroupEntities = {};\n    var entitiesList =\n      hass.states[currentView || DEFAULT_VIEW_ENTITY_ID].attributes.entity_id;\n\n    for (var i = 0; i < entitiesList.length; i++) {\n      orderedGroupEntities[entitiesList[i]] = i;\n    }\n\n    return orderedGroupEntities;\n  }\n}\n\ncustomElements.define(\"ha-panel-states\", PartialCards);\n"],"sourceRoot":""}