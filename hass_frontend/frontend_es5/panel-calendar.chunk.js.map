{"version":3,"sources":["webpack:///./src/mixins/events-mixin.js","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/panels/calendar/ha-big-calendar.js","webpack:///./src/panels/calendar/ha-panel-calendar.js"],"names":["EventsMixin","dedupingMixin","superClass","type","detail","options","fireEvent","node","localize","hass","Object","Function","computed","BigCalendar","setLocalizer","momentLocalizer","moment","DEFAULT_VIEW","HaBigCalendar","events","allViews","Views","values","BCElement","React","createElement","views","popup","onNavigate","date","viewName","fire","onView","eventPropGetter","_setEventStyle","defaultView","defaultDate","Date","render","$","root","event","newStyle","color","backgroundColor","style","html","Array","observer","PolymerElement","customElements","define","HaPanelCalendar","_fetchCalendars","callApi","then","result","calendars","selectedCalendars","map","cal","entity_id","start","dates","firstVisibleDay","currentDate","toISOString","end","lastVisibleDay","params","encodeURI","calls","Promise","all","results","tmpEvents","forEach","res","ev","push","startDate","endDate","currentView","startOf","endOf","subtract","add","_fetchData","String","value","narrow","Boolean","reflectToAttribute","LocalizeMixin"],"mappings":"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","file":"panel-calendar.chunk.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\n/* eslint-disable */\nimport { render } from \"react-dom\";\nimport React from \"react\";\n/* eslint-enable */\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { EventsMixin } from \"../../mixins/events-mixin\";\n\nimport \"../../resources/ha-style\";\n\nBigCalendar.setLocalizer(BigCalendar.momentLocalizer(moment));\n\nconst DEFAULT_VIEW = \"month\";\n\nclass HaBigCalendar extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"/static/panels/calendar/react-big-calendar.css\"\n      />\n      <style>\n        div#root {\n          height: 100%;\n          width: 100%;\n        }\n      </style>\n      <div id=\"root\"></div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      events: {\n        type: Array,\n        observer: \"_update\",\n      },\n    };\n  }\n\n  _update(events) {\n    const allViews = BigCalendar.Views.values;\n\n    const BCElement = React.createElement(BigCalendar, {\n      events: events,\n      views: allViews,\n      popup: true,\n      onNavigate: (date, viewName) => this.fire(\"navigate\", { date, viewName }),\n      onView: (viewName) => this.fire(\"view-changed\", { viewName }),\n      eventPropGetter: this._setEventStyle,\n      defaultView: DEFAULT_VIEW,\n      defaultDate: new Date(),\n    });\n    render(BCElement, this.$.root);\n  }\n\n  _setEventStyle(event) {\n    // https://stackoverflow.com/questions/34587067/change-color-of-react-big-calendar-events\n    const newStyle = {};\n    if (event.color) {\n      newStyle.backgroundColor = event.color;\n    }\n    return { style: newStyle };\n  }\n}\n\ncustomElements.define(\"ha-big-calendar\", HaBigCalendar);\n","import \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@polymer/paper-checkbox/paper-checkbox\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport moment from \"moment\";\nimport dates from \"react-big-calendar/lib/utils/dates\";\n\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-card\";\nimport \"../../resources/ha-style\";\nimport \"./ha-big-calendar\";\n\nimport LocalizeMixin from \"../../mixins/localize-mixin\";\n\nconst DEFAULT_VIEW = \"month\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPanelCalendar extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 16px;\n          @apply --layout-horizontal;\n        }\n\n        ha-big-calendar {\n          min-height: 500px;\n          min-width: 100%;\n        }\n\n        #calendars {\n          padding-right: 16px;\n          width: 15%;\n          min-width: 170px;\n        }\n\n        paper-item {\n          cursor: pointer;\n        }\n\n        div.all_calendars {\n          ￼height: 20px;\n          ￼text-align: center;\n        }\n\n        .iron-selected {\n          background-color: #e5e5e5;\n          font-weight: normal;\n        }\n\n        :host([narrow]) .content {\n          flex-direction: column;\n        }\n        :host([narrow]) #calendars {\n          margin-bottom: 24px;\n          width: 100%;\n        }\n      </style>\n\n      <app-header-layout has-scrolling-region>\n        <app-header slot=\"header\" fixed>\n          <app-toolbar>\n            <ha-menu-button></ha-menu-button>\n            <div main-title>[[localize('panel.calendar')]]</div>\n          </app-toolbar>\n        </app-header>\n\n        <div class=\"flex content\">\n          <div id=\"calendars\" class=\"layout vertical wrap\">\n            <ha-card header=\"Calendars\">\n              <paper-listbox\n                id=\"calendar_list\"\n                multi\n                on-selected-items-changed=\"_fetchData\"\n                selected-values=\"{{selectedCalendars}}\"\n                attr-for-selected=\"item-name\"\n              >\n                <template is=\"dom-repeat\" items=\"[[calendars]]\">\n                  <paper-item item-name=\"[[item.entity_id]]\">\n                    <span\n                      class=\"calendar_color\"\n                      style$=\"background-color: [[item.color]]\"\n                    ></span>\n                    <span class=\"calendar_color_spacer\"></span> [[item.name]]\n                  </paper-item>\n                </template>\n              </paper-listbox>\n            </ha-card>\n          </div>\n          <div class=\"flex layout horizontal wrap\">\n            <ha-big-calendar\n              default-date=\"[[currentDate]]\"\n              default-view=\"[[currentView]]\"\n              on-navigate=\"_handleNavigate\"\n              on-view=\"_handleViewChanged\"\n              events=\"[[events]]\"\n            >\n            </ha-big-calendar>\n          </div>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      currentView: {\n        type: String,\n        value: DEFAULT_VIEW,\n      },\n\n      currentDate: {\n        type: Object,\n        value: new Date(),\n      },\n\n      events: {\n        type: Array,\n        value: [],\n      },\n\n      calendars: {\n        type: Array,\n        value: [],\n      },\n\n      selectedCalendars: {\n        type: Array,\n        value: [],\n      },\n\n      narrow: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._fetchCalendars();\n  }\n\n  _fetchCalendars() {\n    this.hass.callApi(\"get\", \"calendars\").then((result) => {\n      this.calendars = result;\n      this.selectedCalendars = result.map((cal) => cal.entity_id);\n    });\n  }\n\n  _fetchData() {\n    const start = dates.firstVisibleDay(this.currentDate).toISOString();\n    const end = dates.lastVisibleDay(this.currentDate).toISOString();\n    const params = encodeURI(`?start=${start}&end=${end}`);\n    const calls = this.selectedCalendars.map((cal) =>\n      this.hass.callApi(\"get\", `calendars/${cal}${params}`)\n    );\n    Promise.all(calls).then((results) => {\n      const tmpEvents = [];\n\n      results.forEach((res) => {\n        res.forEach((ev) => {\n          ev.start = new Date(ev.start);\n          if (ev.end) {\n            ev.end = new Date(ev.end);\n          } else {\n            ev.end = null;\n          }\n          tmpEvents.push(ev);\n        });\n      });\n      this.events = tmpEvents;\n    });\n  }\n\n  _getDateRange() {\n    let startDate;\n    let endDate;\n    if (this.currentView === \"day\") {\n      startDate = moment(this.currentDate).startOf(\"day\");\n      endDate = moment(this.currentDate).startOf(\"day\");\n    } else if (this.currentView === \"week\") {\n      startDate = moment(this.currentDate).startOf(\"isoWeek\");\n      endDate = moment(this.currentDate).endOf(\"isoWeek\");\n    } else if (this.currentView === \"month\") {\n      startDate = moment(this.currentDate)\n        .startOf(\"month\")\n        .subtract(7, \"days\");\n      endDate = moment(this.currentDate)\n        .endOf(\"month\")\n        .add(7, \"days\");\n    } else if (this.currentView === \"agenda\") {\n      startDate = moment(this.currentDate).startOf(\"day\");\n      endDate = moment(this.currentDate)\n        .endOf(\"day\")\n        .add(1, \"month\");\n    }\n    return [startDate.toISOString(), endDate.toISOString()];\n  }\n\n  _handleViewChanged(ev) {\n    // Calendar view changed\n    this.currentView = ev.detail.viewName;\n    this._fetchData();\n  }\n\n  _handleNavigate(ev) {\n    // Calendar date range changed\n    this.currentDate = ev.detail.date;\n    this.currentView = ev.detail.viewName;\n    this._fetchData();\n  }\n}\n\ncustomElements.define(\"ha-panel-calendar\", HaPanelCalendar);\n"],"sourceRoot":""}