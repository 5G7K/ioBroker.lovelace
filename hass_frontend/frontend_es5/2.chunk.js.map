{"version":3,"sources":["webpack:///./src/panels/config/cloud/ha-config-cloud-forgot-password.js"],"names":["HaConfigCloudForgotPassword","_error","$","email","invalid","ev","keyCode","_handleEmailPasswordReset","preventDefault","includes","_requestInProgress","hass","callApi","then","fire","flashMessage","err","setProperties","body","message","html","Object","type","String","notify","observer","Boolean","value","EventsMixin","PolymerElement","customElements","define"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;IAGMA,2B;;;;;;;;;;;;;oCAoFY;AACd,WAAKC,MAAL,GAAc,EAAd;AACA,WAAKC,CAAL,CAAOC,KAAP,CAAaC,OAAb,GAAuB,KAAvB;AACD;;;6BAEQC,E,EAAI;AACX;AACA,UAAIA,EAAE,CAACC,OAAH,KAAe,EAAnB,EAAuB;AACrB,aAAKC,yBAAL;;AACAF,UAAE,CAACG,cAAH;AACD;AACF;;;gDAE2B;AAAA;;AAC1B,UAAI,CAAC,KAAKL,KAAN,IAAe,CAAC,KAAKA,KAAL,CAAWM,QAAX,CAAoB,GAApB,CAApB,EAA8C;AAC5C,aAAKP,CAAL,CAAOC,KAAP,CAAaC,OAAb,GAAuB,IAAvB;AACD;;AAED,UAAI,KAAKF,CAAL,CAAOC,KAAP,CAAaC,OAAjB,EAA0B;AAE1B,WAAKM,kBAAL,GAA0B,IAA1B;AAEA,WAAKC,IAAL,CACGC,OADH,CACW,MADX,EACmB,uBADnB,EAC4C;AACxCT,aAAK,EAAE,KAAKA;AAD4B,OAD5C,EAIGU,IAJH,CAKI,YAAM;AACJ,aAAI,CAACH,kBAAL,GAA0B,KAA1B;;AACA,aAAI,CAACI,IAAL,CAAU,YAAV,EAAwB;AACtBC,sBAAY,EACV;AAFoB,SAAxB;AAID,OAXL,EAYI,UAACC,GAAD;AAAA,eACE,KAAI,CAACC,aAAL,CAAmB;AACjBP,4BAAkB,EAAE,KADH;AAEjBT,gBAAM,EACJe,GAAG,IAAIA,GAAG,CAACE,IAAX,IAAmBF,GAAG,CAACE,IAAJ,CAASC,OAA5B,GACIH,GAAG,CAACE,IAAJ,CAASC,OADb,GAEI;AALW,SAAnB,CADF;AAAA,OAZJ;AAqBD;;;wBA9HqB;AACpB,aAAOC,gFAAP;AA6DD;;;wBAEuB;AACtB,aAAO;AACLT,YAAI,EAAEU,MADD;AAELlB,aAAK,EAAE;AACLmB,cAAI,EAAEC,MADD;AAELC,gBAAM,EAAE,IAFH;AAGLC,kBAAQ,EAAE;AAHL,SAFF;AAOLf,0BAAkB,EAAE;AAClBY,cAAI,EAAEI,OADY;AAElBC,eAAK,EAAE;AAFW,SAPf;AAWL1B,cAAM,EAAE;AACNqB,cAAI,EAAEC,MADA;AAENI,eAAK,EAAE;AAFD;AAXH,OAAP;AAgBD;;;;EAlFuCC,wEAAW,CAACC,+EAAD,C;;AAkIrDC,cAAc,CAACC,MAAf,CACE,iCADF,EAEE/B,2BAFF,E","file":"2.chunk.js","sourcesContent":["import \"@polymer/paper-input/paper-input\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/buttons/ha-progress-button\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../resources/ha-style\";\nimport { EventsMixin } from \"../../../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaConfigCloudForgotPassword extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 24px;\n          direction: ltr;\n        }\n\n        ha-card {\n          max-width: 600px;\n          margin: 0 auto;\n          margin-top: 24px;\n        }\n        h1 {\n          @apply --paper-font-headline;\n          margin: 0;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        .card-actions a {\n          color: var(--primary-text-color);\n        }\n        [hidden] {\n          display: none;\n        }\n      </style>\n      <hass-subpage header=\"Forgot Password\">\n        <div class=\"content\">\n          <ha-card header=\"Forgot your password\">\n            <div class=\"card-content\">\n              <p>\n                Enter your email address and we will send you a link to reset\n                your password.\n              </p>\n              <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n              <paper-input\n                autofocus=\"\"\n                id=\"email\"\n                label=\"E-mail\"\n                value=\"{{email}}\"\n                type=\"email\"\n                on-keydown=\"_keyDown\"\n                error-message=\"Invalid email\"\n              ></paper-input>\n            </div>\n            <div class=\"card-actions\">\n              <ha-progress-button\n                on-click=\"_handleEmailPasswordReset\"\n                progress=\"[[_requestInProgress]]\"\n                >Send reset email</ha-progress-button\n              >\n            </div>\n          </ha-card>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      email: {\n        type: String,\n        notify: true,\n        observer: \"_emailChanged\",\n      },\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      _error: {\n        type: String,\n        value: \"\",\n      },\n    };\n  }\n\n  _emailChanged() {\n    this._error = \"\";\n    this.$.email.invalid = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleEmailPasswordReset();\n      ev.preventDefault();\n    }\n  }\n\n  _handleEmailPasswordReset() {\n    if (!this.email || !this.email.includes(\"@\")) {\n      this.$.email.invalid = true;\n    }\n\n    if (this.$.email.invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass\n      .callApi(\"post\", \"cloud/forgot_password\", {\n        email: this.email,\n      })\n      .then(\n        () => {\n          this._requestInProgress = false;\n          this.fire(\"cloud-done\", {\n            flashMessage:\n              \"Check your email for instructions on how to reset your password.\",\n          });\n        },\n        (err) =>\n          this.setProperties({\n            _requestInProgress: false,\n            _error:\n              err && err.body && err.body.message\n                ? err.body.message\n                : \"Unknown error\",\n          })\n      );\n  }\n}\n\ncustomElements.define(\n  \"ha-config-cloud-forgot-password\",\n  HaConfigCloudForgotPassword\n);\n"],"sourceRoot":""}