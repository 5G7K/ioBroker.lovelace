{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-gauge-card-editor.ts"],"names":["Polymer","_template","html","is","behaviors","PaperItemBehavior","isEntityId","value","includes","isIcon","struct","superstruct","types","icon","cardConfigStruct","type","name","entity","unit","min","max","severity","theme","HuiGaugeCardEditor","customElement","property","config","_useSeverity","_config","number","undefined","hass","configElementStyle","_name","_valueChanged","_entity","_unit","_theme","_min","_max","_toggleSeverity","_severity","green","_severityChanged","yellow","red","css","ev","target","checked","fireEvent","configValue","Number","isNaN","LitElement"],"mappings":"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","file":"hui-gauge-card-editor.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { GaugeCardConfig, SeverityConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  name: \"string?\",\n  entity: \"string?\",\n  unit: \"string?\",\n  min: \"number?\",\n  max: \"number?\",\n  severity: \"object?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-gauge-card-editor\")\nexport class HuiGaugeCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GaugeCardConfig;\n\n  private _useSeverity?: boolean;\n\n  public setConfig(config: GaugeCardConfig): void {\n    config = cardConfigStruct(config);\n    this._useSeverity = !!config.severity;\n    this._config = config;\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _unit(): string {\n    return this._config!.unit || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  get _min(): number {\n    return this._config!.number || 0;\n  }\n\n  get _max(): number {\n    return this._config!.max || 100;\n  }\n\n  get _severity(): SeverityConfig | undefined {\n    return this._config!.severity || undefined;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Name\"\n            .value=\"${this._name}\"\n            .configValue=${\"name\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <ha-entity-picker\n            .hass=\"${this.hass}\"\n            .value=\"${this._entity}\"\n            .configValue=${\"entity\"}\n            domain-filter=\"sensor\"\n            @change=\"${this._valueChanged}\"\n            allow-custom-entity\n          ></ha-entity-picker>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Unit\"\n            .value=\"${this._unit}\"\n            .configValue=${\"unit\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            type=\"number\"\n            label=\"Minimum\"\n            .value=\"${this._min}\"\n            .configValue=${\"min\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            type=\"number\"\n            label=\"Maximum\"\n            .value=\"${this._max}\"\n            .configValue=${\"max\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-toggle-button\n            ?checked=\"${this._useSeverity !== false}\"\n            @change=\"${this._toggleSeverity}\"\n            >Define Severity?</paper-toggle-button\n          >\n          <div class=\"severity\">\n            <paper-input\n              type=\"number\"\n              label=\"Green\"\n              .value=\"${this._severity ? this._severity.green : 0}\"\n              .configValue=${\"green\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n            <paper-input\n              type=\"number\"\n              label=\"Yellow\"\n              .value=\"${this._severity ? this._severity.yellow : 0}\"\n              .configValue=${\"yellow\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n            <paper-input\n              type=\"number\"\n              label=\"Red\"\n              .value=\"${this._severity ? this._severity.red : 0}\"\n              .configValue=${\"red\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .severity {\n        display: none;\n        width: 100%;\n        padding-left: 16px;\n        flex-direction: row;\n        flex-wrap: wrap;\n      }\n      .severity > * {\n        flex: 1 0 30%;\n        padding-right: 4px;\n      }\n      paper-toggle-button[checked] ~ .severity {\n        display: flex;\n      }\n    `;\n  }\n\n  private _toggleSeverity(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    this._config.severity = target.checked\n      ? {\n          green: 0,\n          yellow: 0,\n          red: 0,\n        }\n      : undefined;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _severityChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    const severity = {\n      ...this._config.severity,\n      [target.configValue!]: Number(target.value),\n    };\n    this._config = {\n      ...this._config,\n      severity,\n    };\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-gauge-card-editor\": HuiGaugeCardEditor;\n  }\n}\n"],"sourceRoot":""}