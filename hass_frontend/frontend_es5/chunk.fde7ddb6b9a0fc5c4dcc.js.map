{"version":3,"sources":["webpack:///./node_modules/@polymer/iron-input/iron-input.js","webpack:///./node_modules/@polymer/paper-item/paper-item-behavior.js","webpack:///./node_modules/@polymer/paper-item/paper-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-shared-styles.js","webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/common/entity/domain_icon.ts","webpack:///./src/mixins/events-mixin.js","webpack:///./src/common/entity/compute_state_domain.ts","webpack:///./src/components/ha-icon.ts","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/components/entity/state-badge.ts","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/common/entity/sensor_icon.ts","webpack:///./src/common/entity/state_icon.ts","webpack:///./src/common/entity/binary_sensor_icon.ts","webpack:///./src/common/entity/cover_icon.ts","webpack:///./src/common/entity/input_dateteime_icon.ts","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/resources/codemirror.ondemand.ts","webpack:///./src/components/ha-code-editor.ts","webpack:///./src/components/ha-combo-box.js","webpack:///./src/components/ha-service-picker.js","webpack:///./src/data/entity.ts","webpack:///./node_modules/@polymer/app-storage/app-storage-behavior.js","webpack:///./src/util/app-localstorage-document.js","webpack:///./src/panels/developer-tools/service/developer-tools-service.js","webpack:///./node_modules/@polymer/paper-input/paper-input.js","webpack:///./node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js"],"names":["Polymer","_template","html","_templateObject","is","behaviors","IronValidatableBehavior","properties","bindValue","type","String","value","computed","allowedPattern","autoValidate","Boolean","_inputElement","Object","observers","listeners","input","keypress","created","IronA11yAnnouncer","requestAvailability","this","_previousValidInput","_patternAlreadyChecked","attached","_observer","dom","observeNodes","info","_initSlottedInput","bind","detached","unobserveNodes","inputElement","getEffectiveChildren","fire","_patternRegExp","pattern","RegExp","_bindValueChanged","undefined","validate","_onInput","_checkPatternValidity","_announceInvalidCharacter","_isPrintable","event","anyNonPrintable","keyCode","mozNonPrintable","charCode","_onKeypress","regexp","metaKey","ctrlKey","altKey","thisChar","fromCharCode","test","preventDefault","i","length","invalid","valid","checkValidity","required","hasValidator","call","message","text","_computeValue","__webpack_require__","d","__webpack_exports__","PaperItemBehavior","_polymer_iron_behaviors_iron_button_state_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_iron_behaviors_iron_control_state_js__WEBPACK_IMPORTED_MODULE_2__","IronButtonState","IronControlState","hostAttributes","role","tabindex","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","computeStateName","_compute_object_id__WEBPACK_IMPORTED_MODULE_0__","stateObj","attributes","friendly_name","computeObjectId","entity_id","replace","dedupingMixin","superClass","_superClass","_class","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","key","get","hass","localize","Function","domainIcon","_const__WEBPACK_IMPORTED_MODULE_0__","fixedIcons","alert","alexa","automation","calendar","camera","climate","configurator","conversation","counter","device_tracker","fan","google_assistant","group","history_graph","homeassistant","homekit","image_processing","input_boolean","input_datetime","input_number","input_select","input_text","light","mailbox","notify","persistent_notification","person","plant","proximity","remote","scene","script","sensor","simple_alarm","sun","switch","timer","updater","vacuum","water_heater","weather","weblink","zone","domain","state","console","warn","DEFAULT_DOMAIN_ICON","EventsMixin","detail","options","fireEvent","node","computeStateDomain","_compute_domain__WEBPACK_IMPORTED_MODULE_0__","computeDomain","ironIconClass","customElements","loaded","HaIcon","_ironIconClass","_getPrototypeOf2","_this","_len","args","Array","_key","concat","_assertThisInitialized","eventName","methodName","_get","prototype","_iconsetName","e","then","define","StateBadge","property","query","_templateObject2","overrideIcon","stateIcon","changedProps","has","iconStyle","color","filter","hostStyle","backgroundImage","entity_picture","overrideImage","imageUrl","hassUrl","display","hs_color","hue","sat","brightness","errorMessage","_typeof","assign","_icon","style","css","_templateObject3","LitElement","fixedDeviceClassIcons","humidity","illuminance","temperature","pressure","power","signal_strength","state_icon_stateIcon","domainIcons","binary_sensor","activated","device_class","cover","open","dclass","battery","Number","isNaN","batteryRound","Math","round","unit","unit_of_measurement","UNIT_C","UNIT_F","has_date","has_time","icon","entityId","substr","indexOf","rowRenderer","root","_owner","model","firstElementChild","querySelector","item","textContent","HaEntityPicker","attribute","memoizeOne","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","keys","eid","includes","sort","map","_this2","_opened","_hass","_getStates","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","label","disabled","_clearValue","ev","stopPropagation","_setValue","newValue","_this3","setTimeout","_templateObject4","loadCodeMirror","_ref","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Promise","all","abrupt","stop","_decorate","customElement","_initialize","_UpdatingElement","HaCodeEditor","_UpdatingElement2","F","kind","decorators","codemirror","getValue","shadowRoot","refresh","focus","setOption","mode","setValue","_calcGutters","_setScrollBarDirection","classList","toggle","error","_load","_load2","codeMirror","sent","attachShadow","codeMirrorCss","lineNumbers","tabSize","viewportMargin","Infinity","extraKeys","Tab","Shift-Tab","gutters","on","_onChange","rtl","getWrapperElement","UpdatingElement","HaComboBox","PolymerElement","allowCustomValue","items","observer","_items","itemLabelPath","itemValuePath","opened","newVal","HaServicePicker","LocalizeMixin","ha_service_picker_templateObject","_services","oldHass","services","result","forEach","push","UNAVAILABLE","ENTITY_COMPONENT_DOMAINS","SPLICES_RX","LENGTH_RX","NUMBER_RX","AppStorageBehavior","data","zeroValue","sequentialTransactions","log","__initialized","__syncingToMemory","__initializingStoredValue","__transactionQueueAdvances","resolve","ready","_initializeStoredValue","isNew","transactionsComplete","saveValue","reset","destroy","initializeStoredValue","_getStoredValue","_log","_setStoredValue","syncToMemory","set","getStoredValue","storagePath","setStoredValue","memoryPathToStoragePath","path","storagePathToMemoryPath","operation","_group","_groupEnd","valueIsEmpty","isArray","isPrototypeOf","_enqueueTransaction","transaction","_error","_len2","_key2","_len3","_key3","_len4","_key4","groupEnd","initializingStoredValue","__dataChanged","change","__pathCanBeIgnored","__normalizeMemoryPath","indexSplices","__pathIsSplices","__parentPath","parts","split","parentPath","currentPath","normalizedPath","join","slice","__pathRefersToArray","__pathTailToIndex","tail","pop","window","parseInt","sessionOnly","storage","listen","top","unlisten","__setStorageValue","reject","removeItem","__parseValueFromStorage","__computeStorage","sessionStorage","localStorage","__storageSourceChanged","__onStorage","storageArea","__onAppLocalStorageChanged","JSON","parse","getItem","setItem","stringify","ERROR_SENTINEL","HaPanelDevService","domainService","_domain","_service","serviceData","parsedJSON","validJSON","_attributes","_description","service","serviceDomains","fields","field","description","trim","safeLoad","err","some","attr","callService","example","safeDump","target","PaperInputBehavior","IronFormElementBehavior","_focusableElement","iron-input-ready","_onIronInputReady","$","nativeInput","$$","_typesThatHaveText","alwaysFloatLabel","container","_handleValueAndAutoValidate","_text","instance","body","addEventListener","_onIronAnnounce","announce","async"],"mappings":";qaAoGAA,YAAQ,CACNC,UAAWC,YAAFC,KASTC,GAAI,aACJC,UAAW,CAACC,KAQZC,WAAY,CAOVC,UAAW,CAACC,KAAMC,OAAQC,MAAO,IAOjCA,MAAO,CAACF,KAAMC,OAAQE,SAAU,4BAqBhCC,eAAgB,CAACJ,KAAMC,QAKvBI,aAAc,CAACL,KAAMM,QAASJ,OAAO,GAKrCK,cAAeC,QAGjBC,UAAW,CAAC,+CACZC,UAAW,CAACC,MAAS,WAAYC,SAAY,eAE7CC,QAAS,WACPC,IAAkBC,sBAClBC,KAAKC,oBAAsB,GAC3BD,KAAKE,wBAAyB,GAGhCC,SAAU,WAERH,KAAKI,UAAYC,YAAIL,MAAMM,aAAa,SAASC,GAC/CP,KAAKQ,qBACLC,KAAKT,QAGTU,SAAU,WACJV,KAAKI,YACPC,YAAIL,MAAMW,eAAeX,KAAKI,WAC9BJ,KAAKI,UAAY,OAOrBQ,mBACE,OAAOZ,KAAKT,eAGdiB,kBAAmB,WACjBR,KAAKT,cAAgBS,KAAKa,uBAAuB,GAE7Cb,KAAKY,cAAgBZ,KAAKY,aAAa1B,QACzCc,KAAKjB,UAAYiB,KAAKY,aAAa1B,OAGrCc,KAAKc,KAAK,qBAGZC,qBACE,IAAIC,EACJ,GAAIhB,KAAKZ,eACP4B,EAAU,IAAIC,OAAOjB,KAAKZ,qBAE1B,OAAQY,KAAKY,aAAa5B,MACxB,IAAK,SACHgC,EAAU,YAIhB,OAAOA,GAMTE,kBAAmB,SAASnC,EAAW6B,GAGhCA,SAIaO,IAAdpC,EACF6B,EAAa1B,MAAQ,KACZH,IAAc6B,EAAa1B,QACpCc,KAAKY,aAAa1B,MAAQH,GAGxBiB,KAAKX,cACPW,KAAKoB,WAIPpB,KAAKc,KAAK,qBAAsB,CAAC5B,MAAOH,MAG1CsC,SAAU,WAGJrB,KAAKZ,iBAAmBY,KAAKE,yBACnBF,KAAKsB,0BAEftB,KAAKuB,0BACD,6CACJvB,KAAKY,aAAa1B,MAAQc,KAAKC,sBAGnCD,KAAKjB,UAAYiB,KAAKC,oBAAsBD,KAAKY,aAAa1B,MAC9Dc,KAAKE,wBAAyB,GAGhCsB,aAAc,SAASC,GAcrB,IAAIC,EAAoC,GAAjBD,EAAME,SACP,GAAjBF,EAAME,SACW,IAAjBF,EAAME,SACW,IAAjBF,EAAME,QAGPC,EAAoC,IAAjBH,EAAME,SACP,IAAjBF,EAAME,SACW,IAAjBF,EAAME,SACW,IAAjBF,EAAME,SACW,KAAjBF,EAAME,SACW,KAAjBF,EAAME,SACNF,EAAME,QAAU,IAChBF,EAAME,QAAU,IAChBF,EAAME,QAAU,KAAOF,EAAME,QAAU,IAE5C,QAAQD,GAAuC,GAAlBD,EAAMI,UAAiBD,IAGtDE,YAAa,SAASL,GACpB,GAAKzB,KAAKZ,gBAA6C,WAA3BY,KAAKY,aAAa5B,KAA9C,CAGA,IAAI+C,EAAS/B,KAAKe,eAClB,GAAKgB,KAKDN,EAAMO,SAAWP,EAAMQ,SAAWR,EAAMS,QAA5C,CAKAlC,KAAKE,wBAAyB,EAE9B,IAAIiC,EAAWlD,OAAOmD,aAAaX,EAAMI,UACrC7B,KAAKwB,aAAaC,KAAWM,EAAOM,KAAKF,KAC3CV,EAAMa,iBACNtC,KAAKuB,0BACD,qBAAuBY,EAAW,qBAI1Cb,sBAAuB,WACrB,IAAIS,EAAS/B,KAAKe,eAClB,IAAKgB,EACH,OAAO,EAET,IAAK,IAAIQ,EAAI,EAAGA,EAAIvC,KAAKY,aAAa1B,MAAMsD,OAAQD,IAClD,IAAKR,EAAOM,KAAKrC,KAAKY,aAAa1B,MAAMqD,IACvC,OAAO,EAGX,OAAO,GAQTnB,SAAU,WACR,IAAKpB,KAAKY,aAER,OADAZ,KAAKyC,SAAU,GACR,EAIT,IAAIC,EAAQ1C,KAAKY,aAAa+B,gBAc9B,OAXID,IAEE1C,KAAK4C,UAA+B,KAAnB5C,KAAKjB,UACxB2D,GAAQ,EACC1C,KAAK6C,iBACdH,EAAQ7D,IAAwBuC,SAAS0B,KAAK9C,KAAMA,KAAKjB,aAI7DiB,KAAKyC,SAAWC,EAChB1C,KAAKc,KAAK,uBACH4B,GAGTnB,0BAA2B,SAASwB,GAClC/C,KAAKc,KAAK,gBAAiB,CAACkC,KAAMD,KAGpCE,cAAe,SAASlE,GACtB,OAAOA,uCC7WXmE,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAA,OAAAI,EAAAJ,EAAA,IAAAK,EAAAL,EAAA,IA0BaG,EACT,CAACG,IAAiBC,IANe,CACnCC,eAAgB,CAACC,KAAM,SAAUC,SAAU,ufCsE7CrF,YAAQ,CACNC,UAAWC,YAAFC,KAaTC,GAAI,aACJC,UAAW,CAACyE,yCC3GdH,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAcMW,EAAsBC,SAASC,cAAc,YACnDF,EAAoBG,aAAa,QAAS,kBAE1CH,EAAoBI,UAApB,40CAwDAH,SAASI,KAAKC,YAAYN,EAAoBO,2CCxE9ClB,EAAAC,EAAAC,EAAA,sBAAAiB,IAAA,IAAAC,EAAApB,EAAA,KAEamB,EAAmB,SAACE,GAC/B,YAA6CpD,IAAtCoD,EAASC,WAAWC,cACvBC,YAAgBH,EAASI,WAAWC,QAAQ,KAAM,KAClDL,EAASC,WAAWC,eAAiB,w1BCA5BI,gBACb,SAACC,GAAD,gBAAAC,GAAA,SAAAC,IAAA,mGAAAC,CAAAjF,KAAAgF,GAAAE,EAAAlF,KAAAmF,EAAAH,GAAAI,MAAApF,KAAAqF,sBAAA,yOAAAC,CAAAN,EACgBF,KADhBE,IAAA,EAAAO,IAAA,aAAAC,IAAA,WAGM,MAAO,CACLC,KAAMjG,OAONkG,SAAU,CACR1G,KAAM2G,SACNxG,SAAU,2CAbpB,EAAAoG,IAAA,oBAAArG,MAAA,SAkBsBwG,GAChB,OAAOA,kCAnBbV,EAAA,uCCPF9B,EAAAC,EAAAC,EAAA,sBAAAwC,IAAA,IAAAC,EAAA3C,EAAA,KAOM4C,EAAa,CACjBC,MAAO,aACPC,MAAO,oBACPC,WAAY,qBACZC,SAAU,gBACVC,OAAQ,aACRC,QAAS,kBACTC,aAAc,gBACdC,aAAc,sBACdC,QAAS,eACTC,eAAgB,eAChBC,IAAK,WACLC,iBAAkB,wBAClBC,MAAO,kCACPC,cAAe,kBACfC,cAAe,sBACfC,QAAS,uBACTC,iBAAkB,2BAClBC,cAAe,eACfC,eAAgB,sBAChBC,aAAc,kBACdC,aAAc,4BACdC,WAAY,eACZC,MAAO,iBACPC,QAAS,eACTC,OAAQ,qBACRC,wBAAyB,YACzBC,OAAQ,eACRC,MAAO,cACPC,UAAW,oBACXC,OAAQ,cACRC,MAAO,oBACPC,OAAQ,qBACRC,OAAQ,WACRC,aAAc,YACdC,IAAK,2BACLC,OAAQ,aACRC,MAAO,aACPC,QAAS,oBACTC,OAAQ,oBACRC,aAAc,mBACdC,QAAS,sBACTC,QAAS,mBACTC,KAAM,mBAGK7C,EAAa,SAAC8C,EAAgBC,GACzC,GAAID,KAAU5C,EACZ,OAAOA,EAAW4C,GAGpB,OAAQA,GACN,IAAK,sBACH,OAAQC,GACN,IAAK,aACH,MAAO,iBACT,IAAK,cACH,MAAO,kBACT,IAAK,WACH,MAAO,oBACT,IAAK,YACH,MAAO,iBACT,QACE,MAAO,YAGb,IAAK,gBACH,OAAOA,GAAmB,QAAVA,EACZ,sBACA,8BAEN,IAAK,QACH,MAAiB,WAAVA,EAAqB,qBAAuB,mBAErD,IAAK,OACH,OAAOA,GAAmB,aAAVA,EAAuB,iBAAmB,YAE5D,IAAK,eACH,OAAOA,GAAmB,QAAVA,GAA6B,SAAVA,EAC/B,sBACA,YAEN,IAAK,QACH,OAAQA,GACN,IAAK,OACH,MAAO,qBACT,IAAK,WACH,MAAO,aACT,IAAK,eACH,MAAO,kBACT,QACE,MAAO,cAGb,QAKE,OAHAC,QAAQC,KACN,kCAAoCH,EAAS,KAAOC,EAAQ,KAEvDG,k4BCvEN,IAAMC,EAAclE,YACzB,SAACC,GAAD,gBAAAC,GAAA,SAAAC,IAAA,mGAAAC,CAAAjF,KAAAgF,GAAAE,EAAAlF,KAAAmF,EAAAH,GAAAI,MAAApF,KAAAqF,sBAAA,yOAAAC,CAAAN,EACgBF,KADhBE,KAAA,EAAAO,IAAA,OAAArG,MAAA,SAiBSF,EAAMgK,EAAQC,GAEjB,OADAA,EAAUA,GAAW,GACdC,YAAUD,EAAQE,MAAQnJ,KAAMhB,EAAMgK,EAAQC,mCAnB3DjE,EAAA,uCCnCF9B,EAAAC,EAAAC,EAAA,sBAAAgG,IAAA,IAAAC,EAAAnG,EAAA,KAEakG,EAAqB,SAAC7E,GACjC,OAAO+E,YAAc/E,EAASI,+lCCGhC,IAAM4E,EAAgBC,eAAehE,IAAI,aAIrCiE,GAAS,EAEAC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,qGAAA5E,CAAAjF,KAAA0J,GAAA,QAAAI,EAAAzE,UAAA7C,OAAAuH,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA5E,UAAA4E,GAAA,OAAAJ,uEAAA3E,CAAAlF,MAAA4J,EAAAzE,EAAAuE,IAAA5G,KAAAsC,MAAAwE,EAAA,CAAA5J,MAAAkK,OAAAH,OAAAI,EAAAN,UAAA,+GAAAA,YAAA,yOAAAvE,CAAAoE,EAA4BH,KAA5BG,KAAA,EAAAnE,IAAA,SAAArG,MAAA,SAIIiK,EACAiB,EACAC,GAEAC,EAAAnF,EAAAuE,EAAAa,WAAA,SAAAvK,MAAA8C,KAAA9C,KAAamJ,EAAMiB,EAAWC,GAEzBZ,GAAgC,QAAtBzJ,KAAKwK,eAClBf,GAAS,EACTvG,EAAAuH,EAAA,IAAAC,KAAAxH,EAAAzC,KAAA,4CAZNiJ,EAAA,GAuBAF,eAAemB,OAAO,UAAWjB,gkCCQjCnL,YAAQ,CACNC,UAAWC,YAAFC,KAmCTC,GAAI,quGC7DAiM,y/MAEHC,sEACAA,0EACAA,2EACAC,YAAM,wEAEP,WACE,IAAMvG,EAAWvE,KAAKuE,SAEtB,OAAKA,EAIE9F,YAAPsM,IAGkB3B,YAAmB7E,GACpBA,EAASoE,MACd3I,KAAKgL,cAAgBC,YAAU1G,IARlC9F,YAAPC,0CAaJ,SAAkBwM,GAChB,GAAKA,EAAaC,IAAI,aAAgBnL,KAAKuE,SAA3C,CAGA,IAAMA,EAAWvE,KAAKuE,SAEhB6G,EAA0C,CAC9CC,MAAO,GACPC,OAAQ,IAEJC,EAA0C,CAC9CC,gBAAiB,IAEnB,GAAIjH,EAEF,GACGA,EAASC,WAAWiH,iBAAmBzL,KAAKgL,cAC7ChL,KAAK0L,cACL,CACA,IAAIC,EAAW3L,KAAK0L,eAAiBnH,EAASC,WAAWiH,eACrDzL,KAAKyF,OACPkG,EAAW3L,KAAKyF,KAAKmG,QAAQD,IAE/BJ,EAAUC,gBAAV,OAAAtB,OAAmCyB,EAAnC,KACAP,EAAUS,QAAU,WACf,CACL,GAAItH,EAASC,WAAWsH,SAAU,CAChC,IAAMC,EAAMxH,EAASC,WAAWsH,SAAS,GACnCE,EAAMzH,EAASC,WAAWsH,SAAS,GACrCE,EAAM,KACRZ,EAAUC,MAAV,OAAAnB,OAAyB6B,EAAzB,YAAA7B,OAAuC,IAAM8B,EAAM,EAAnD,OAGJ,GAAIzH,EAASC,WAAWyH,WAAY,CAClC,IAAMA,EAAa1H,EAASC,WAAWyH,WACvC,GAA0B,iBAAfA,EAAyB,CAClC,IAAMC,EAAY,wDAAAhC,OAChB3F,EAASI,UADO,8BAAAuF,OAAAiC,EAEkBF,GAFlB,MAAA/B,OAEiC+B,EAFjC,KAIlBrD,QAAQC,KAAKqD,GAGfd,EAAUE,OAAV,cAAApB,QAAkC+B,EAAa,KAAO,EAAtD,OAINzM,OAAO4M,OAAOpM,KAAKqM,MAAMC,MAAOlB,GAChC5L,OAAO4M,OAAOpM,KAAKsM,MAAOf,+CAG5B,WACE,OAAOgB,YAAPC,UA5EqBC,KAqHzBjD,eAAemB,OAAO,cAAeC,u1BCnFrCrM,YAAQ,CACNC,UAAWC,YAAFC,KA2BTC,GAAI,kBACJC,UAAW,CAACyE,wEC7ERqJ,EAAwB,CAC5BC,SAAU,qBACVC,YAAa,oBACbC,YAAa,mBACbC,SAAU,aACVC,MAAO,aACPC,gBAAiB,aCXnB9J,EAAAC,EAAAC,EAAA,sBAAA6J,IAWA,IAAMC,EAAc,CAClBC,cCR8B,SAACxE,GAC/B,IAAMyE,EAAYzE,EAAMA,OAAyB,QAAhBA,EAAMA,MACvC,OAAQA,EAAMnE,WAAW6I,cACvB,IAAK,UACH,OAAOD,EAAY,eAAiB,uBACtC,IAAK,OACH,OAAOA,EAAY,mBAAqB,iBAC1C,IAAK,eACH,OAAOA,EAAY,0BAA4B,sBACjD,IAAK,OACH,OAAOA,EAAY,mBAAqB,iBAC1C,IAAK,cACH,OAAOA,EAAY,cAAgB,mBACrC,IAAK,MACL,IAAK,QACL,IAAK,UACL,IAAK,SACL,IAAK,QACH,OAAOA,EAAY,oBAAsB,aAC3C,IAAK,OACH,OAAOA,EAAY,mBAAqB,YAC1C,IAAK,QACH,OAAOA,EAAY,oBAAsB,oBAC3C,IAAK,OACH,OAAOA,EAAY,YAAc,iBACnC,IAAK,WACH,OAAOA,EAAY,iBAAmB,aACxC,IAAK,SACH,OAAOA,EAAY,YAAc,WACnC,IAAK,YACH,OAAOA,EAAY,oBAAsB,YAC3C,IAAK,UACH,OAAOA,EAAY,cAAgB,sBACrC,IAAK,OACH,OAAOA,EAAY,sBAAwB,kBAC7C,IAAK,WACH,OAAOA,EAAY,oBAAsB,YAC3C,IAAK,QACH,OAAOA,EAAY,sBAAwB,kBAC7C,IAAK,YACH,OAAOA,EAAY,qBAAuB,eAC5C,IAAK,SACH,OAAOA,EAAY,qBAAuB,mBAC5C,QACE,OAAOA,EAAY,sBAAwB,gCDnC/CE,METuB,SAAC3E,GACxB,IAAM4E,EAAuB,WAAhB5E,EAAMA,MACnB,OAAQA,EAAMnE,WAAW6I,cACvB,IAAK,SACH,OAAOE,EAAO,mBAAqB,cACrC,IAAK,OACH,OAAOA,EAAO,iBAAmB,mBACnC,IAAK,UACH,OAAOA,EAAO,2BAA6B,sBAC7C,IAAK,QACH,OAAOA,EAAO,mBAAqB,cACrC,IAAK,SACH,OAAOA,EAAO,mBAAqB,qBACrC,QACE,OAAO3H,YAAW,QAAS+C,EAAMA,SFJrCZ,ODAwB,SAACY,GACzB,IAAM6E,EAAS7E,EAAMnE,WAAW6I,aAEhC,GAAIG,GAAUA,KAAUd,EACtB,OAAOA,EAAsBc,GAE/B,GAAe,YAAXA,EAAsB,CACxB,IAAMC,EAAUC,OAAO/E,EAAMA,OAC7B,GAAIgF,MAAMF,GACR,MAAO,uBAET,IAAMG,EAA0C,GAA3BC,KAAKC,MAAML,EAAU,IAC1C,OAAIG,GAAgB,IACX,eAELA,GAAgB,EACX,qBAaC,OAAV1D,OAAA,YAA4B0D,GAG9B,IAAMG,EAAOpF,EAAMnE,WAAWwJ,oBAC9B,OAAID,IAASE,KAAUF,IAASG,IACvB,mBAEFtI,YAAW,WCnClBqB,eGX+B,SAAC0B,GAChC,OAAKA,EAAMnE,WAAW2J,SAGjBxF,EAAMnE,WAAW4J,SAGfxI,YAAW,kBAFT,gBAHA,eHYEqF,EAAY,SAACtC,GACxB,IAAKA,EACH,OAAOG,IAET,GAAIH,EAAMnE,WAAW6J,KACnB,OAAO1F,EAAMnE,WAAW6J,KAG1B,IAAM3F,EAASY,YAAcX,EAAMhE,WAEnC,OAAI+D,KAAUwE,EACLA,EAAYxE,GAAQC,GAEtB/C,YAAW8C,EAAQC,EAAMA,0CI/BlCzF,EAAAC,EAAAC,EAAA,sBAAAsB,IACO,IAAMA,EAAkB,SAAC4J,GAC9B,OAAOA,EAASC,OAAOD,EAASE,QAAQ,KAAO,m7HCyBjD,IAAMC,EAAc,SAClBC,EACAC,EACAC,GAEKF,EAAKG,oBACRH,EAAKzK,UAAL,qbAiBFyK,EAAKI,cAAc,eAAgBvK,SAAWqK,EAAMG,KACpDL,EAAKI,cAAc,SAAUE,YAAc3K,YAAiBuK,EAAMG,MAClEL,EAAKI,cAAc,eAAgBE,YAAcJ,EAAMG,KAAKpK,WAGxDsK,09MACHpE,YAAS,CAAE7L,KAAMM,mEACjBuL,YAAS,CAAE7L,KAAMM,kEACjBuL,YAAS,CAAE7L,KAAMM,QAAS4P,UAAW,yFAErCrE,kEACAA,mEACAA,mEAMAA,YAAS,CAAE7L,KAAMgL,MAAOkF,UAAW,kFAOnCrE,YAAS,CAAE7L,KAAMgL,MAAOkF,UAAW,kFAOnCrE,YAAS,CAAE7L,KAAMgL,MAAOkF,UAAW,+FAEnCrE,0EACAA,YAAS,CAAE7L,KAAMM,iEACjBuL,2GAEoBsE,YACnB,SACE1J,EACA2J,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAuB,GAE3B,IAAK/J,EACH,MAAO,GAET,IAAIgK,EAAYjQ,OAAOkQ,KAAKjK,EAAK+J,QAkCjC,OAhCIJ,IACFK,EAAYA,EAAUnE,OAAO,SAACqE,GAAD,OAC3BP,EAAeQ,SAAStG,YAAcqG,OAItCN,IACFI,EAAYA,EAAUnE,OACpB,SAACqE,GAAD,OAAUN,EAAeO,SAAStG,YAAcqG,OAIpDH,EAASC,EAAUI,OAAOC,IAAI,SAACvK,GAAD,OAASE,EAAM+J,OAAOjK,KAEhDgK,IACFC,EAASA,EAAOlE,OACd,SAAC/G,GAAD,OAEEA,EAASI,YAAcoL,EAAK7Q,OAC3BqF,EAASC,WAAW6I,cACnBkC,EAAqBK,SAASrL,EAASC,WAAW6I,iBAItDiC,IACFE,EAASA,EAAOlE,OACd,SAAC/G,GAAD,OAEEA,EAASI,YAAcoL,EAAK7Q,OAASoQ,EAAc/K,MAIlDiL,yCAIX,SAAkBtE,GAChBZ,EAAAnF,EArFE8J,EAqFF1E,WAAA,UAAAvK,MAAA8C,KAAA9C,KAAckL,GAEVA,EAAaC,IAAI,UAAYnL,KAAKgQ,UACpChQ,KAAKiQ,MAAQjQ,KAAKyF,0CAItB,WACE,IAAM+J,EAASxP,KAAKkQ,WAClBlQ,KAAKiQ,MACLjQ,KAAKoP,eACLpP,KAAKqP,eACLrP,KAAKsP,aACLtP,KAAKuP,sBAGP,OAAO9Q,YAAPC,IAIa8Q,EACAxP,KAAKmQ,OACMnQ,KAAKoQ,kBACb3B,EACMzO,KAAKqQ,eACNrQ,KAAKsQ,cAGPtQ,KAAKuQ,eACMpP,IAAfnB,KAAKwQ,OAAuBxQ,KAAKiQ,MACtCjQ,KAAKiQ,MAAMvK,SAAS,6CACpB1F,KAAKwQ,MACAxQ,KAAKmQ,OACFnQ,KAAKyQ,SAOfzQ,KAAKd,MACHT,YADFsM,IAGmB/K,KAAKyF,KAAMC,SACtB,4CAKO1F,KAAK0Q,aAMlB,GACFlB,EAAOhN,OAAS,EACd/D,YADF+N,IAGmBxM,KAAKyF,KAAMC,SACtB,oDAIM1F,KAAKgQ,QAAU,eAAiB,kBAK5C,6CAMZ,SAAoBW,GAClBA,EAAGC,kBACH5Q,KAAK6Q,UAAU,qCAGjB,WACE,OAAO7Q,KAAKd,OAAS,+CAGvB,SAAuByR,GACrB3Q,KAAKgQ,QAAUW,EAAG3H,OAAO9J,iDAG3B,SAAsByR,GACpB,IAAMG,EAAWH,EAAG3H,OAAO9J,MACvB4R,IAAa9Q,KAAKmQ,QACpBnQ,KAAK6Q,UAAUC,0CAInB,SAAkB5R,GAAe,IAAA6R,EAAA/Q,KAC/BA,KAAKd,MAAQA,EACb8R,WAAW,WACT9H,YAAU6H,EAAM,gBAAiB,CAAE7R,UACnCgK,YAAU6H,EAAM,WACf,8CAGL,WACE,OAAOxE,YAAP0E,UA7LyBxE,KA2M7BjD,eAAemB,OAAO,mBAAoBsE,8JC7P1C,IAAIxF,EAESyH,EAAc,iBAAAC,KAAAC,mBAAAC,KAAG,SAAAC,IAAA,OAAAF,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvBjI,IACHA,EAASkI,QAAAC,IAAA,CAAA1O,EAAAuH,EAAA,KAAAvH,EAAAuH,EAAA,MAAAC,KAAAxH,EAAAzC,KAAA,YAFiB+Q,EAAAK,OAAA,SAIrBpI,GAJqB,wBAAA+H,EAAAM,SAAAR,kLAAH,yBAAAH,EAAA/L,MAAApF,KAAAqF,YAAA,i/PCU3B0M,CAAA,CADCC,YAAc,mBACf,SAAAC,EAAAC,GAAA,IAAaC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAvI,EAAAC,+FAAA5E,CAAAjF,KAAAmS,GAAA,QAAArI,EAAAzE,UAAA7C,OAAAuH,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA5E,UAAA4E,GAAA,OAAAJ,uEAAA3E,CAAAlF,MAAA4J,EAAAzE,EAAAgN,IAAArP,KAAAsC,MAAAwE,EAAA,CAAA5J,MAAAkK,OAAAH,KAAAkI,EAAA9H,EAAAN,MAAA,yOAAAvE,CAAA6M,EAAAD,GAAAC,EAAA,UAAAE,EAAaF,EAAbhP,EAAA,EAAAmP,KAAA,QAAA/M,IAAA,aAAArG,WAAA,IAAAoT,KAAA,QAAAC,WAAA,CAEG1H,eAFHtF,IAAA,OAAArG,WAAA,IAAAoT,KAAA,QAAAC,WAAA,CAGG1H,eAHHtF,IAAA,YAAArG,MAAA,kBAGiC,IAHjC,CAAAoT,KAAA,QAAAC,WAAA,CAIG1H,eAJHtF,IAAA,MAAArG,MAAA,kBAI2B,IAJ3B,CAAAoT,KAAA,QAAAC,WAAA,CAKG1H,eALHtF,IAAA,QAAArG,MAAA,kBAK6B,IAL7B,CAAAoT,KAAA,QAAAC,WAAA,CAMG1H,eANHtF,IAAA,SAAArG,MAAA,iBAM+B,KAN/B,CAAAoT,KAAA,MAAA/M,IAAA,QAAArG,MAQE,SAAiBA,GACfc,KAAKmQ,OAASjR,IATlB,CAAAoT,KAAA,MAAA/M,IAAA,QAAArG,MAYE,WACE,OAAOc,KAAKwS,WAAaxS,KAAKwS,WAAWC,WAAazS,KAAKmQ,SAb/D,CAAAmC,KAAA,MAAA/M,IAAA,cAAArG,MAgBE,WACE,QAAOc,KAAK0S,WAAY5D,cAAc,qBAjB1C,CAAAwD,KAAA,SAAA/M,IAAA,oBAAArG,MAoBE,WACEoL,EAAAnF,EArBSgN,EAqBT5H,WAAA,oBAAAvK,MAAA8C,KAAA9C,MACKA,KAAKwS,aAGVxS,KAAKwS,WAAWG,WACO,IAAnB3S,KAAKuQ,WACPvQ,KAAKwS,WAAWI,WA3BtB,CAAAN,KAAA,SAAA/M,IAAA,SAAArG,MA+BE,SAAiBgM,GACfZ,EAAAnF,EAhCSgN,EAgCT5H,WAAA,SAAAvK,MAAA8C,KAAA9C,KAAakL,GAERlL,KAAKwS,aAINtH,EAAaC,IAAI,SACnBnL,KAAKwS,WAAWK,UAAU,OAAQ7S,KAAK8S,MAErC5H,EAAaC,IAAI,cACnBnL,KAAKwS,WAAWK,UAAU,aAAgC,IAAnB7S,KAAKuQ,WAE1CrF,EAAaC,IAAI,WAAanL,KAAKmQ,SAAWnQ,KAAKd,OACrDc,KAAKwS,WAAWO,SAAS/S,KAAKmQ,QAE5BjF,EAAaC,IAAI,SACnBnL,KAAKwS,WAAWK,UAAU,UAAW7S,KAAKgT,gBAC1ChT,KAAKiT,0BAEH/H,EAAaC,IAAI,UACnBnL,KAAKkT,UAAUC,OAAO,cAAenT,KAAKoT,UApDhD,CAAAd,KAAA,SAAA/M,IAAA,eAAArG,MAwDE,SAAuBgM,GACrBZ,EAAAnF,EAzDSgN,EAyDT5H,WAAA,eAAAvK,MAAA8C,KAAA9C,KAAmBkL,GACnBlL,KAAKqT,UA1DT,CAAAf,KAAA,SAAA/M,IAAA,QAAArG,MAAA,iBAAAoU,KAAAlC,mBAAAC,KA6DE,SAAAC,IAAA,IAAA7H,EAAA8J,EAAAb,EAAA3C,EAAA/P,KAAA,OAAAoR,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuBR,IADvB,OACQzH,EADR+H,EAAAgC,KAGQD,EAAa9J,EAAO8J,YAEpBb,EAAa1S,KAAKyT,aAAa,CAAEX,KAAM,UAEjC7O,UAAZ,wBAAAiG,OAEIT,EAAOiK,cAFX,qiCAiCA1T,KAAKwS,WAAae,EAAWb,EAAY,CACvCxT,MAAOc,KAAKmQ,OACZwD,aAAa,EACbC,QAAS,EACTd,KAAM9S,KAAK8S,KACXvC,WAA8B,IAAnBvQ,KAAKuQ,UAChBsD,eAAgBC,IAChBC,UAAW,CACTC,IAAK,aACLC,YAAa,cAEfC,QAASlU,KAAKgT,iBAEhBhT,KAAKiT,yBACLjT,KAAKwS,WAAY2B,GAAG,UAAW,kBAAMpE,EAAKqE,cAtD5C,wBAAA5C,EAAAM,SAAAR,EAAAtR,qLA7DF,yBAAAsT,EAAAlO,MAAApF,KAAAqF,YAAA,KAAAiN,KAAA,SAAA/M,IAAA,YAAArG,MAsHE,WACE,IAAM4R,EAAW9Q,KAAKd,MAClB4R,IAAa9Q,KAAKmQ,SAGtBnQ,KAAKmQ,OAASW,EACd5H,YAAUlJ,KAAM,gBAAiB,CAAEd,MAAOc,KAAKmQ,YA5HnD,CAAAmC,KAAA,SAAA/M,IAAA,eAAArG,MA+HE,WACE,OAAOc,KAAKqU,IAAM,CAAC,aAAc,0BAA4B,KAhIjE,CAAA/B,KAAA,SAAA/M,IAAA,yBAAArG,MAmIE,WACMc,KAAKwS,YACPxS,KAAKwS,WAAW8B,oBAAoBpB,UAAUC,OAAO,MAAOnT,KAAKqU,UArIrCE,kgFCR5BC,gaAAmBzL,eAAY0L,+CAEjC,OAAOhW,YAAPC,wCAwDA,MAAO,CACLgW,iBAAkBpV,QAClBqV,MAAO,CACL3V,KAAMQ,OACNoV,SAAU,iBAEZC,OAAQrV,OACRsV,cAAe7V,OACf8V,cAAe9V,OACfsR,UAAWjR,QACXkR,MAAOvR,OACP+V,OAAQ,CACNhW,KAAMM,QACNJ,OAAO,EACP0V,SAAU,kBAEZ1V,MAAO,CACLF,KAAMC,OACNsI,QAAQ,gDAKC0N,GACRA,IACHjV,KAAK6U,OAAS7U,KAAK2U,6CAITM,GACPjV,KAAKgV,SACRhV,KAAK6U,OAASI,8CAICD,GACjB,OAAOA,EAAS,eAAiB,2DAGjBjG,EAAM+F,GACtB,OAAOA,EAAgB/F,EAAK+F,GAAiB/F,uCAGlC4B,GACXA,EAAGC,kBACH5Q,KAAKc,KAAK,+CAId0I,eAAemB,OAAO,eAAgB6J,yrCC1GhCU,gaAAwBC,eAAcV,+CAExC,OAAOhW,YAAP2W,wCAWA,MAAO,CACL3P,KAAM,CACJzG,KAAMQ,OACNoV,SAAU,gBAEZS,UAAWrL,MACX9K,MAAO,CACLF,KAAMC,OACNsI,QAAQ,8CAKD9B,EAAM6P,GACjB,GAAK7P,GAIL,IAAI6P,GAAW7P,EAAK8P,WAAaD,EAAQC,SAAzC,CAGA,IAAMC,EAAS,GAEfhW,OAAOkQ,KAAKjK,EAAK8P,UACd1F,OACA4F,QAAQ,SAAC/M,GAGR,IAFA,IAAM6M,EAAW/V,OAAOkQ,KAAKjK,EAAK8P,SAAS7M,IAASmH,OAE3CtN,EAAI,EAAGA,EAAIgT,EAAS/S,OAAQD,IACnCiT,EAAOE,KAAP,GAAAxL,OAAexB,EAAf,KAAAwB,OAAyBqL,EAAShT,OAIxCvC,KAAKqV,UAAYG,QAlBfxV,KAAKqV,UAAY,wCAsBvB7L,eAAemB,OAAO,oBAAqBuK,qCC5D3ChS,EAAAC,EAAAC,EAAA,sBAAAuS,IAAAzS,EAAAC,EAAAC,EAAA,sBAAAwS,IAAO,IAAMD,EAAc,cAEdC,EAA2B,CACtC,cACA,sBACA,QACA,aACA,gBACA,WACA,SACA,UACA,QACA,UACA,MACA,eACA,QACA,gBACA,mBACA,gBACA,iBACA,eACA,eACA,aACA,QACA,OACA,UACA,eACA,SACA,QACA,oBACA,SACA,QACA,SACA,SACA,SACA,QACA,gBACA,SACA,UACA,OACA,MACA,6FC7BEC,mCAAa,cACbC,EAAY,YACZC,EAAY,iBAcHC,EAAqB,CAChClX,WAAY,CAIVmX,KAAM,CACJjX,KAAMQ,OACN+H,QAAQ,EACRrI,MAAO,WACL,OAAOc,KAAKkW,YAchBC,uBAAwB,CAACnX,KAAMM,QAASJ,OAAO,GAK/CkX,IAAK,CAACpX,KAAMM,QAASJ,OAAO,IAG9BO,UAAW,CAAC,yBAEZI,QAAS,WACPG,KAAKqW,eAAgB,EACrBrW,KAAKsW,mBAAoB,EACzBtW,KAAKuW,0BAA4B,KACjCvW,KAAKwW,2BAA6B7E,QAAQ8E,WAG5CC,MAAO,WACL1W,KAAK2W,0BASPC,YACE,OAAO,GAeTC,2BACE,OAAO7W,KAAKwW,4BASdN,kBAcAY,UAAW,SAAS/M,GAClB,OAAO4H,QAAQ8E,WAUjBM,MAAO,aAQPC,QAAS,WAEP,OADAhX,KAAKiW,KAAOjW,KAAKkW,UACVlW,KAAK8W,aAcdG,sBAAuB,WACrB,OAAIjX,KAAK4W,MACAjF,QAAQ8E,UAKVzW,KAAKkX,gBAAgB,QAAQxM,KAAK,SAASuL,GAEhD,GADAjW,KAAKmX,KAAK,oBAAqBlB,EAAMjW,KAAKiW,MAC9B,MAARA,EACF,OAAOjW,KAAKoX,gBAAgB,OAAQpX,KAAKiW,MAAQjW,KAAKkW,WAEtDlW,KAAKqX,aAAa,WAChBrX,KAAKsX,IAAI,OAAQrB,MAGrBxV,KAAKT,QAeTuX,eAAgB,SAASC,GACvB,OAAO7F,QAAQ8E,WAgBjBgB,eAAgB,SAASD,EAAatY,GACpC,OAAOyS,QAAQ8E,QAAQvX,IAczBwY,wBAAyB,SAASC,GAChC,OAAOA,GAaTC,wBAAyB,SAASD,GAChC,OAAOA,GAaTN,aAAc,SAASQ,GACjB7X,KAAKsW,oBAITtW,KAAK8X,OAAO,mBAEZ9X,KAAKsW,mBAAoB,EACzBuB,EAAU/U,KAAK9C,MACfA,KAAKsW,mBAAoB,EAEzBtW,KAAK+X,UAAU,qBAOjBC,aAAc,SAAS9Y,GACrB,OAAI8K,MAAMiO,QAAQ/Y,GACQ,IAAjBA,EAAMsD,OACJhD,OAAO+K,UAAU2N,cAAchZ,GACH,IAA9BM,OAAOkQ,KAAKxQ,GAAOsD,OAEV,MAATtD,GAWXgY,gBAAiB,SAASS,GACxB,OAAO3X,KAAKuX,eAAevX,KAAK0X,wBAAwBC,KAc1DP,gBAAiB,SAASO,EAAMzY,GAC9B,OAAOc,KAAKyX,eAAezX,KAAK0X,wBAAwBC,GAAOzY,IAqBjEiZ,oBAAqB,SAASC,GAC5B,GAAIpY,KAAKmW,uBACPiC,EAAcA,EAAY3X,KAAKT,UAC1B,CACL,IAAIwV,EAAS4C,EAAYtV,KAAK9C,MAC9BoY,EAAc,WACZ,OAAO5C,GAIX,OAAOxV,KAAKwW,2BACDxW,KAAKwW,2BAA2B9L,KAAK0N,GAArC,MACW,SAAShF,GACdpT,KAAKqY,OAAO,uCAAwCjF,IACpD3S,KAAKT,QAMxBmX,KAAM,WACJ,GAAInX,KAAKoW,IAAK,SAAAtM,EAAAzE,UAAA7C,OADEuH,EACF,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IADEF,EACFE,GAAA5E,UAAA4E,GACZrB,QAAQwN,IAAIhR,MAAMwD,QAASmB,KAO/BsO,OAAQ,WACN,GAAIrY,KAAKoW,IAAK,SAAAkC,EAAAjT,UAAA7C,OADIuH,EACJ,IAAAC,MAAAsO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IADIxO,EACJwO,GAAAlT,UAAAkT,GACZ3P,QAAQwK,MAAMhO,MAAMwD,QAASmB,KAOjC+N,OAAQ,WACN,GAAI9X,KAAKoW,IAAK,SAAAoC,EAAAnT,UAAA7C,OADIuH,EACJ,IAAAC,MAAAwO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IADI1O,EACJ0O,GAAApT,UAAAoT,GACZ7P,QAAQjC,MAAMvB,MAAMwD,QAASmB,KAOjCgO,UAAW,WACT,GAAI/X,KAAKoW,IAAK,SAAAsC,EAAArT,UAAA7C,OADOuH,EACP,IAAAC,MAAA0O,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IADO5O,EACP4O,GAAAtT,UAAAsT,GACZ/P,QAAQgQ,SAASxT,MAAMwD,QAASmB,KAWpC4M,uBAAwB,WACtB,IAAI3W,KAAKuW,0BAAT,CAIAvW,KAAK8X,OAAO,8BAEZ,IAAIe,EAA0B7Y,KAAKuW,0BAC/BvW,KAAKiX,wBACAvM,KAAK,WACJ1K,KAAKqW,eAAgB,EACrBrW,KAAKuW,0BAA4B,KACjCvW,KAAK+X,UAAU,+BACftX,KAAKT,OALX,MAMW,SAASyK,GACdzK,KAAKuW,0BAA4B,KACjCvW,KAAK+X,UAAU,+BACftX,KAAKT,OAEf,OAAOA,KAAKmY,oBAAoB,WAC9B,OAAOU,MAIXC,cAAe,SAASC,GACtB,IAAI/Y,KAAK4W,QAAS5W,KAAKsW,mBAAsBtW,KAAKqW,gBAC9CrW,KAAKgZ,mBAAmBD,EAAOpB,MADnC,CAKA,IAAIA,EAAO3X,KAAKiZ,sBAAsBF,EAAOpB,MACzCzY,EAAQ6Z,EAAO7Z,MACfga,EAAeha,GAASA,EAAMga,aAElClZ,KAAKmY,oBAAoB,WAQvB,OAPAnY,KAAKmX,KAAK,UAAWQ,EAAO,IAAKuB,GAAgBha,GAE7Cga,GAAgBlZ,KAAKmZ,gBAAgBxB,KACvCA,EAAO3X,KAAKoZ,aAAazB,GACzBzY,EAAQc,KAAKwF,IAAImS,IAGZ3X,KAAKoX,gBAAgBO,EAAMzY,OAItC+Z,sBAAuB,SAAStB,GAO9B,IANA,IAAI0B,EAAQ1B,EAAK2B,MAAM,KACnBC,EAAa,GACbC,EAAc,GACdC,EAAiB,GAGZlX,EAAI,EAAGA,EAAI8W,EAAM7W,SAAUD,EAClCiX,EAAY9D,KAAK2D,EAAM9W,IACnB,KAAKF,KAAKgX,EAAM9W,IAClBkX,EAAe/D,KACX1V,KAAKwF,IAAI+T,GAAY/K,QAAQxO,KAAKwF,IAAIgU,KAE1CC,EAAe/D,KAAK2D,EAAM9W,IAE5BgX,EAAW7D,KAAK2D,EAAM9W,IAGxB,OAAOkX,EAAeC,KAAK,MAG7BN,aAAc,SAASzB,GACrB,IAAI4B,EAAa5B,EAAK2B,MAAM,KAC5B,OAAOC,EAAWI,MAAM,EAAGJ,EAAW/W,OAAS,GAAGkX,KAAK,MAGzDV,mBAAoB,SAASrB,GAC3B,OAAO7B,EAAUzT,KAAKsV,IAClB3N,MAAMiO,QAAQjY,KAAKwF,IAAIxF,KAAKoZ,aAAazB,MAG/CwB,gBAAiB,SAASxB,GACxB,OAAO9B,EAAWxT,KAAKsV,IACnB3N,MAAMiO,QAAQjY,KAAKwF,IAAIxF,KAAKoZ,aAAazB,MAG/CiC,oBAAqB,SAASjC,GAC5B,OAAQ9B,EAAWxT,KAAKsV,IAAS7B,EAAUzT,KAAKsV,KAC5C3N,MAAMiO,QAAQjY,KAAKwF,IAAIxF,KAAKoZ,aAAazB,MAG/CkC,kBAAmB,SAASlC,GAC1B,IAAImC,EAAOnC,EAAK2B,MAAM,KAAKS,MAC3B,OAAOC,OAAOC,SAASH,EAAKlV,QAAQmR,EAAW,MAAO,aC1a1DxX,YAAQ,CACNI,GAAI,4BACJC,UAAW,CAACoX,GAEZlX,WAAY,CAMVyG,IAAK,CAAEvG,KAAMC,OAAQsI,QAAQ,GAO7B2S,YAAa,CAAElb,KAAMM,QAASJ,OAAO,GAMrCib,QAAS,CAAEnb,KAAMQ,OAAQL,SAAU,kCAGrCM,UAAW,CAAC,wCAEZU,SAAU,WACRH,KAAKoa,OAAOJ,OAAQ,UAAW,eAC/Bha,KAAKoa,OACHJ,OAAOK,IACP,4BACA,+BAIJ3Z,SAAU,WACRV,KAAKsa,SAASN,OAAQ,UAAW,eACjCha,KAAKsa,SACHN,OAAOK,IACP,4BACA,+BAIJzD,YACE,OAAQ5W,KAAKuF,KASfuR,UAAW,SAASvR,GAClB,IACEvF,KAAKua,kBAAkDhV,EAAKvF,KAAKiW,MACjE,MAAOxL,GACP,OAAOkH,QAAQ6I,OAAO/P,GAKxB,OAFAzK,KAAKuF,IAA6BA,EAE3BoM,QAAQ8E,WAGjBM,MAAO,WACL/W,KAAKuF,IAAM,KACXvF,KAAKiW,KAAOjW,KAAKkW,WAGnBc,QAAS,WACP,IACEhX,KAAKma,QAAQM,WAAWza,KAAKuF,KAC7BvF,KAAK+W,QACL,MAAOtM,GACP,OAAOkH,QAAQ6I,OAAO/P,GAGxB,OAAOkH,QAAQ8E,WAGjBc,eAAgB,SAASI,GACvB,IAAIzY,EAEJ,GAAgB,MAAZc,KAAKuF,IACP,IAIIrG,EADW,OAFbA,EAAQc,KAAK0a,2BAGH1a,KAAKwF,IAAImS,EAAM,CAAE1B,KAAM/W,SAEvBiC,EAEV,MAAOsJ,GACP,OAAOkH,QAAQ6I,OAAO/P,GAI1B,OAAOkH,QAAQ8E,QAAQvX,IAGzBuY,eAAgB,SAASE,EAAMzY,GAC7B,GAAgB,MAAZc,KAAKuF,IAAa,CACpB,IACEvF,KAAKua,kBAAkBva,KAAKuF,IAAKvF,KAAKiW,MACtC,MAAOxL,GACP,OAAOkH,QAAQ6I,OAAO/P,GAGxBzK,KAAKc,KAAK,4BAA6Bd,KAAM,CAAEmJ,KAAM6Q,OAAOK,MAG9D,OAAO1I,QAAQ8E,QAAQvX,IAGzByb,iBAAkB,SAAST,GACzB,OAAOA,EAAcF,OAAOY,eAAiBZ,OAAOa,cAGtDC,uBAAwB,SAASX,EAAS5U,GACxCvF,KAAK2W,0BAGPoE,YAAa,SAAStZ,GAChBA,EAAM8D,MAAQvF,KAAKuF,KAAO9D,EAAMuZ,cAAgBhb,KAAKma,SAIzDna,KAAKqX,aAAa,WAChBrX,KAAKsX,IAAI,OAAQtX,KAAK0a,8BAI1BO,2BAA4B,SAASxZ,GAEjCA,EAAMuH,SAAWhJ,MACjByB,EAAMuH,OAAOzD,MAAQvF,KAAKuF,KAC1B9D,EAAMuH,OAAOmR,UAAYna,KAAKma,SAIhCna,KAAKqX,aAAa,WAChBrX,KAAKsX,IAAI,OAAQ7V,EAAMuH,OAAOiN,SAIlCyE,wBAAyB,WACvB,IACE,OAAOQ,KAAKC,MAAMnb,KAAKma,QAAQiB,QAAQpb,KAAKuF,MAC5C,MAAOkF,GACP7B,QAAQwK,MAAM,yCAA0CpT,KAAKuF,OAIjEgV,kBAAmB,SAAShV,EAAKrG,QACV,IAAVA,IAAuBA,EAAQ,MAC1Cc,KAAKma,QAAQkB,QAAQ9V,EAAK2V,KAAKI,UAAUpc,uyLCxL7C,IAAMqc,EAAiB,GAIjBC,gaAA0BrG,eAAcV,+CAE1C,OAAOhW,YAAPC,wCAqKA,MAAO,CACL+G,KAAM,CACJzG,KAAMQ,QAGRic,cAAe,CACbzc,KAAMC,OACN2V,SAAU,yBAGZ8G,QAAS,CACP1c,KAAMC,OACNE,SAAU,iCAGZwc,SAAU,CACR3c,KAAMC,OACNE,SAAU,kCAGZyc,YAAa,CACX5c,KAAMC,OACNC,MAAO,IAGT2c,WAAY,CACV7c,KAAMQ,OACNL,SAAU,0CAGZ2c,UAAW,CACT9c,KAAMM,QACNH,SAAU,iCAGZ4c,YAAa,CACX/c,KAAMgL,MACN7K,SAAU,oDAGZ6c,aAAc,CACZhd,KAAMC,OACNE,SAAU,sGAMda,KAAK4b,YAAc,mDAGGnW,EAAMiD,EAAQuT,GACpC,IAAMC,EAAiBzW,EAAK8P,SAC5B,KAAM7M,KAAUwT,GAAiB,MAAO,GACxC,KAAMD,KAAWC,EAAexT,IAAU,MAAO,GAEjD,IAAMyT,EAASD,EAAexT,GAAQuT,GAASE,OAC/C,OAAO3c,OAAOkQ,KAAKyM,GAAQrM,IAAI,SAASsM,GACtC,OAAA5c,OAAA4M,OAAA,CAAS7G,IAAK6W,GAAUD,EAAOC,kDAIf3W,EAAMiD,EAAQuT,GAChC,IAAMC,EAAiBzW,EAAK8P,SAC5B,GAAM7M,KAAUwT,GACVD,KAAWC,EAAexT,GAChC,OAAOwT,EAAexT,GAAQuT,GAASI,2DAGlBZ,GACrB,6CAAAvR,OAA8CuR,0CAGjCA,GACb,OAAOA,EAAcnC,MAAM,IAAK,GAAG,2CAGrBmC,GACd,OAAOA,EAAcnC,MAAM,IAAK,GAAG,IAAM,uDAGjBsC,GACxB,IACE,OAAOA,EAAYU,OAASC,mBAASX,GAAe,GACpD,MAAOY,GACP,OAAOjB,6CAIOM,GAChB,OAAOA,IAAeN,4CAGN/W,GAChB,OAAOA,EAAWiY,KAAK,SAACC,GAAD,MAAuB,cAAbA,EAAKnX,kDAGpBsW,GAClB,OAAOA,IAAeN,EAAiB,GAAKM,EAAWlX,6DAG9B+D,GACzB,OAAOkN,IAAyBhG,SAASlH,GAAU,CAACA,GAAU,4CAI1D1I,KAAK6b,aAAeN,EAYxBvb,KAAKyF,KAAKkX,YAAY3c,KAAK0b,QAAS1b,KAAK2b,SAAU3b,KAAK6b,YAVtD9V,MACE/F,KAAKyF,KAAKC,SACR,4DACA,OACA1F,KAAK4b,yDAUX,IAAMgB,EAAU,GAChB5c,KAAK+b,YAAYtG,QAAQ,SAACvG,GACxB,GAAIA,EAAU0N,QAAS,CACrB,IAAI1d,EAAQ,GACZ,IACEA,EAAQqd,mBAASrN,EAAU0N,SAC3B,MAAOJ,GACPtd,EAAQgQ,EAAU0N,QAEpBA,EAAQ1N,EAAU3J,KAAOrG,KAG7Bc,KAAK4b,YAAciB,mBAASD,yCAGhBjM,GACZ3Q,KAAK4b,YAAciB,mBAAQrd,OAAA4M,OAAA,GACtBpM,KAAK6b,WADiB,CAEzBlX,UAAWgM,EAAGmM,OAAO5d,8CAIZyR,GACX3Q,KAAK4b,YAAcjL,EAAG3H,OAAO9J,2CAIjCsK,eAAemB,OAAO,0BAA2B6Q,qzIC/PjDjd,YAAQ,CACNI,GAAI,cAEJH,UAAWC,YAAFC,KA0GTE,UAAW,CAACme,IAAoBC,KAEhCle,WAAY,CACVI,MAAO,CAELF,KAAMC,SAUVge,wBACE,OAAOjd,KAAKY,aAAarB,eAM3BG,UAAW,CAACwd,mBAAoB,qBAEhCC,kBAAmB,WAGZnd,KAAKod,EAAEC,cACVrd,KAAKod,EAAEC,YAAcrd,KAAKsd,GAAG,UAE3Btd,KAAKY,eACyD,IAA9DZ,KAAKud,mBAAmB/O,QAAQxO,KAAKod,EAAEC,YAAYre,QACrDgB,KAAKwd,kBAAmB,GAIpBxd,KAAKY,aAAa7B,WACtBiB,KAAKod,EAAEK,UAAUC,4BAA4B1d,KAAKY,wdCjLjD,IAAMd,EAAoBvB,YAAQ,CACvCC,UAAWC,YAAFC,KAWTC,GAAI,sBAEJG,WAAY,CAOVgU,KAAM,CAAC9T,KAAMC,OAAQC,MAAO,UAE5Bye,MAAO,CAAC3e,KAAMC,OAAQC,MAAO,KAG/BW,QAAS,WACFC,EAAkB8d,WACrB9d,EAAkB8d,SAAW5d,MAG/B8D,SAAS+Z,KAAKC,iBACV,gBAAiB9d,KAAK+d,gBAAgBtd,KAAKT,QAQjDge,SAAU,SAAShb,GACjBhD,KAAK2d,MAAQ,GACb3d,KAAKie,MAAM,WACTje,KAAK2d,MAAQ3a,GACZ,MAGL+a,gBAAiB,SAAStc,GACpBA,EAAMuH,QAAUvH,EAAMuH,OAAOhG,MAC/BhD,KAAKge,SAASvc,EAAMuH,OAAOhG,SAKjClD,EAAkB8d,SAAW,KAE7B9d,EAAkBC,oBAAsB,WACjCD,EAAkB8d,WACrB9d,EAAkB8d,SAAW9Z,SAASC,cAAc,wBAGtDD,SAAS+Z,KAAK1Z,YAAYrE,EAAkB8d","file":"chunk.fde7ddb6b9a0fc5c4dcc.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronA11yAnnouncer} from '@polymer/iron-a11y-announcer/iron-a11y-announcer.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`<iron-input>` is a wrapper to a native `<input>` element, that adds two-way\nbinding and prevention of invalid input. To use it, you must distribute a native\n`<input>` yourself. You can continue to use the native `input` as you would\nnormally:\n\n    <iron-input>\n      <input>\n    </iron-input>\n\n    <iron-input>\n      <input type=\"email\" disabled>\n    </iron-input>\n\n### Two-way binding\n\nBy default you can only get notified of changes to a native `<input>`'s `value`\ndue to user input:\n\n    <input value=\"{{myValue::input}}\">\n\nThis means that if you imperatively set the value (i.e. `someNativeInput.value =\n'foo'`), no events will be fired and this change cannot be observed.\n\n`iron-input` adds the `bind-value` property that mirrors the native `input`'s\n'`value` property; this property can be used for two-way data binding.\n`bind-value` will notify if it is changed either by user input or by script.\n\n    <iron-input bind-value=\"{{myValue}}\">\n      <input>\n    </iron-input>\n\nNote: this means that if you want to imperatively set the native `input`'s, you\n_must_ set `bind-value` instead, so that the wrapper `iron-input` can be\nnotified.\n\n### Validation\n\n`iron-input` uses the native `input`'s validation. For simplicity, `iron-input`\nhas a `validate()` method (which internally just checks the distributed\n`input`'s validity), which sets an `invalid` attribute that can also be used for\nstyling.\n\nTo validate automatically as you type, you can use the `auto-validate`\nattribute.\n\n`iron-input` also fires an `iron-input-validate` event after `validate()` is\ncalled. You can use it to implement a custom validator:\n\n    var CatsOnlyValidator = {\n      validate: function(ironInput) {\n        var valid = !ironInput.bindValue || ironInput.bindValue === 'cat';\n        ironInput.invalid = !valid;\n        return valid;\n      }\n    }\n    ironInput.addEventListener('iron-input-validate', function() {\n      CatsOnly.validate(input2);\n    });\n\nYou can also use an element implementing an\n[`IronValidatorBehavior`](/element/PolymerElements/iron-validatable-behavior).\nThis example can also be found in the demo for this element:\n\n    <iron-input validator=\"cats-only\">\n      <input>\n    </iron-input>\n\n### Preventing invalid input\n\nIt may be desirable to only allow users to enter certain characters. You can use\nthe `allowed-pattern` attribute to accomplish this. This feature is separate\nfrom validation, and `allowed-pattern` does not affect how the input is\nvalidated.\n\n    // Only allow typing digits, but a valid input has exactly 5 digits.\n    <iron-input allowed-pattern=\"[0-9]\">\n      <input pattern=\"\\d{5}\">\n    </iron-input>\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n    </style>\n    <slot id=\"content\"></slot>\n`,\n\n  is: 'iron-input',\n  behaviors: [IronValidatableBehavior],\n\n  /**\n   * Fired whenever `validate()` is called.\n   *\n   * @event iron-input-validate\n   */\n\n  properties: {\n\n    /**\n     * Use this property instead of `value` for two-way data binding, or to\n     * set a default value for the input. **Do not** use the distributed\n     * input's `value` property to set a default value.\n     */\n    bindValue: {type: String, value: ''},\n\n    /**\n     * Computed property that echoes `bindValue` (mostly used for Polymer 1.0\n     * backcompatibility, if you were one-way binding to the Polymer 1.0\n     * `input is=\"iron-input\"` value attribute).\n     */\n    value: {type: String, computed: '_computeValue(bindValue)'},\n\n    /**\n     * Regex-like list of characters allowed as input; all characters not in the\n     * list will be rejected. The recommended format should be a list of allowed\n     * characters, for example, `[a-zA-Z0-9.+-!;:]`.\n     *\n     * This pattern represents the allowed characters for the field; as the user\n     * inputs text, each individual character will be checked against the\n     * pattern (rather than checking the entire value as a whole). If a\n     * character is not a match, it will be rejected.\n     *\n     * Pasted input will have each character checked individually; if any\n     * character doesn't match `allowedPattern`, the entire pasted string will\n     * be rejected.\n     *\n     * Note: if you were using `iron-input` in 1.0, you were also required to\n     * set `prevent-invalid-input`. This is no longer needed as of Polymer 2.0,\n     * and will be set automatically for you if an `allowedPattern` is provided.\n     *\n     */\n    allowedPattern: {type: String},\n\n    /**\n     * Set to true to auto-validate the input value as you type.\n     */\n    autoValidate: {type: Boolean, value: false},\n\n    /**\n     * The native input element.\n     */\n    _inputElement: Object,\n  },\n\n  observers: ['_bindValueChanged(bindValue, _inputElement)'],\n  listeners: {'input': '_onInput', 'keypress': '_onKeypress'},\n\n  created: function() {\n    IronA11yAnnouncer.requestAvailability();\n    this._previousValidInput = '';\n    this._patternAlreadyChecked = false;\n  },\n\n  attached: function() {\n    // If the input is added at a later time, update the internal reference.\n    this._observer = dom(this).observeNodes(function(info) {\n      this._initSlottedInput();\n    }.bind(this));\n  },\n\n  detached: function() {\n    if (this._observer) {\n      dom(this).unobserveNodes(this._observer);\n      this._observer = null;\n    }\n  },\n\n  /**\n   * Returns the distributed input element.\n   */\n  get inputElement() {\n    return this._inputElement;\n  },\n\n  _initSlottedInput: function() {\n    this._inputElement = this.getEffectiveChildren()[0];\n\n    if (this.inputElement && this.inputElement.value) {\n      this.bindValue = this.inputElement.value;\n    }\n\n    this.fire('iron-input-ready');\n  },\n\n  get _patternRegExp() {\n    var pattern;\n    if (this.allowedPattern) {\n      pattern = new RegExp(this.allowedPattern);\n    } else {\n      switch (this.inputElement.type) {\n        case 'number':\n          pattern = /[0-9.,e-]/;\n          break;\n      }\n    }\n    return pattern;\n  },\n\n  /**\n   * @suppress {checkTypes}\n   */\n  _bindValueChanged: function(bindValue, inputElement) {\n    // The observer could have run before attached() when we have actually\n    // initialized this property.\n    if (!inputElement) {\n      return;\n    }\n\n    if (bindValue === undefined) {\n      inputElement.value = null;\n    } else if (bindValue !== inputElement.value) {\n      this.inputElement.value = bindValue;\n    }\n\n    if (this.autoValidate) {\n      this.validate();\n    }\n\n    // manually notify because we don't want to notify until after setting value\n    this.fire('bind-value-changed', {value: bindValue});\n  },\n\n  _onInput: function() {\n    // Need to validate each of the characters pasted if they haven't\n    // been validated inside `_onKeypress` already.\n    if (this.allowedPattern && !this._patternAlreadyChecked) {\n      var valid = this._checkPatternValidity();\n      if (!valid) {\n        this._announceInvalidCharacter(\n            'Invalid string of characters not entered.');\n        this.inputElement.value = this._previousValidInput;\n      }\n    }\n    this.bindValue = this._previousValidInput = this.inputElement.value;\n    this._patternAlreadyChecked = false;\n  },\n\n  _isPrintable: function(event) {\n    // What a control/printable character is varies wildly based on the browser.\n    // - most control characters (arrows, backspace) do not send a `keypress`\n    // event\n    //   in Chrome, but the *do* on Firefox\n    // - in Firefox, when they do send a `keypress` event, control chars have\n    //   a charCode = 0, keyCode = xx (for ex. 40 for down arrow)\n    // - printable characters always send a keypress event.\n    // - in Firefox, printable chars always have a keyCode = 0. In Chrome, the\n    // keyCode\n    //   always matches the charCode.\n    // None of this makes any sense.\n\n    // For these keys, ASCII code == browser keycode.\n    var anyNonPrintable = (event.keyCode == 8) ||  // backspace\n        (event.keyCode == 9) ||                    // tab\n        (event.keyCode == 13) ||                   // enter\n        (event.keyCode == 27);                     // escape\n\n    // For these keys, make sure it's a browser keycode and not an ASCII code.\n    var mozNonPrintable = (event.keyCode == 19) ||  // pause\n        (event.keyCode == 20) ||                    // caps lock\n        (event.keyCode == 45) ||                    // insert\n        (event.keyCode == 46) ||                    // delete\n        (event.keyCode == 144) ||                   // num lock\n        (event.keyCode == 145) ||                   // scroll lock\n        (event.keyCode > 32 &&\n         event.keyCode < 41) ||  // page up/down, end, home, arrows\n        (event.keyCode > 111 && event.keyCode < 124);  // fn keys\n\n    return !anyNonPrintable && !(event.charCode == 0 && mozNonPrintable);\n  },\n\n  _onKeypress: function(event) {\n    if (!this.allowedPattern && this.inputElement.type !== 'number') {\n      return;\n    }\n    var regexp = this._patternRegExp;\n    if (!regexp) {\n      return;\n    }\n\n    // Handle special keys and backspace\n    if (event.metaKey || event.ctrlKey || event.altKey) {\n      return;\n    }\n\n    // Check the pattern either here or in `_onInput`, but not in both.\n    this._patternAlreadyChecked = true;\n\n    var thisChar = String.fromCharCode(event.charCode);\n    if (this._isPrintable(event) && !regexp.test(thisChar)) {\n      event.preventDefault();\n      this._announceInvalidCharacter(\n          'Invalid character ' + thisChar + ' not entered.');\n    }\n  },\n\n  _checkPatternValidity: function() {\n    var regexp = this._patternRegExp;\n    if (!regexp) {\n      return true;\n    }\n    for (var i = 0; i < this.inputElement.value.length; i++) {\n      if (!regexp.test(this.inputElement.value[i])) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  /**\n   * Returns true if `value` is valid. The validator provided in `validator`\n   * will be used first, then any constraints.\n   * @return {boolean} True if the value is valid.\n   */\n  validate: function() {\n    if (!this.inputElement) {\n      this.invalid = false;\n      return true;\n    }\n\n    // Use the nested input's native validity.\n    var valid = this.inputElement.checkValidity();\n\n    // Only do extra checking if the browser thought this was valid.\n    if (valid) {\n      // Empty, required input is invalid\n      if (this.required && this.bindValue === '') {\n        valid = false;\n      } else if (this.hasValidator()) {\n        valid = IronValidatableBehavior.validate.call(this, this.bindValue);\n      }\n    }\n\n    this.invalid = !valid;\n    this.fire('iron-input-validate');\n    return valid;\n  },\n\n  _announceInvalidCharacter: function(message) {\n    this.fire('iron-announce', {text: message});\n  },\n\n  _computeValue: function(bindValue) {\n    return bindValue;\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\n\n/*\n`PaperItemBehavior` is a convenience behavior shared by <paper-item> and\n<paper-icon-item> that manages the shared control states and attributes of\nthe items.\n*/\n/** @polymerBehavior PaperItemBehavior */\nexport const PaperItemBehaviorImpl = {\n  hostAttributes: {role: 'option', tabindex: '0'}\n};\n\n/** @polymerBehavior */\nexport const PaperItemBehavior =\n    [IronButtonState, IronControlState, PaperItemBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/**\nMaterial design:\n[Lists](https://www.google.com/design/spec/components/lists.html)\n\n`<paper-item>` is an interactive list item. By default, it is a horizontal\nflexbox.\n\n    <paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled\ntwo-line and three-line items.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n      <iron-icon icon=\"warning\"></iron-icon>\n    </paper-item>\n\nTo use `paper-item` as a link, wrap it in an anchor tag. Since `paper-item` will\nalready receive focus, you may want to prevent the anchor tag from receiving\nfocus as well by setting its tabindex to -1.\n\n    <a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n      <paper-item raised>Polymer Project</paper-item>\n    </a>\n\nIf you are concerned about performance and want to use `paper-item` in a\n`paper-listbox` with many items, you can just use a native `button` with the\n`paper-item` class applied (provided you have correctly included the shared\nstyles):\n\n    <style is=\"custom-style\" include=\"paper-item-shared-styles\"></style>\n\n    <paper-listbox>\n      <button class=\"paper-item\" role=\"option\">Inbox</button>\n      <button class=\"paper-item\" role=\"option\">Starred</button>\n      <button class=\"paper-item\" role=\"option\">Sent mail</button>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be\nmore appropriate to set `role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or\n`role=\"menuitemradio\"`.\n\n    <paper-item role=\"menuitemcheckbox\">\n      <paper-item-body>\n        Show your status\n      </paper-item-body>\n      <paper-checkbox></paper-checkbox>\n    </paper-item>\n\n@group Paper Elements\n@element paper-item\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\">\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n      }\n    </style>\n    <slot></slot>\n`,\n\n  is: 'paper-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/color.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-item-shared-styles\">\n  <template>\n    <style>\n      :host, .paper-item {\n        display: block;\n        position: relative;\n        min-height: var(--paper-item-min-height, 48px);\n        padding: 0px 16px;\n      }\n\n      .paper-item {\n        @apply --paper-font-subhead;\n        border:none;\n        outline: none;\n        background: white;\n        width: 100%;\n        text-align: left;\n      }\n\n      :host([hidden]), .paper-item[hidden] {\n        display: none !important;\n      }\n\n      :host(.iron-selected), .paper-item.iron-selected {\n        font-weight: var(--paper-item-selected-weight, bold);\n\n        @apply --paper-item-selected;\n      }\n\n      :host([disabled]), .paper-item[disabled] {\n        color: var(--paper-item-disabled-color, var(--disabled-text-color));\n\n        @apply --paper-item-disabled;\n      }\n\n      :host(:focus), .paper-item:focus {\n        position: relative;\n        outline: 0;\n\n        @apply --paper-item-focused;\n      }\n\n      :host(:focus):before, .paper-item:focus:before {\n        @apply --layout-fit;\n\n        background: currentColor;\n        content: '';\n        opacity: var(--dark-divider-opacity);\n        pointer-events: none;\n\n        @apply --paper-item-focused-before;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute_object_id\";\n\nexport const computeStateName = (stateObj: HassEntity): string => {\n  return stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n};\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nconst fixedIcons = {\n  alert: \"hass:alert\",\n  alexa: \"hass:amazon-alexa\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  counter: \"hass:counter\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  google_assistant: \"hass:google-assistant\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  persistent_notification: \"hass:bell\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weather: \"hass:weather-cloudy\",\n  weblink: \"hass:open-in-new\",\n  zone: \"hass:map-marker\",\n};\n\nexport const domainIcon = (domain: string, state?: string): string => {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n};\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute_domain\";\n\nexport const computeStateDomain = (stateObj: HassEntity) => {\n  return computeDomain(stateObj.entity_id);\n};\n","import { Constructor } from \"../types\";\n\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","import {\n  LitElement,\n  TemplateResult,\n  css,\n  CSSResult,\n  html,\n  property,\n  PropertyValues,\n  query,\n} from \"lit-element\";\nimport \"../ha-icon\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { stateIcon } from \"../../common/entity/state_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"../ha-icon\";\nimport { HomeAssistant } from \"../../types\";\n\nclass StateBadge extends LitElement {\n  public hass?: HomeAssistant;\n  @property() public stateObj?: HassEntity;\n  @property() public overrideIcon?: string;\n  @property() public overrideImage?: string;\n  @query(\"ha-icon\") private _icon!: HaIcon;\n\n  protected render(): TemplateResult | void {\n    const stateObj = this.stateObj;\n\n    if (!stateObj) {\n      return html``;\n    }\n\n    return html`\n      <ha-icon\n        id=\"icon\"\n        data-domain=${computeStateDomain(stateObj)}\n        data-state=${stateObj.state}\n        .icon=${this.overrideIcon || stateIcon(stateObj)}\n      ></ha-icon>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!changedProps.has(\"stateObj\") || !this.stateObj) {\n      return;\n    }\n    const stateObj = this.stateObj;\n\n    const iconStyle: Partial<CSSStyleDeclaration> = {\n      color: \"\",\n      filter: \"\",\n    };\n    const hostStyle: Partial<CSSStyleDeclaration> = {\n      backgroundImage: \"\",\n    };\n    if (stateObj) {\n      // hide icon if we have entity picture\n      if (\n        (stateObj.attributes.entity_picture && !this.overrideIcon) ||\n        this.overrideImage\n      ) {\n        let imageUrl = this.overrideImage || stateObj.attributes.entity_picture;\n        if (this.hass) {\n          imageUrl = this.hass.hassUrl(imageUrl);\n        }\n        hostStyle.backgroundImage = `url(${imageUrl})`;\n        iconStyle.display = \"none\";\n      } else {\n        if (stateObj.attributes.hs_color) {\n          const hue = stateObj.attributes.hs_color[0];\n          const sat = stateObj.attributes.hs_color[1];\n          if (sat > 10) {\n            iconStyle.color = `hsl(${hue}, 100%, ${100 - sat / 2}%)`;\n          }\n        }\n        if (stateObj.attributes.brightness) {\n          const brightness = stateObj.attributes.brightness;\n          if (typeof brightness !== \"number\") {\n            const errorMessage = `Type error: state-badge expected number, but type of ${\n              stateObj.entity_id\n            }.attributes.brightness is ${typeof brightness} (${brightness})`;\n            // tslint:disable-next-line\n            console.warn(errorMessage);\n          }\n          // lowest brighntess will be around 50% (that's pretty dark)\n          iconStyle.filter = `brightness(${(brightness + 245) / 5}%)`;\n        }\n      }\n    }\n    Object.assign(this._icon.style, iconStyle);\n    Object.assign(this.style, hostStyle);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        position: relative;\n        display: inline-block;\n        width: 40px;\n        color: var(--paper-item-icon-color, #44739e);\n        border-radius: 50%;\n        height: 40px;\n        text-align: center;\n        background-size: cover;\n        line-height: 40px;\n        vertical-align: middle;\n      }\n\n      ha-icon {\n        transition: color 0.3s ease-in-out, filter 0.3s ease-in-out;\n      }\n\n      /* Color the icon if light or sun is on */\n      ha-icon[data-domain=\"light\"][data-state=\"on\"],\n      ha-icon[data-domain=\"switch\"][data-state=\"on\"],\n      ha-icon[data-domain=\"binary_sensor\"][data-state=\"on\"],\n      ha-icon[data-domain=\"fan\"][data-state=\"on\"],\n      ha-icon[data-domain=\"sun\"][data-state=\"above_horizon\"] {\n        color: var(--paper-item-icon-active-color, #fdd835);\n      }\n\n      /* Color the icon if unavailable */\n      ha-icon[data-state=\"unavailable\"] {\n        color: var(--state-icon-unavailable-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-badge\": StateBadge;\n  }\n}\n\ncustomElements.define(\"state-badge\", StateBadge);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"../const\";\nimport { domainIcon } from \"./domain_icon\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport const sensorIcon = (state: HassEntity) => {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n};\n","/** Return an icon representing a state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\nimport { binarySensorIcon } from \"./binary_sensor_icon\";\n\nimport { computeDomain } from \"./compute_domain\";\nimport { domainIcon } from \"./domain_icon\";\nimport { coverIcon } from \"./cover_icon\";\nimport { sensorIcon } from \"./sensor_icon\";\nimport { inputDateTimeIcon } from \"./input_dateteime_icon\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport const stateIcon = (state: HassEntity) => {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport const binarySensorIcon = (state: HassEntity) => {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n};\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { domainIcon } from \"./domain_icon\";\n\nexport const coverIcon = (state: HassEntity): string => {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    case \"door\":\n      return open ? \"hass:door-open\" : \"hass:door-closed\";\n    case \"shutter\":\n      return open ? \"hass:window-shutter-open\" : \"hass:window-shutter\";\n    case \"blind\":\n      return open ? \"hass:blinds-open\" : \"hass:blinds\";\n    case \"window\":\n      return open ? \"hass:window-open\" : \"hass:window-closed\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n};\n","/** Return an icon representing an input datetime state. */\nimport { domainIcon } from \"./domain_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const inputDateTimeIcon = (state: HassEntity): string => {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n};\n","/** Compute the object ID of a state. */\nexport const computeObjectId = (entityId: string): string => {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n};\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.includeDomains,\n      this.excludeDomains,\n      this.entityFilter,\n      this.includeDeviceClasses\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","interface LoadedCodeMirror {\n  codeMirror: any;\n  codeMirrorCss: any;\n}\n\nlet loaded: Promise<LoadedCodeMirror>;\n\nexport const loadCodeMirror = async (): Promise<LoadedCodeMirror> => {\n  if (!loaded) {\n    loaded = import(/* webpackChunkName: \"codemirror\" */ \"./codemirror\");\n  }\n  return loaded;\n};\n","import { loadCodeMirror } from \"../resources/codemirror.ondemand\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport {\n  UpdatingElement,\n  property,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport { Editor } from \"codemirror\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"editor-save\": undefined;\n  }\n}\n\n@customElement(\"ha-code-editor\")\nexport class HaCodeEditor extends UpdatingElement {\n  public codemirror?: Editor;\n  @property() public mode?: string;\n  @property() public autofocus = false;\n  @property() public rtl = false;\n  @property() public error = false;\n  @property() private _value = \"\";\n\n  public set value(value: string) {\n    this._value = value;\n  }\n\n  public get value(): string {\n    return this.codemirror ? this.codemirror.getValue() : this._value;\n  }\n\n  public get hasComments(): boolean {\n    return this.shadowRoot!.querySelector(\"span.cm-comment\") ? true : false;\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (!this.codemirror) {\n      return;\n    }\n    this.codemirror.refresh();\n    if (this.autofocus !== false) {\n      this.codemirror.focus();\n    }\n  }\n\n  protected update(changedProps: PropertyValues): void {\n    super.update(changedProps);\n\n    if (!this.codemirror) {\n      return;\n    }\n\n    if (changedProps.has(\"mode\")) {\n      this.codemirror.setOption(\"mode\", this.mode);\n    }\n    if (changedProps.has(\"autofocus\")) {\n      this.codemirror.setOption(\"autofocus\", this.autofocus !== false);\n    }\n    if (changedProps.has(\"_value\") && this._value !== this.value) {\n      this.codemirror.setValue(this._value);\n    }\n    if (changedProps.has(\"rtl\")) {\n      this.codemirror.setOption(\"gutters\", this._calcGutters());\n      this._setScrollBarDirection();\n    }\n    if (changedProps.has(\"error\")) {\n      this.classList.toggle(\"error-state\", this.error);\n    }\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._load();\n  }\n\n  private async _load(): Promise<void> {\n    const loaded = await loadCodeMirror();\n\n    const codeMirror = loaded.codeMirror;\n\n    const shadowRoot = this.attachShadow({ mode: \"open\" });\n\n    shadowRoot!.innerHTML = `\n    <style>\n      ${loaded.codeMirrorCss}\n      .CodeMirror {\n        height: var(--code-mirror-height, auto);\n        direction: var(--code-mirror-direction, ltr);\n      }\n      .CodeMirror-scroll {\n        max-height: var(--code-mirror-max-height, --code-mirror-height);\n      }\n      .CodeMirror-gutters {\n        border-right: 1px solid var(--paper-input-container-color, var(--secondary-text-color));\n        background-color: var(--paper-dialog-background-color, var(--primary-background-color));\n        transition: 0.2s ease border-right;\n      }\n      :host(.error-state) .CodeMirror-gutters {\n        border-color: var(--error-state-color, red);\n      }\n      .CodeMirror-focused .CodeMirror-gutters {\n        border-right: 2px solid var(--paper-input-container-focus-color, var(--primary-color));\n      }\n      .CodeMirror-linenumber {\n        color: var(--paper-dialog-color, var(--primary-text-color));\n      }\n      .rtl .CodeMirror-vscrollbar {\n        right: auto;\n        left: 0px;\n      }\n      .rtl-gutter {\n        width: 20px;\n      }\n    </style>`;\n\n    this.codemirror = codeMirror(shadowRoot, {\n      value: this._value,\n      lineNumbers: true,\n      tabSize: 2,\n      mode: this.mode,\n      autofocus: this.autofocus !== false,\n      viewportMargin: Infinity,\n      extraKeys: {\n        Tab: \"indentMore\",\n        \"Shift-Tab\": \"indentLess\",\n      },\n      gutters: this._calcGutters(),\n    });\n    this._setScrollBarDirection();\n    this.codemirror!.on(\"changes\", () => this._onChange());\n  }\n\n  private _onChange(): void {\n    const newValue = this.value;\n    if (newValue === this._value) {\n      return;\n    }\n    this._value = newValue;\n    fireEvent(this, \"value-changed\", { value: this._value });\n  }\n\n  private _calcGutters(): string[] {\n    return this.rtl ? [\"rtl-gutter\", \"CodeMirror-linenumbers\"] : [];\n  }\n\n  private _setScrollBarDirection(): void {\n    if (this.codemirror) {\n      this.codemirror.getWrapperElement().classList.toggle(\"rtl\", this.rtl);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-code-editor\": HaCodeEditor;\n  }\n}\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\n\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nclass HaComboBox extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        paper-input > paper-icon-button {\n          width: 24px;\n          height: 24px;\n          padding: 2px;\n          color: var(--secondary-text-color);\n        }\n        [hidden] {\n          display: none;\n        }\n      </style>\n      <vaadin-combo-box-light\n        items=\"[[_items]]\"\n        item-value-path=\"[[itemValuePath]]\"\n        item-label-path=\"[[itemLabelPath]]\"\n        value=\"{{value}}\"\n        opened=\"{{opened}}\"\n        allow-custom-value=\"[[allowCustomValue]]\"\n        on-change=\"_fireChanged\"\n      >\n        <paper-input\n          autofocus=\"[[autofocus]]\"\n          label=\"[[label]]\"\n          class=\"input\"\n          value=\"[[value]]\"\n        >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"clear-button\"\n            icon=\"hass:close\"\n            hidden$=\"[[!value]]\"\n            >Clear</paper-icon-button\n          >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"toggle-button\"\n            icon=\"[[_computeToggleIcon(opened)]]\"\n            hidden$=\"[[!items.length]]\"\n            >Toggle</paper-icon-button\n          >\n        </paper-input>\n        <template>\n          <style>\n            paper-item {\n              margin: -5px -10px;\n              padding: 0;\n            }\n          </style>\n          <paper-item>[[_computeItemLabel(item, itemLabelPath)]]</paper-item>\n        </template>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  static get properties() {\n    return {\n      allowCustomValue: Boolean,\n      items: {\n        type: Object,\n        observer: \"_itemsChanged\",\n      },\n      _items: Object,\n      itemLabelPath: String,\n      itemValuePath: String,\n      autofocus: Boolean,\n      label: String,\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: \"_openedChanged\",\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._items = this.items;\n    }\n  }\n\n  _itemsChanged(newVal) {\n    if (!this.opened) {\n      this._items = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? \"hass:menu-up\" : \"hass:menu-down\";\n  }\n\n  _computeItemLabel(item, itemLabelPath) {\n    return itemLabelPath ? item[itemLabelPath] : item;\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire(\"change\");\n  }\n}\n\ncustomElements.define(\"ha-combo-box\", HaComboBox);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-combo-box\";\n\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaServicePicker extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <ha-combo-box\n        label=\"[[localize('ui.components.service-picker.service')]]\"\n        items=\"[[_services]]\"\n        value=\"{{value}}\"\n        allow-custom-value=\"\"\n      ></ha-combo-box>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: \"_hassChanged\",\n      },\n      _services: Array,\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _hassChanged(hass, oldHass) {\n    if (!hass) {\n      this._services = [];\n      return;\n    }\n    if (oldHass && hass.services === oldHass.services) {\n      return;\n    }\n    const result = [];\n\n    Object.keys(hass.services)\n      .sort()\n      .forEach((domain) => {\n        const services = Object.keys(hass.services[domain]).sort();\n\n        for (let i = 0; i < services.length; i++) {\n          result.push(`${domain}.${services[i]}`);\n        }\n      });\n\n    this._services = result;\n  }\n}\n\ncustomElements.define(\"ha-service-picker\", HaServicePicker);\n","export const UNAVAILABLE = \"unavailable\";\n\nexport const ENTITY_COMPONENT_DOMAINS = [\n  \"air_quality\",\n  \"alarm_control_panel\",\n  \"alert\",\n  \"automation\",\n  \"binary_sensor\",\n  \"calendar\",\n  \"camera\",\n  \"counter\",\n  \"cover\",\n  \"dominos\",\n  \"fan\",\n  \"geo_location\",\n  \"group\",\n  \"history_graph\",\n  \"image_processing\",\n  \"input_boolean\",\n  \"input_datetime\",\n  \"input_number\",\n  \"input_select\",\n  \"input_text\",\n  \"light\",\n  \"lock\",\n  \"mailbox\",\n  \"media_player\",\n  \"person\",\n  \"plant\",\n  \"remember_the_milk\",\n  \"remote\",\n  \"scene\",\n  \"script\",\n  \"sensor\",\n  \"switch\",\n  \"timer\",\n  \"utility_meter\",\n  \"vacuum\",\n  \"weather\",\n  \"wink\",\n  \"zha\",\n  \"zwave\",\n];\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nvar SPLICES_RX = /\\.splices$/;\nvar LENGTH_RX = /\\.length$/;\nvar NUMBER_RX = /\\.?#?([0-9]+)$/;\n\n/**\n * AppStorageBehavior is an abstract behavior that makes it easy to\n * synchronize in-memory data and a persistent storage system, such as\n * the browser's IndexedDB, or a remote database like Firebase.\n *\n * For examples of how to use this behavior to write your own app storage\n * elements see `<app-localstorage-document>` here, or check out\n * [polymerfire](https://github.com/Firebase/polymerfire) and\n * [app-pouchdb](https://github.com/PolymerElements/app-pouchdb).\n *\n * @polymerBehavior\n */\nexport const AppStorageBehavior = {\n  properties: {\n    /**\n     * The data to synchronize.\n     */\n    data: {\n      type: Object,\n      notify: true,\n      value: function() {\n        return this.zeroValue;\n      }\n    },\n\n    /**\n     * If this is true transactions will happen one after the other,\n     * never in parallel.\n     *\n     * Specifically, no transaction will begin until every previously\n     * enqueued transaction by this element has completed.\n     *\n     * If it is false, new transactions will be executed as they are\n     * received.\n     */\n    sequentialTransactions: {type: Boolean, value: false},\n\n    /**\n     * When true, will perform detailed logging.\n     */\n    log: {type: Boolean, value: false}\n  },\n\n  observers: ['__dataChanged(data.*)'],\n\n  created: function() {\n    this.__initialized = false;\n    this.__syncingToMemory = false;\n    this.__initializingStoredValue = null;\n    this.__transactionQueueAdvances = Promise.resolve();\n  },\n\n  ready: function() {\n    this._initializeStoredValue();\n  },\n\n  /**\n   * Override this getter to return true if the value has never been\n   * persisted to storage.\n   *\n   * @return {boolean}\n   */\n  get isNew() {\n    return true;\n  },\n\n  /**\n   * A promise that will resolve once all queued transactions\n   * have completed.\n   *\n   * This field is updated as new transactions are enqueued, so it will\n   * only wait for transactions which were enqueued when the field\n   * was accessed.\n   *\n   * This promise never rejects.\n   *\n   * @return {Promise}\n   */\n  get transactionsComplete() {\n    return this.__transactionQueueAdvances;\n  },\n\n  /**\n   * Override this getter to define the default value to use when\n   * there's no data stored.\n   *\n   * @return {*}\n   */\n  get zeroValue() {\n    return undefined;\n  },\n\n  /**\n   * Override this method.\n   *\n   * If the data value represented by this storage instance is new, this\n   * method generates an attempt to write the value to storage.\n   *\n   *\n   * @param {*} args\n   * @return {Promise} a Promise that settles only once the write has.\n   */\n  saveValue: function(args) {\n    return Promise.resolve();\n  },\n\n  /**\n   * Optional. Override this method to clear out the mapping of this\n   * storage object and a logical location within storage.\n   *\n   * If this method is supported, after it's called, isNew() should be\n   * true.\n   */\n  reset: function() {},\n\n  /**\n   * Remove the data from storage.\n   *\n   * @return {Promise} A promise that settles once the destruction is\n   *   complete.\n   */\n  destroy: function() {\n    this.data = this.zeroValue;\n    return this.saveValue();\n  },\n\n  /**\n   * Perform the initial sync between storage and memory. This method\n   * is called automatically while the element is being initialized.\n   * Implementations may override it.\n   *\n   * If an implementation intends to call this method, it should instead\n   * call _initializeStoredValue, which provides reentrancy protection.\n   *\n   * @return {Promise} A promise that settles once this process is\n   *     complete.\n   */\n  initializeStoredValue: function() {\n    if (this.isNew) {\n      return Promise.resolve();\n    }\n\n    // If this is not a \"new\" model, then we should attempt\n    // to read an initial value from storage:\n    return this._getStoredValue('data').then(function(data) {\n      this._log('Got stored value!', data, this.data);\n      if (data == null) {\n        return this._setStoredValue('data', this.data || this.zeroValue);\n      } else {\n        this.syncToMemory(function() {\n          this.set('data', data);\n        });\n      }\n    }.bind(this));\n  },\n\n  /**\n   * Override this method to implement reading a value from storage.\n   *\n   *\n   * @param {string} storagePath The path (through storage) of the value to\n   *   create, relative to the root of storage associated with this instance.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. _If there is no\n   *   such value at the provided path through storage, then the promise will\n   *   resolve to `undefined`._ The promise will be rejected if the transaction\n   *   fails for any reason.\n   */\n  getStoredValue: function(storagePath) {\n    return Promise.resolve();\n  },\n\n  /**\n   * Override this method to implement creating and updating\n   * stored values.\n   *\n   *\n   * @param {string} storagePath The path of the value to update, relative\n   *   to the root storage path configured for this instance.\n   * @param {*} value The updated in-memory value to apply to the stored value\n   *   at the provided path.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. The promise\n   *   will be rejected if the transaction fails for any reason.\n   */\n  setStoredValue: function(storagePath, value) {\n    return Promise.resolve(value);\n  },\n\n  /**\n   * Maps a Polymer databinding path to the corresponding path in the\n   * storage system. Override to define a custom mapping.\n   *\n   * The inverse of storagePathToMemoryPath.\n   *\n   * @param {string} path An in-memory path through a storage object.\n   * @return {string} The provided path mapped to the equivalent location in\n   *   storage. This mapped version of the path is suitable for use with the\n   *   CRUD operations on both memory and storage.\n   */\n  memoryPathToStoragePath: function(path) {\n    return path;\n  },\n\n  /**\n   * Maps a storage path to the corresponding Polymer databinding path.\n   * Override to define a custom mapping.\n   *\n   * The inverse of memoryPathToStoragePath.\n   *\n   * @param {string} path The storage path through a storage object.\n   * @return {string} The provided path through storage mapped to the\n   *   equivalent Polymer path through the in-memory representation of storage.\n   */\n  storagePathToMemoryPath: function(path) {\n    return path;\n  },\n\n  /**\n   * Enables performing transformations on the in-memory representation of\n   * storage without activating observers that will cause those\n   * transformations to be re-applied to the storage backend. This is useful\n   * for preventing redundant (or cyclical) application of transformations.\n   *\n   * @param {Function} operation A function that will perform the desired\n   *   transformation. It will be called synchronously, when it is safe to\n   *   apply the transformation.\n   */\n  syncToMemory: function(operation) {\n    if (this.__syncingToMemory) {\n      return;\n    }\n\n    this._group('Sync to memory.');\n\n    this.__syncingToMemory = true;\n    operation.call(this);\n    this.__syncingToMemory = false;\n\n    this._groupEnd('Sync to memory.');\n  },\n\n  /**\n   * A convenience method. Returns true iff value is null, undefined,\n   * an empty array, or an object with no keys.\n   */\n  valueIsEmpty: function(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else if (Object.prototype.isPrototypeOf(value)) {\n      return Object.keys(value).length === 0;\n    } else {\n      return value == null;\n    }\n  },\n\n  /**\n   * Like `getStoredValue` but called with a Polymer path rather than\n   * a storage path.\n   *\n   * @param {string} path The Polymer path to get.\n   * @return {Promise} A Promise of the value stored at that path.\n   */\n  _getStoredValue: function(path) {\n    return this.getStoredValue(this.memoryPathToStoragePath(path));\n  },\n\n  /**\n   * Like `setStoredValue` but called with a Polymer path rather than\n   * a storage path.\n   *\n   * @param {string} path The Polymer path to update.\n   * @param {*} value The updated in-memory value to apply to the stored value\n   *   at the provided path.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. The promise\n   *   will be rejected if the transaction fails for any reason.\n   */\n  _setStoredValue: function(path, value) {\n    return this.setStoredValue(this.memoryPathToStoragePath(path), value);\n  },\n\n  /**\n   * Enqueues the given function in the transaction queue.\n   *\n   * The transaction queue allows for optional parallelism/sequentiality\n   * via the `sequentialTransactions` boolean property, as well as giving\n   * the user a convenient way to wait for all pending transactions to\n   * finish.\n   *\n   * The given function may be called immediately or after an arbitrary\n   * delay. Its `this` context will be bound to the element.\n   *\n   * If the transaction performs any asynchronous operations it must\n   * return a promise.\n   *\n   * @param {Function} transaction A function implementing the transaction.\n   * @return {Promise} A promise that resolves once the transaction has\n   *   finished. This promise will never reject.\n   */\n  _enqueueTransaction: function(transaction) {\n    if (this.sequentialTransactions) {\n      transaction = transaction.bind(this);\n    } else {\n      var result = transaction.call(this);\n      transaction = function() {\n        return result;\n      };\n    }\n\n    return this.__transactionQueueAdvances =\n               this.__transactionQueueAdvances.then(transaction)\n                   .catch(function(error) {\n                     this._error('Error performing queued transaction.', error);\n                   }.bind(this));\n  },\n\n  /**\n   * A wrapper around `console.log`.\n   */\n  _log: function(...args) {\n    if (this.log) {\n      console.log.apply(console, args);\n    }\n  },\n\n  /**\n   * A wrapper around `console.error`.\n   */\n  _error: function(...args) {\n    if (this.log) {\n      console.error.apply(console, args);\n    }\n  },\n\n  /**\n   * A wrapper around `console.group`.\n   */\n  _group: function(...args) {\n    if (this.log) {\n      console.group.apply(console, args);\n    }\n  },\n\n  /**\n   * A wrapper around `console.groupEnd`.\n   */\n  _groupEnd: function(...args) {\n    if (this.log) {\n      console.groupEnd.apply(console, args);\n    }\n  },\n\n  /**\n   * A reentrancy-save wrapper around `this.initializeStoredValue`.\n   * Prefer calling this method over that one.\n   *\n   * @return {Promise} The result of calling `initializeStoredValue`,\n   *   or `undefined` if called while initializing.\n   */\n  _initializeStoredValue: function() {\n    if (this.__initializingStoredValue) {\n      return;\n    }\n\n    this._group('Initializing stored value.');\n\n    var initializingStoredValue = this.__initializingStoredValue =\n        this.initializeStoredValue()\n            .then(function() {\n              this.__initialized = true;\n              this.__initializingStoredValue = null;\n              this._groupEnd('Initializing stored value.');\n            }.bind(this))\n            .catch(function(e) {\n              this.__initializingStoredValue = null;\n              this._groupEnd('Initializing stored value.');\n            }.bind(this));\n\n    return this._enqueueTransaction(function() {\n      return initializingStoredValue;\n    });\n  },\n\n  __dataChanged: function(change) {\n    if (this.isNew || this.__syncingToMemory || !this.__initialized ||\n        this.__pathCanBeIgnored(change.path)) {\n      return;\n    }\n\n    var path = this.__normalizeMemoryPath(change.path);\n    var value = change.value;\n    var indexSplices = value && value.indexSplices;\n\n    this._enqueueTransaction(function() {\n      this._log('Setting', path + ':', indexSplices || value);\n\n      if (indexSplices && this.__pathIsSplices(path)) {\n        path = this.__parentPath(path);\n        value = this.get(path);\n      }\n\n      return this._setStoredValue(path, value);\n    });\n  },\n\n  __normalizeMemoryPath: function(path) {\n    var parts = path.split('.');\n    var parentPath = [];\n    var currentPath = [];\n    var normalizedPath = [];\n    var index;\n\n    for (var i = 0; i < parts.length; ++i) {\n      currentPath.push(parts[i]);\n      if (/^#/.test(parts[i])) {\n        normalizedPath.push(\n            this.get(parentPath).indexOf(this.get(currentPath)));\n      } else {\n        normalizedPath.push(parts[i]);\n      }\n      parentPath.push(parts[i]);\n    }\n\n    return normalizedPath.join('.');\n  },\n\n  __parentPath: function(path) {\n    var parentPath = path.split('.');\n    return parentPath.slice(0, parentPath.length - 1).join('.');\n  },\n\n  __pathCanBeIgnored: function(path) {\n    return LENGTH_RX.test(path) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathIsSplices: function(path) {\n    return SPLICES_RX.test(path) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathRefersToArray: function(path) {\n    return (SPLICES_RX.test(path) || LENGTH_RX.test(path)) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathTailToIndex: function(path) {\n    var tail = path.split('.').pop();\n    return window.parseInt(tail.replace(NUMBER_RX, '$1'), 10);\n  }\n};\n","/* Forked because it contained an import.meta which webpack doesn't support. */\n/* eslint-disable */\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { AppStorageBehavior } from \"@polymer/app-storage/app-storage-behavior\";\nimport { Polymer } from \"@polymer/polymer/lib/legacy/polymer-fn\";\nimport \"@polymer/polymer/polymer-legacy\";\n\n/**\n * app-localstorage-document synchronizes storage between an in-memory\n * value and a location in the browser's localStorage system.\n *\n * localStorage is a simple and widely supported storage API that provides both\n * permanent and session-based storage options. Using app-localstorage-document\n * you can easily integrate localStorage into your app via normal Polymer\n * databinding.\n *\n * app-localstorage-document is the reference implementation of an element\n * that uses `AppStorageBehavior`. Reading its code is a good way to get\n * started writing your own storage element.\n *\n * Example use:\n *\n *     <paper-input value=\"{{search}}\"></paper-input>\n *     <app-localstorage-document key=\"search\" data=\"{{search}}\">\n *     </app-localstorage-document>\n *\n * app-localstorage-document automatically synchronizes changes to the\n * same key across multiple tabs.\n *\n * Only supports storing JSON-serializable values.\n */\nPolymer({\n  is: \"app-localstorage-document\",\n  behaviors: [AppStorageBehavior],\n\n  properties: {\n    /**\n     * Defines the logical location to store the data.\n     *\n     * @type{String}\n     */\n    key: { type: String, notify: true },\n\n    /**\n     * If true, the data will automatically be cleared from storage when\n     * the page session ends (i.e. when the user has navigated away from\n     * the page).\n     */\n    sessionOnly: { type: Boolean, value: false },\n\n    /**\n     * Either `window.localStorage` or `window.sessionStorage`, depending on\n     * `this.sessionOnly`.\n     */\n    storage: { type: Object, computed: \"__computeStorage(sessionOnly)\" },\n  },\n\n  observers: [\"__storageSourceChanged(storage, key)\"],\n\n  attached: function() {\n    this.listen(window, \"storage\", \"__onStorage\");\n    this.listen(\n      window.top,\n      \"app-local-storage-changed\",\n      \"__onAppLocalStorageChanged\"\n    );\n  },\n\n  detached: function() {\n    this.unlisten(window, \"storage\", \"__onStorage\");\n    this.unlisten(\n      window.top,\n      \"app-local-storage-changed\",\n      \"__onAppLocalStorageChanged\"\n    );\n  },\n\n  get isNew() {\n    return !this.key;\n  },\n\n  /**\n   * Stores a value at the given key, and if successful, updates this.key.\n   *\n   * @param {*} key The new key to use.\n   * @return {Promise}\n   */\n  saveValue: function(key) {\n    try {\n      this.__setStorageValue(/*{@type if (key ty){String}}*/ key, this.data);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    this.key = /** @type {String} */ (key);\n\n    return Promise.resolve();\n  },\n\n  reset: function() {\n    this.key = null;\n    this.data = this.zeroValue;\n  },\n\n  destroy: function() {\n    try {\n      this.storage.removeItem(this.key);\n      this.reset();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    return Promise.resolve();\n  },\n\n  getStoredValue: function(path) {\n    var value;\n\n    if (this.key != null) {\n      try {\n        value = this.__parseValueFromStorage();\n\n        if (value != null) {\n          value = this.get(path, { data: value });\n        } else {\n          value = undefined;\n        }\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n\n    return Promise.resolve(value);\n  },\n\n  setStoredValue: function(path, value) {\n    if (this.key != null) {\n      try {\n        this.__setStorageValue(this.key, this.data);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n\n      this.fire(\"app-local-storage-changed\", this, { node: window.top });\n    }\n\n    return Promise.resolve(value);\n  },\n\n  __computeStorage: function(sessionOnly) {\n    return sessionOnly ? window.sessionStorage : window.localStorage;\n  },\n\n  __storageSourceChanged: function(storage, key) {\n    this._initializeStoredValue();\n  },\n\n  __onStorage: function(event) {\n    if (event.key !== this.key || event.storageArea !== this.storage) {\n      return;\n    }\n\n    this.syncToMemory(function() {\n      this.set(\"data\", this.__parseValueFromStorage());\n    });\n  },\n\n  __onAppLocalStorageChanged: function(event) {\n    if (\n      event.detail === this ||\n      event.detail.key !== this.key ||\n      event.detail.storage !== this.storage\n    ) {\n      return;\n    }\n    this.syncToMemory(function() {\n      this.set(\"data\", event.detail.data);\n    });\n  },\n\n  __parseValueFromStorage: function() {\n    try {\n      return JSON.parse(this.storage.getItem(this.key));\n    } catch (e) {\n      console.error(\"Failed to parse value from storage for\", this.key);\n    }\n  },\n\n  __setStorageValue: function(key, value) {\n    if (typeof value === \"undefined\") value = null;\n    this.storage.setItem(key, JSON.stringify(value));\n  },\n});\n","import \"@material/mwc-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport { safeDump, safeLoad } from \"js-yaml\";\n\nimport { ENTITY_COMPONENT_DOMAINS } from \"../../../data/entity\";\nimport \"../../../components/entity/ha-entity-picker\";\nimport \"../../../components/ha-code-editor\";\nimport \"../../../components/ha-service-picker\";\nimport \"../../../resources/ha-style\";\nimport \"../../../util/app-localstorage-document\";\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\n\nconst ERROR_SENTINEL = {};\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPanelDevService extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n          display: block;\n          padding: 16px;\n          direction: ltr;\n        }\n\n        .ha-form {\n          margin-right: 16px;\n          max-width: 400px;\n        }\n\n        mwc-button {\n          margin-top: 8px;\n        }\n\n        .description {\n          margin-top: 24px;\n          white-space: pre-wrap;\n        }\n\n        .header {\n          @apply --paper-font-title;\n        }\n\n        .attributes th {\n          text-align: left;\n        }\n\n        .attributes tr {\n          vertical-align: top;\n        }\n\n        .attributes tr:nth-child(odd) {\n          background-color: var(--table-row-background-color, #eee);\n        }\n\n        .attributes tr:nth-child(even) {\n          background-color: var(--table-row-alternative-background-color, #eee);\n        }\n\n        .attributes td:nth-child(3) {\n          white-space: pre-wrap;\n          word-break: break-word;\n        }\n\n        pre {\n          margin: 0;\n        }\n\n        h1 {\n          white-space: normal;\n        }\n\n        td {\n          padding: 4px;\n        }\n\n        .error {\n          color: var(--google-red-500);\n        }\n      </style>\n\n      <app-localstorage-document\n        key=\"panel-dev-service-state-domain-service\"\n        data=\"{{domainService}}\"\n      >\n      </app-localstorage-document>\n      <app-localstorage-document\n        key=\"[[_computeServicedataKey(domainService)]]\"\n        data=\"{{serviceData}}\"\n      >\n      </app-localstorage-document>\n\n      <div class=\"content\">\n        <p>\n          [[localize('ui.panel.developer-tools.tabs.services.description')]]\n        </p>\n\n        <div class=\"ha-form\">\n          <ha-service-picker\n            hass=\"[[hass]]\"\n            value=\"{{domainService}}\"\n          ></ha-service-picker>\n          <template is=\"dom-if\" if=\"[[_computeHasEntity(_attributes)]]\">\n            <ha-entity-picker\n              hass=\"[[hass]]\"\n              value=\"[[_computeEntityValue(parsedJSON)]]\"\n              on-change=\"_entityPicked\"\n              disabled=\"[[!validJSON]]\"\n              include-domains=\"[[_computeEntityDomainFilter(_domain)]]\"\n              allow-custom-entity\n            ></ha-entity-picker>\n          </template>\n          <p>[[localize('ui.panel.developer-tools.tabs.services.data')]]</p>\n          <ha-code-editor\n            mode=\"yaml\"\n            value=\"[[serviceData]]\"\n            error=\"[[!validJSON]]\"\n            on-value-changed=\"_yamlChanged\"\n          ></ha-code-editor>\n          <mwc-button on-click=\"_callService\" raised disabled=\"[[!validJSON]]\">\n            [[localize('ui.panel.developer-tools.tabs.services.call_service')]]\n          </mwc-button>\n        </div>\n\n        <template is=\"dom-if\" if=\"[[!domainService]]\">\n          <h1>\n            [[localize('ui.panel.developer-tools.tabs.services.select_service')]]\n          </h1>\n        </template>\n\n        <template is=\"dom-if\" if=\"[[domainService]]\">\n          <template is=\"dom-if\" if=\"[[!_description]]\">\n            <h1>\n              [[localize('ui.panel.developer-tools.tabs.services.no_description')]]\n            </h1>\n          </template>\n          <template is=\"dom-if\" if=\"[[_description]]\">\n            <h3>[[_description]]</h3>\n\n            <table class=\"attributes\">\n              <tr>\n                <th>\n                  [[localize('ui.panel.developer-tools.tabs.services.column_parameter')]]\n                </th>\n                <th>\n                  [[localize('ui.panel.developer-tools.tabs.services.column_description')]]\n                </th>\n                <th>\n                  [[localize('ui.panel.developer-tools.tabs.services.column_example')]]\n                </th>\n              </tr>\n              <template is=\"dom-if\" if=\"[[!_attributes.length]]\">\n                <tr>\n                  <td colspan=\"3\">\n                    [[localize('ui.panel.developer-tools.tabs.services.no_parameters')]]\n                  </td>\n                </tr>\n              </template>\n              <template is=\"dom-repeat\" items=\"[[_attributes]]\" as=\"attribute\">\n                <tr>\n                  <td><pre>[[attribute.key]]</pre></td>\n                  <td>[[attribute.description]]</td>\n                  <td>[[attribute.example]]</td>\n                </tr>\n              </template>\n            </table>\n\n            <template is=\"dom-if\" if=\"[[_attributes.length]]\">\n              <mwc-button on-click=\"_fillExampleData\">\n                [[localize('ui.panel.developer-tools.tabs.services.fill_example_data')]]\n              </mwc-button>\n            </template>\n          </template>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      domainService: {\n        type: String,\n        observer: \"_domainServiceChanged\",\n      },\n\n      _domain: {\n        type: String,\n        computed: \"_computeDomain(domainService)\",\n      },\n\n      _service: {\n        type: String,\n        computed: \"_computeService(domainService)\",\n      },\n\n      serviceData: {\n        type: String,\n        value: \"\",\n      },\n\n      parsedJSON: {\n        type: Object,\n        computed: \"_computeParsedServiceData(serviceData)\",\n      },\n\n      validJSON: {\n        type: Boolean,\n        computed: \"_computeValidJSON(parsedJSON)\",\n      },\n\n      _attributes: {\n        type: Array,\n        computed: \"_computeAttributesArray(hass, _domain, _service)\",\n      },\n\n      _description: {\n        type: String,\n        computed: \"_computeDescription(hass, _domain, _service)\",\n      },\n    };\n  }\n\n  _domainServiceChanged() {\n    this.serviceData = \"\";\n  }\n\n  _computeAttributesArray(hass, domain, service) {\n    const serviceDomains = hass.services;\n    if (!(domain in serviceDomains)) return [];\n    if (!(service in serviceDomains[domain])) return [];\n\n    const fields = serviceDomains[domain][service].fields;\n    return Object.keys(fields).map(function(field) {\n      return { key: field, ...fields[field] };\n    });\n  }\n\n  _computeDescription(hass, domain, service) {\n    const serviceDomains = hass.services;\n    if (!(domain in serviceDomains)) return undefined;\n    if (!(service in serviceDomains[domain])) return undefined;\n    return serviceDomains[domain][service].description;\n  }\n\n  _computeServicedataKey(domainService) {\n    return `panel-dev-service-state-servicedata.${domainService}`;\n  }\n\n  _computeDomain(domainService) {\n    return domainService.split(\".\", 1)[0];\n  }\n\n  _computeService(domainService) {\n    return domainService.split(\".\", 2)[1] || null;\n  }\n\n  _computeParsedServiceData(serviceData) {\n    try {\n      return serviceData.trim() ? safeLoad(serviceData) : {};\n    } catch (err) {\n      return ERROR_SENTINEL;\n    }\n  }\n\n  _computeValidJSON(parsedJSON) {\n    return parsedJSON !== ERROR_SENTINEL;\n  }\n\n  _computeHasEntity(attributes) {\n    return attributes.some((attr) => attr.key === \"entity_id\");\n  }\n\n  _computeEntityValue(parsedJSON) {\n    return parsedJSON === ERROR_SENTINEL ? \"\" : parsedJSON.entity_id;\n  }\n\n  _computeEntityDomainFilter(domain) {\n    return ENTITY_COMPONENT_DOMAINS.includes(domain) ? [domain] : null;\n  }\n\n  _callService() {\n    if (this.parsedJSON === ERROR_SENTINEL) {\n      // eslint-disable-next-line\n      alert(\n        this.hass.localize(\n          \"ui.panel.developer-tools.tabs.services.alert_parsing_yaml\",\n          \"data\",\n          this.serviceData\n        )\n      );\n      return;\n    }\n\n    this.hass.callService(this._domain, this._service, this.parsedJSON);\n  }\n\n  _fillExampleData() {\n    const example = {};\n    this._attributes.forEach((attribute) => {\n      if (attribute.example) {\n        let value = \"\";\n        try {\n          value = safeLoad(attribute.example);\n        } catch (err) {\n          value = attribute.example;\n        }\n        example[attribute.key] = value;\n      }\n    });\n    this.serviceData = safeDump(example);\n  }\n\n  _entityPicked(ev) {\n    this.serviceData = safeDump({\n      ...this.parsedJSON,\n      entity_id: ev.target.value,\n    });\n  }\n\n  _yamlChanged(ev) {\n    this.serviceData = ev.detail.value;\n  }\n}\n\ncustomElements.define(\"developer-tools-service\", HaPanelDevService);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-input/iron-input.js';\nimport './paper-input-char-counter.js';\nimport './paper-input-container.js';\nimport './paper-input-error.js';\n\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {DomModule} from '@polymer/polymer/lib/elements/dom-module.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {PaperInputBehavior} from './paper-input-behavior.js';\n\n/**\nMaterial design: [Text\nfields](https://www.google.com/design/spec/components/text-fields.html)\n\n`<paper-input>` is a single-line text field with Material Design styling.\n\n    <paper-input label=\"Input label\"></paper-input>\n\nIt may include an optional error message or character counter.\n\n    <paper-input error-message=\"Invalid input!\" label=\"Input\n    label\"></paper-input> <paper-input char-counter label=\"Input\n    label\"></paper-input>\n\nIt can also include custom prefix or suffix elements, which are displayed\nbefore or after the text input itself. In order for an element to be\nconsidered as a prefix, it must have the `prefix` attribute (and similarly\nfor `suffix`).\n\n    <paper-input label=\"total\">\n      <div prefix>$</div>\n      <paper-icon-button slot=\"suffix\" icon=\"clear\"></paper-icon-button>\n    </paper-input>\n\nA `paper-input` can use the native `type=search` or `type=file` features.\nHowever, since we can't control the native styling of the input (search icon,\nfile button, date placeholder, etc.), in these cases the label will be\nautomatically floated. The `placeholder` attribute can still be used for\nadditional informational text.\n\n    <paper-input label=\"search!\" type=\"search\"\n        placeholder=\"search for cats\" autosave=\"test\" results=\"5\">\n    </paper-input>\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n### Focus\n\nTo focus a paper-input, you can call the native `focus()` method as long as the\npaper input has a tab index. Similarly, `blur()` will blur the element.\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-ms-clear` | Mixin applied to the Internet Explorer reveal button (the eyeball) | {}\n\n@group Paper Elements\n@element paper-input\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  is: 'paper-input',\n\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host([focused]) {\n        outline: none;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      input {\n        /* Firefox sets a min-width on the input, which can cause layout issues */\n        min-width: 0;\n      }\n\n      /* In 1.x, the <input> is distributed to paper-input-container, which styles it.\n      In 2.x the <iron-input> is distributed to paper-input-container, which styles\n      it, but in order for this to work correctly, we need to reset some\n      of the native input's properties to inherit (from the iron-input) */\n      iron-input > input {\n        @apply --paper-input-container-shared-input-style;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        letter-spacing: inherit;\n        word-spacing: inherit;\n        line-height: inherit;\n        text-shadow: inherit;\n        color: inherit;\n        cursor: inherit;\n      }\n\n      input:disabled {\n        @apply --paper-input-container-input-disabled;\n      }\n\n      input::-webkit-outer-spin-button,\n      input::-webkit-inner-spin-button {\n        @apply --paper-input-container-input-webkit-spinner;\n      }\n\n      input::-webkit-clear-button {\n        @apply --paper-input-container-input-webkit-clear;\n      }\n\n      input::-webkit-calendar-picker-indicator {\n        @apply --paper-input-container-input-webkit-calendar-picker-indicator;\n      }\n\n      input::-webkit-input-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      input:-moz-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      input::-moz-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      input::-ms-clear {\n        @apply --paper-input-container-ms-clear;\n      }\n\n      input::-ms-reveal {\n        @apply --paper-input-container-ms-reveal;\n      }\n\n      input:-ms-input-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      label {\n        pointer-events: none;\n      }\n    </style>\n\n    <paper-input-container id=\"container\" no-label-float=\"[[noLabelFloat]]\" always-float-label=\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\" auto-validate$=\"[[autoValidate]]\" disabled$=\"[[disabled]]\" invalid=\"[[invalid]]\">\n\n      <slot name=\"prefix\" slot=\"prefix\"></slot>\n\n      <label hidden$=\"[[!label]]\" aria-hidden=\"true\" for$=\"[[_inputId]]\" slot=\"label\">[[label]]</label>\n\n      <!-- Need to bind maxlength so that the paper-input-char-counter works correctly -->\n      <iron-input bind-value=\"{{value}}\" slot=\"input\" class=\"input-element\" id$=\"[[_inputId]]\" maxlength$=\"[[maxlength]]\" allowed-pattern=\"[[allowedPattern]]\" invalid=\"{{invalid}}\" validator=\"[[validator]]\">\n        <input aria-labelledby$=\"[[_ariaLabelledBy]]\" aria-describedby$=\"[[_ariaDescribedBy]]\" disabled$=\"[[disabled]]\" title$=\"[[title]]\" type$=\"[[type]]\" pattern$=\"[[pattern]]\" required$=\"[[required]]\" autocomplete$=\"[[autocomplete]]\" autofocus$=\"[[autofocus]]\" inputmode$=\"[[inputmode]]\" minlength$=\"[[minlength]]\" maxlength$=\"[[maxlength]]\" min$=\"[[min]]\" max$=\"[[max]]\" step$=\"[[step]]\" name$=\"[[name]]\" placeholder$=\"[[placeholder]]\" readonly$=\"[[readonly]]\" list$=\"[[list]]\" size$=\"[[size]]\" autocapitalize$=\"[[autocapitalize]]\" autocorrect$=\"[[autocorrect]]\" on-change=\"_onChange\" tabindex$=\"[[tabIndex]]\" autosave$=\"[[autosave]]\" results$=\"[[results]]\" accept$=\"[[accept]]\" multiple$=\"[[multiple]]\">\n      </iron-input>\n\n      <slot name=\"suffix\" slot=\"suffix\"></slot>\n\n      <template is=\"dom-if\" if=\"[[errorMessage]]\">\n        <paper-input-error aria-live=\"assertive\" slot=\"add-on\">[[errorMessage]]</paper-input-error>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[charCounter]]\">\n        <paper-input-char-counter slot=\"add-on\"></paper-input-char-counter>\n      </template>\n\n    </paper-input-container>\n  `,\n\n  behaviors: [PaperInputBehavior, IronFormElementBehavior],\n\n  properties: {\n    value: {\n      // Required for the correct TypeScript type-generation\n      type: String\n    }\n  },\n\n  /**\n   * Returns a reference to the focusable element. Overridden from\n   * PaperInputBehavior to correctly focus the native input.\n   *\n   * @return {!HTMLElement}\n   */\n  get _focusableElement() {\n    return this.inputElement._inputElement;\n  },\n\n  // Note: This event is only available in the 1.0 version of this element.\n  // In 2.0, the functionality of `_onIronInputReady` is done in\n  // PaperInputBehavior::attached.\n  listeners: {'iron-input-ready': '_onIronInputReady'},\n\n  _onIronInputReady: function() {\n    // Even though this is only used in the next line, save this for\n    // backwards compatibility, since the native input had this ID until 2.0.5.\n    if (!this.$.nativeInput) {\n      this.$.nativeInput = this.$$('input');\n    }\n    if (this.inputElement &&\n        this._typesThatHaveText.indexOf(this.$.nativeInput.type) !== -1) {\n      this.alwaysFloatLabel = true;\n    }\n\n    // Only validate when attached if the input already has a value.\n    if (!!this.inputElement.bindValue) {\n      this.$.container._handleValueAndAutoValidate(this.inputElement);\n    }\n  },\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`iron-a11y-announcer` is a singleton element that is intended to add a11y\nto features that require on-demand announcement from screen readers. In\norder to make use of the announcer, it is best to request its availability\nin the announcing element.\n\nExample:\n\n    Polymer({\n\n      is: 'x-chatty',\n\n      attached: function() {\n        // This will create the singleton element if it has not\n        // been created yet:\n        Polymer.IronA11yAnnouncer.requestAvailability();\n      }\n    });\n\nAfter the `iron-a11y-announcer` has been made available, elements can\nmake announces by firing bubbling `iron-announce` events.\n\nExample:\n\n    this.fire('iron-announce', {\n      text: 'This is an announcement!'\n    }, { bubbles: true });\n\nNote: announcements are only audible if you have a screen reader enabled.\n\n@group Iron Elements\n@demo demo/index.html\n*/\nexport const IronA11yAnnouncer = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: fixed;\n        clip: rect(0px,0px,0px,0px);\n      }\n    </style>\n    <div aria-live$=\"[[mode]]\">[[_text]]</div>\n`,\n\n  is: 'iron-a11y-announcer',\n\n  properties: {\n\n    /**\n     * The value of mode is used to set the `aria-live` attribute\n     * for the element that will be announced. Valid values are: `off`,\n     * `polite` and `assertive`.\n     */\n    mode: {type: String, value: 'polite'},\n\n    _text: {type: String, value: ''}\n  },\n\n  created: function() {\n    if (!IronA11yAnnouncer.instance) {\n      IronA11yAnnouncer.instance = this;\n    }\n\n    document.body.addEventListener(\n        'iron-announce', this._onIronAnnounce.bind(this));\n  },\n\n  /**\n   * Cause a text string to be announced by screen readers.\n   *\n   * @param {string} text The text that should be announced.\n   */\n  announce: function(text) {\n    this._text = '';\n    this.async(function() {\n      this._text = text;\n    }, 100);\n  },\n\n  _onIronAnnounce: function(event) {\n    if (event.detail && event.detail.text) {\n      this.announce(event.detail.text);\n    }\n  }\n});\n\nIronA11yAnnouncer.instance = null;\n\nIronA11yAnnouncer.requestAvailability = function() {\n  if (!IronA11yAnnouncer.instance) {\n    IronA11yAnnouncer.instance = document.createElement('iron-a11y-announcer');\n  }\n\n  document.body.appendChild(IronA11yAnnouncer.instance);\n};\n"],"sourceRoot":""}