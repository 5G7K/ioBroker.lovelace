{"version":3,"sources":["webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/onboarding/onboarding-core-config.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/data/core.ts"],"names":["__webpack_require__","d","__webpack_exports__","setupLeafletMap","createTileLayer","tslib__WEBPACK_IMPORTED_MODULE_0__","mapElement","darkMode","undefined","parentNode","Error","e","then","t","bind","Leaflet","_a","sent","Icon","Default","imagePath","map","style","document","createElement","setAttribute","appendChild","setView","addTo","leaflet","tileLayer","Browser","retina","attribution","subdomains","minZoom","maxZoom","amsterdam","_super","LocationEditor","_this","apply","this","arguments","fitZoom","tslib_es6","prototype","fitMap","_leafletMap","location","render","Object","lit_element","templateObject_1","firstUpdated","changedProps","call","_initMap","updated","_updateMarker","_ignoreFitToMap","defineProperty","shadowRoot","querySelector","setup_leaflet_map","_mapEl","_b","addEventListener","ev","_updateLocation","latlng","invalidateSize","lat","lng","fire_event","bubbles","_locationMarker","setLatLng","marker","draggable","target","getLatLng","addLayer","remove","templateObject_2","OnboardingCoreConfig","_working","onboarding_core_config_templateObject_1","onboardingLocalize","hass","user","name","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystemValue","_unitSystemChanged","_save","list","setTimeout","focus","keyCode","inputElement","id","keys","google_timezones_json_default","a","forEach","key","option","value","innerHTML","_name","_location","_elevation","_timeZone","_unitSystem","currentTarget","detail","callWS","type","values","latitude","longitude","Number","elevation","String","unit_system","time_zone","alert","err_1","message","preventDefault","location_1","location_name","onboarding","result","onboarding_core_config_templateObject_2"],"mappings":"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","file":"chunk.c20c1fcc04985589774d.js","sourcesContent":["import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(\n    /* webpackChunkName: \"leaflet\" */ \"leaflet\"\n  )) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n            )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(\"FAIL\");\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport { Marker, Map, LeafletMouseEvent, DragEndEvent, LatLng } from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  public fitZoom = 16;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    this._leafletMap.setView(this.location, this.fitZoom);\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    this._updateMarker();\n    if (!this._ignoreFitToMap || this._ignoreFitToMap !== this.location) {\n      this.fitMap();\n    }\n    this._ignoreFitToMap = undefined;\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(this._mapEl);\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._updateLocation(ev.latlng)\n    );\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _updateLocation(latlng: LatLng) {\n    this.location = this._ignoreFitToMap = [latlng.lat, latlng.lng];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateMarker(): void {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      return;\n    }\n    this._locationMarker = this.Leaflet!.marker(this.location, {\n      draggable: true,\n    });\n    this._locationMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._updateLocation(ev.target.getLatLng())\n    );\n    this._leafletMap!.addLayer(this._locationMarker);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n"],"sourceRoot":""}