{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-history-graph-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","configElementStyle","html","_templateObject","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiEntityEditor","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","_this2","entities","_templateObject2","label","hass","localize","map","entityConf","index","_templateObject3","entity","_valueChanged","_entityDown","_entityUp","_addEntity","ev","target","newConfigEntities","fireEvent","newEntities","_ref","_ref2","splice","Object","assign","static","css","_templateObject4","LitElement","entitiesConfigStruct","union","name","cardConfigStruct","type","title","hours_to_show","refresh_interval","HuiHistoryGraphCardEditor","config","_config","_configEntities","processEditorEntities","_title","_hours_to_show","_refresh_interval","detail","configValue","Number","_defineProperty"],"mappings":"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","file":"chunk.8e43df261ea68ee47503.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  @property() protected label?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>\n        ${this.label ||\n          this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.generic.entities\"\n          ) +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            ) +\n            \")\"}\n      </h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-entity-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HistoryGraphCardConfig } from \"../../cards/hui-history-graph-card\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { configElementStyle } from \"./config-elements-style\";\n\nconst entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n  },\n  \"entity-id\",\n]);\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entities: [entitiesConfigStruct],\n  title: \"string?\",\n  hours_to_show: \"number?\",\n  refresh_interval: \"number?\",\n});\n\n@customElement(\"hui-history-graph-card-editor\")\nexport class HuiHistoryGraphCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: HistoryGraphCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: HistoryGraphCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _hours_to_show(): number {\n    return this._config!.hours_to_show || 24;\n  }\n\n  get _refresh_interval(): number {\n    return this._config!.refresh_interval || 0;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            type=\"number\"\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.hours_to_show\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._hours_to_show}\"\n            .configValue=${\"hours_to_show\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            type=\"number\"\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.refresh_interval\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._refresh_interval}\"\n            .configValue=${\"refresh_interval\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <hui-entity-editor\n          .hass=\"${this.hass}\"\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._valueChanged}\"\n        ></hui-entity-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (!ev.detail && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue!]: value,\n        };\n      }\n    }\n\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-history-graph-card-editor\": HuiHistoryGraphCardEditor;\n  }\n}\n"],"sourceRoot":""}