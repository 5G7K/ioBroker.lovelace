{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-iframe-card-editor.ts"],"names":["isEntityId","value","includes","isIcon","struct","superstruct","types","icon","configElementStyle","html","cardConfigStruct","type","title","url","aspect_ratio","HuiIframeCardEditor","customElement","property","config","_config","hass","_title","_valueChanged","Number","_aspect_ratio","replace","_url","ev","target","configValue","fireEvent","LitElement"],"mappings":"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","file":"hui-iframe-card-editor.chunk.js","sourcesContent":["export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { IframeCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  url: \"string?\",\n  aspect_ratio: \"string?\",\n});\n\n@customElement(\"hui-iframe-card-editor\")\nexport class HuiIframeCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: IframeCardConfig;\n\n  public setConfig(config: IframeCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _url(): string {\n    return this._config!.url || \"\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Title\"\n            .value=\"${this._title}\"\n            .configValue=\"${\"title\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            label=\"Aspect Ratio\"\n            type=\"number\"\n            .value=\"${Number(this._aspect_ratio.replace(\"%\", \"\"))}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <paper-input\n          label=\"Url\"\n          .value=\"${this._url}\"\n          .configValue=\"${\"url\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    let value = target.value;\n\n    if (target.configValue! === \"aspect_ratio\" && target.value) {\n      value += \"%\";\n    }\n\n    if (this[`_${target.configValue}`] === value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-iframe-card-editor\": HuiIframeCardEditor;\n  }\n}\n"],"sourceRoot":""}