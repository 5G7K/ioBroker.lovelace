{"version":3,"sources":["webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/panels/lovelace/editor/hui-dialog-save-config.ts"],"names":["HaIronFocusablesHelper","getTabbableNodes","node","result","needsSortByTabIndex","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","element","tabIndex","_normalizedTabIndex","needsSort","push","children","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","HaPaperDialog","mixinBehaviors","define","HuiSaveConfig","customElement","_saving","property","params","_params","updateComplete","_dialog","open","querySelector","html","hass","localize","_closeDialog","_saveConfig","close","lovelace","saveConfig","config","setEditMode","alert","message","haStyleDialog","css","LitElement"],"mappings":"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","file":"hui-dialog-save-config.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  CSSResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../../components/dialog/ha-paper-dialog\";\n// tslint:disable-next-line:no-duplicate-imports\nimport { HaPaperDialog } from \"../../../components/dialog/ha-paper-dialog\";\nimport \"@material/mwc-button\";\n\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { SaveDialogParams } from \"./show-save-config-dialog\";\n\n@customElement(\"hui-dialog-save-config\")\nexport class HuiSaveConfig extends LitElement {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _params?: SaveDialogParams;\n\n  @property() private _saving: boolean;\n\n  public constructor() {\n    super();\n    this._saving = false;\n  }\n\n  public async showDialog(params: SaveDialogParams): Promise<void> {\n    this._params = params;\n    await this.updateComplete;\n    this._dialog.open();\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <ha-paper-dialog with-backdrop>\n        <h2>\n          ${this.hass!.localize(\"ui.panel.lovelace.editor.save_config.header\")}\n        </h2>\n        <paper-dialog-scrollable>\n          <p>\n            ${this.hass!.localize(\"ui.panel.lovelace.editor.save_config.para\")}\n          </p>\n          <p>\n            ${this.hass!.localize(\n              \"ui.panel.lovelace.editor.save_config.para_sure\"\n            )}\n          </p>\n        </paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          <mwc-button @click=\"${this._closeDialog}\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.save_config.cancel\"\n            )}</mwc-button\n          >\n          <mwc-button ?disabled=\"${this._saving}\" @click=\"${this._saveConfig}\">\n            <paper-spinner\n              ?active=\"${this._saving}\"\n              alt=\"Saving\"\n            ></paper-spinner>\n            ${this.hass!.localize(\n              \"ui.panel.lovelace.editor.save_config.save\"\n            )}</mwc-button\n          >\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private _closeDialog(): void {\n    this._dialog.close();\n  }\n\n  private async _saveConfig(): Promise<void> {\n    if (!this.hass || !this._params) {\n      return;\n    }\n    this._saving = true;\n    try {\n      const lovelace = this._params!.lovelace;\n      await lovelace.saveConfig(lovelace.config);\n      lovelace.setEditMode(true);\n      this._saving = false;\n      this._closeDialog();\n    } catch (err) {\n      alert(`Saving failed: ${err.message}`);\n      this._saving = false;\n    }\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-paper-dialog {\n            max-height: 100%;\n            height: 100%;\n          }\n        }\n        @media all and (min-width: 660px) {\n          ha-paper-dialog {\n            width: 650px;\n          }\n        }\n        ha-paper-dialog {\n          max-width: 650px;\n        }\n        paper-spinner {\n          display: none;\n        }\n        paper-spinner[active] {\n          display: block;\n        }\n        mwc-button paper-spinner {\n          width: 14px;\n          height: 14px;\n          margin-right: 20px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-save-config\": HuiSaveConfig;\n  }\n}\n"],"sourceRoot":""}