{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-glance-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiThemeSelectEditor","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","themes","Object","keys","hass","sort","html","_templateObject","label","localize","_changed","map","theme","_templateObject2","static","css","_templateObject3","ev","target","fireEvent","LitElement","actionConfigStruct","entitiesConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_0__","action","navigation_path","url_path","service","service_data","union","entity","name","cardConfigStruct","type","title","columns","show_name","show_state","show_icon","entities","HuiGlanceCardEditor","config","_config","_configEntities","processEditorEntities","NaN","configElementStyle","_title","_valueChanged","_theme","_columns","_show_name","_show_icon","_show_state","configValue","detail","isNaN","Number","assign","_defineProperty","undefined","checked"],"mappings":"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","file":"chunk.c757730800411be623f2.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../../../components/entity/state-badge\";\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-icon\";\nimport \"../../../../components/ha-switch\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  entitiesConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { GlanceCardConfig, ConfigEntity } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string|number?\",\n  theme: \"string?\",\n  columns: \"number?\",\n  show_name: \"boolean?\",\n  show_state: \"boolean?\",\n  show_icon: \"boolean?\",\n  entities: [entitiesConfigStruct],\n});\n\n@customElement(\"hui-glance-card-editor\")\nexport class HuiGlanceCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GlanceCardConfig;\n\n  @property() private _configEntities?: ConfigEntity[];\n\n  public setConfig(config: GlanceCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  get _columns(): number {\n    return this._config!.columns || NaN;\n  }\n\n  get _show_name(): boolean {\n    return this._config!.show_name || true;\n  }\n\n  get _show_icon(): boolean {\n    return this._config!.show_icon || true;\n  }\n\n  get _show_state(): boolean {\n    return this._config!.show_state || true;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.glance.columns\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${this._columns}\"\n            .configValue=\"${\"columns\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <ha-switch\n            ?checked=\"${this._show_name !== false}\"\n            .configValue=\"${\"show_name\"}\"\n            @change=\"${this._valueChanged}\"\n            >${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.show_name\"\n            )}</ha-switch\n          >\n          <ha-switch\n            ?checked=\"${this._show_icon !== false}\"\n            .configValue=\"${\"show_icon\"}\"\n            @change=\"${this._valueChanged}\"\n            >${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.show_icon\"\n            )}</ha-switch\n          >\n          <ha-switch\n            ?checked=\"${this._show_state !== false}\"\n            .configValue=\"${\"show_state\"}\"\n            @change=\"${this._valueChanged}\"\n            >${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.show_state\"\n            )}</ha-switch\n          >\n        </div>\n      </div>\n      <hui-entity-editor\n        .hass=\"${this.hass}\"\n        .entities=\"${this._configEntities}\"\n        @entities-changed=\"${this._valueChanged}\"\n      ></hui-entity-editor>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue!]:\n            target.checked !== undefined ? target.checked : value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-glance-card-editor\": HuiGlanceCardEditor;\n  }\n}\n"],"sourceRoot":""}