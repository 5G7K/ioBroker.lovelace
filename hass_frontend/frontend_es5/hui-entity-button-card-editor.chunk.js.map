{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/panels/lovelace/editor/config-elements/hui-entity-button-card-editor.ts"],"names":["Polymer","_template","html","is","behaviors","PaperItemBehavior","cardConfigStruct","struct","type","entity","name","show_name","icon","show_icon","icon_height","tap_action","optional","actionConfigStruct","hold_action","theme","HuiEntityButtonCardEditor","customElement","property","config","_config","includes","String","parseFloat","action","hass","actions","configElementStyle","_entity","_valueChanged","_name","_icon","_icon_height","_theme","_tap_action","_hold_action","ev","target","configValue","value","newValue","isNaN","Number","checked","undefined","fireEvent","LitElement"],"mappings":"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","file":"hui-entity-button-card-editor.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-action-editor\";\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  actionConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { ActionConfig } from \"../../../../data/lovelace\";\nimport { EntityButtonCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  show_name: \"boolean?\",\n  icon: \"string?\",\n  show_icon: \"boolean?\",\n  icon_height: \"string?\",\n  tap_action: struct.optional(actionConfigStruct),\n  hold_action: struct.optional(actionConfigStruct),\n  theme: \"string?\",\n});\n\n@customElement(\"hui-entity-button-card-editor\")\nexport class HuiEntityButtonCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: EntityButtonCardConfig;\n\n  public setConfig(config: EntityButtonCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _show_name(): boolean {\n    return this._config!.show_name || true;\n  }\n\n  get _icon(): string {\n    return this._config!.icon || \"\";\n  }\n\n  get _show_icon(): boolean {\n    return this._config!.show_icon || true;\n  }\n\n  get _icon_height(): string {\n    return this._config!.icon_height && this._config!.icon_height.includes(\"px\")\n      ? String(parseFloat(this._config!.icon_height))\n      : \"\";\n  }\n\n  get _tap_action(): ActionConfig {\n    return this._config!.tap_action || { action: \"more-info\" };\n  }\n\n  get _hold_action(): ActionConfig {\n    return this._config!.hold_action || { action: \"none\" };\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const actions = [\"more-info\", \"toggle\", \"navigate\", \"call-service\", \"none\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Name (Optional)\"\n            .value=\"${this._name}\"\n            .configValue=\"${\"name\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            label=\"Icon (Optional)\"\n            .value=\"${this._icon}\"\n            .configValue=\"${\"icon\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-toggle-button\n            ?checked=\"${this._config!.show_name !== false}\"\n            .configValue=\"${\"show_name\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show Name?</paper-toggle-button\n          >\n          <paper-toggle-button\n            ?checked=\"${this._config!.show_icon !== false}\"\n            .configValue=\"${\"show_icon\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show Icon?</paper-toggle-button\n          >\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Icon Height (Optional)\"\n            .value=\"${this._icon_height}\"\n            .configValue=\"${\"icon_height\"}\"\n            @value-changed=\"${this._valueChanged}\"\n            type=\"number\"\n          ><div class=\"suffix\" slot=\"suffix\">px</div>\n          </paper-input>\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n        </paper-input>\n\n        </div>\n        <div class=\"side-by-side\">\n          <hui-action-editor\n            label=\"Tap Action\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._tap_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"tap_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n          <hui-action-editor\n            label=\"Hold Action\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._hold_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"hold_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (\n      this[`_${target.configValue}`] === target.value ||\n      this[`_${target.configValue}`] === target.config\n    ) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        let newValue: string | undefined;\n        if (\n          target.configValue === \"icon_height\" &&\n          !isNaN(Number(target.value))\n        ) {\n          newValue = `${String(target.value)}px`;\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue!]:\n            target.checked !== undefined\n              ? target.checked\n              : newValue !== undefined\n              ? newValue\n              : target.value\n              ? target.value\n              : target.config,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-button-card-editor\": HuiEntityButtonCardEditor;\n  }\n}\n"],"sourceRoot":""}