{"version":3,"sources":["webpack:///./src/common/util/debounce.ts","webpack:///./src/components/ha-paper-dropdown-menu.ts","webpack:///./src/components/paper-time-input.js","webpack:///./src/data/entity_registry.ts"],"names":["debounce","func","wait","immediate","timeout","args","context","later","apply","callNow","clearTimeout","setTimeout","paperDropdownClass","customElements","get","HaPaperDropdownClass","window","getComputedStyle","direction","style","textAlign","define","PaperTimeInput","valid","$","hour","validate","min","format","dropdown","amPm","undefined","toString","length","n1","n2","html","label","type","String","value","autoValidate","Boolean","hideLabel","Number","disabled","notify","readOnly","computed","PolymerElement","computeEntityRegistryName","hass","entry","name","state","states","entity_id","computeStateName","updateEntityRegistryEntry","entityId","updates","callWS","removeEntityRegistryEntry","fetchEntityRegistry","conn","sendMessagePromise","subscribeEntityRegistryUpdates","store","subscribeEvents","then","entities","setState","subscribeEntityRegistry","onChange","createCollection"],"mappings":"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","file":"more-info-dialog~panel-lovelace.chunk.js","sourcesContent":["// From: https://davidwalsh.name/javascript-debounce-function\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// tslint:disable-next-line: ban-types\nexport const debounce = <T extends Function>(\n  func: T,\n  wait,\n  immediate = false\n): T => {\n  let timeout;\n  // @ts-ignore\n  return function(...args) {\n    // tslint:disable:no-this-assignment\n    // @ts-ignore\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n","import \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport { Constructor } from \"lit-element\";\nimport { PolymerElement } from \"@polymer/polymer\";\n\nconst paperDropdownClass = customElements.get(\n  \"paper-dropdown-menu\"\n) as Constructor<PolymerElement>;\n\n// patches paper drop down to properly support RTL - https://github.com/PolymerElements/paper-dropdown-menu/issues/183\nexport class HaPaperDropdownClass extends paperDropdownClass {\n  public ready() {\n    super.ready();\n    // wait to check for direction since otherwise direction is wrong even though top level is RTL\n    setTimeout(() => {\n      if (window.getComputedStyle(this).direction === \"rtl\") {\n        this.style.textAlign = \"right\";\n      }\n    }, 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dropdown-menu\": HaPaperDropdownClass;\n  }\n}\n\ncustomElements.define(\"ha-paper-dropdown-menu\", HaPaperDropdownClass);\n","/**\nAdapted from paper-time-input from\nhttps://github.com/ryanburns23/paper-time-input\nMIT Licensed. Copyright (c) 2017 Ryan Burns\n\n`<paper-time-input>` Polymer element to accept a time with paper-input & paper-dropdown-menu\nInspired by the time input in google forms\n\n### Styling\n\n`<paper-time-input>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-time-input-dropdown-ripple-color` | dropdown ripple color | `--primary-color`\n`--paper-time-input-cotnainer` | Mixin applied to the inputs | `{}`\n`--paper-time-dropdown-input-cotnainer` | Mixin applied to the dropdown input | `{}`\n*/\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nexport class PaperTimeInput extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          @apply --paper-font-common-base;\n        }\n\n        paper-input {\n          width: 30px;\n          text-align: center;\n          --paper-input-container-input: {\n            /* Damn you firefox\n             * Needed to hide spin num in firefox\n             * http://stackoverflow.com/questions/3790935/can-i-hide-the-html5-number-input-s-spin-box\n             */\n            -moz-appearance: textfield;\n            @apply --paper-time-input-cotnainer;\n          }\n          --paper-input-container-input-webkit-spinner: {\n            -webkit-appearance: none;\n            margin: 0;\n            display: none;\n          }\n          --paper-input-container-shared-input-style_-_-webkit-appearance: textfield;\n        }\n\n        paper-dropdown-menu {\n          width: 55px;\n          padding: 0;\n          /* Force ripple to use the whole container */\n          --paper-dropdown-menu-ripple: {\n            color: var(\n              --paper-time-input-dropdown-ripple-color,\n              var(--primary-color)\n            );\n          }\n          --paper-input-container-input: {\n            @apply --paper-font-button;\n            text-align: center;\n            padding-left: 5px;\n            @apply --paper-time-dropdown-input-cotnainer;\n          }\n          --paper-input-container-underline: {\n            border-color: transparent;\n          }\n          --paper-input-container-underline-focus: {\n            border-color: transparent;\n          }\n        }\n\n        paper-item {\n          cursor: pointer;\n          text-align: center;\n          font-size: 14px;\n        }\n\n        paper-listbox {\n          padding: 0;\n        }\n\n        label {\n          @apply --paper-font-caption;\n        }\n\n        .time-input-wrap {\n          @apply --layout-horizontal;\n          @apply --layout-no-wrap;\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n      </style>\n\n      <label hidden$=\"[[hideLabel]]\">[[label]]</label>\n      <div class=\"time-input-wrap\">\n        <!-- Hour Input -->\n        <paper-input\n          id=\"hour\"\n          type=\"number\"\n          value=\"{{hour}}\"\n          on-change=\"_shouldFormatHour\"\n          required=\"\"\n          auto-validate=\"[[autoValidate]]\"\n          prevent-invalid-input=\"\"\n          maxlength=\"2\"\n          max=\"[[_computeHourMax(format)]]\"\n          min=\"0\"\n          no-label-float=\"\"\n          disabled=\"[[disabled]]\"\n        >\n          <span suffix=\"\" slot=\"suffix\">:</span>\n        </paper-input>\n\n        <!-- Min Input -->\n        <paper-input\n          id=\"min\"\n          type=\"number\"\n          value=\"{{min}}\"\n          on-change=\"_formatMin\"\n          required=\"\"\n          auto-validate=\"[[autoValidate]]\"\n          prevent-invalid-input=\"\"\n          maxlength=\"2\"\n          max=\"59\"\n          min=\"0\"\n          no-label-float=\"\"\n          disabled=\"[[disabled]]\"\n        >\n        </paper-input>\n\n        <!-- Dropdown Menu -->\n        <paper-dropdown-menu\n          id=\"dropdown\"\n          required=\"\"\n          hidden$=\"[[_equal(format, 24)]]\"\n          no-label-float=\"\"\n          disabled=\"[[disabled]]\"\n        >\n          <paper-listbox\n            attr-for-selected=\"name\"\n            selected=\"{{amPm}}\"\n            slot=\"dropdown-content\"\n          >\n            <paper-item name=\"AM\">AM</paper-item>\n            <paper-item name=\"PM\">PM</paper-item>\n          </paper-listbox>\n        </paper-dropdown-menu>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Label for the input\n       */\n      label: {\n        type: String,\n        value: \"Time\",\n      },\n      /**\n       * auto validate time inputs\n       */\n      autoValidate: {\n        type: Boolean,\n        value: true,\n      },\n      /**\n       * hides the label\n       */\n      hideLabel: {\n        type: Boolean,\n        value: false,\n      },\n      /**\n       * 12 or 24 hr format\n       */\n      format: {\n        type: Number,\n        value: 12,\n      },\n      /**\n       * disables the inputs\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n      /**\n       * hour\n       */\n      hour: {\n        type: String,\n        notify: true,\n      },\n      /**\n       * minute\n       */\n      min: {\n        type: String,\n        notify: true,\n      },\n      /**\n       * AM or PM\n       */\n      amPm: {\n        type: String,\n        notify: true,\n        value: \"AM\",\n      },\n      /**\n       * Formatted time string\n       */\n      value: {\n        type: String,\n        notify: true,\n        readOnly: true,\n        computed: \"_computeTime(min, hour, amPm)\",\n      },\n    };\n  }\n\n  /**\n   * Validate the inputs\n   * @return {boolean}\n   */\n  validate() {\n    var valid = true;\n    // Validate hour & min fields\n    if (!this.$.hour.validate() | !this.$.min.validate()) {\n      valid = false;\n    }\n    // Validate AM PM if 12 hour time\n    if (this.format === 12 && !this.$.dropdown.validate()) {\n      valid = false;\n    }\n    return valid;\n  }\n\n  /**\n   * Create time string\n   */\n  _computeTime(min, hour, amPm) {\n    if (hour && min) {\n      // No ampm on 24 hr time\n      if (this.format === 24) {\n        amPm = \"\";\n      }\n      return hour + \":\" + min + \" \" + amPm;\n    }\n    return undefined;\n  }\n\n  /**\n   * Format min\n   */\n  _formatMin() {\n    if (this.min.toString().length === 1) {\n      this.min = this.min < 10 ? \"0\" + this.min : this.min;\n    }\n  }\n\n  /**\n   * Hour needs a leading zero in 24hr format\n   */\n  _shouldFormatHour() {\n    if (this.format === 24 && this.hour.toString().length === 1) {\n      this.hour = this.hour < 10 ? \"0\" + this.hour : this.hour;\n    }\n  }\n\n  /**\n   * 24 hour format has a max hr of 23\n   */\n  _computeHourMax(format) {\n    if (format === 12) {\n      return format;\n    }\n    return 23;\n  }\n\n  _equal(n1, n2) {\n    return n1 === n2;\n  }\n}\n\ncustomElements.define(\"paper-time-input\", PaperTimeInput);\n","import { createCollection, Connection } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\nimport computeStateName from \"../common/entity/compute_state_name\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport interface EntityRegistryEntry {\n  entity_id: string;\n  name: string;\n  platform: string;\n  config_entry_id?: string;\n  device_id?: string;\n  disabled_by?: string;\n}\n\nexport interface EntityRegistryEntryUpdateParams {\n  name: string | null;\n  new_entity_id: string;\n}\n\nexport const computeEntityRegistryName = (\n  hass: HomeAssistant,\n  entry: EntityRegistryEntry\n): string | null => {\n  if (entry.name) {\n    return entry.name;\n  }\n  const state = hass.states[entry.entity_id];\n  return state ? computeStateName(state) : null;\n};\n\nexport const updateEntityRegistryEntry = (\n  hass: HomeAssistant,\n  entityId: string,\n  updates: Partial<EntityRegistryEntryUpdateParams>\n): Promise<EntityRegistryEntry> =>\n  hass.callWS<EntityRegistryEntry>({\n    type: \"config/entity_registry/update\",\n    entity_id: entityId,\n    ...updates,\n  });\n\nexport const removeEntityRegistryEntry = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"config/entity_registry/remove\",\n    entity_id: entityId,\n  });\n\nconst fetchEntityRegistry = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config/entity_registry/list\",\n  });\n\nconst subscribeEntityRegistryUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchEntityRegistry(conn).then((entities) =>\n          store.setState(entities, true)\n        ),\n      500,\n      true\n    ),\n    \"entity_registry_updated\"\n  );\n\nexport const subscribeEntityRegistry = (\n  conn: Connection,\n  onChange: (entities: EntityRegistryEntry[]) => void\n) =>\n  createCollection<EntityRegistryEntry[]>(\n    \"_entityRegistry\",\n    fetchEntityRegistry,\n    subscribeEntityRegistryUpdates,\n    conn,\n    onChange\n  );\n"],"sourceRoot":""}