{"version":3,"sources":["webpack:///./src/panels/lovelace/components/hui-yaml-editor.ts"],"names":["HuiYamlEditor","customElement","CodeMirror","commands","save","cm","fireEvent","getWrapperElement","_value","shadowRoot","attachShadow","mode","innerHTML","codeMirrorCSS","hass","_hass","setScrollBarDirection","value","codemirror","getValue","setValue","querySelector","lineNumbers","tabSize","autofocus","viewportMargin","Infinity","extraKeys","Tab","gutters","computeRTL","on","_onChange","refresh","classList","toggle","HTMLElement"],"mappings":"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","file":"hui-dialog-edit-card~lovelace-yaml-editor.chunk.js","sourcesContent":["// @ts-ignore\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/mode/yaml/yaml\";\n// @ts-ignore\nimport codeMirrorCSS from \"codemirror/lib/codemirror.css\";\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { computeRTL } from \"../../../common/util/compute_rtl\";\nimport { customElement } from \"lit-element\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"yaml-changed\": {\n      value: string;\n    };\n    \"yaml-save\": undefined;\n  }\n}\n\n@customElement(\"hui-yaml-editor\")\nexport class HuiYamlEditor extends HTMLElement {\n  public _hass?: HomeAssistant;\n\n  public codemirror!: any;\n\n  private _value: string;\n\n  public constructor() {\n    super();\n    CodeMirror.commands.save = (cm: CodeMirror) => {\n      fireEvent(cm.getWrapperElement(), \"yaml-save\");\n    };\n    this._value = \"\";\n    const shadowRoot = this.attachShadow({ mode: \"open\" });\n    shadowRoot.innerHTML = `\n            <style>\n              ${codeMirrorCSS}\n              .CodeMirror {\n                height: var(--code-mirror-height, auto);\n                direction: var(--code-mirror-direction, ltr);\n              }\n              .CodeMirror-scroll {\n                max-height: var(--code-mirror-max-height, --code-mirror-height);\n              }\n              .CodeMirror-gutters {\n                border-right: 1px solid var(--paper-input-container-color, var(--secondary-text-color));\n                background-color: var(--paper-dialog-background-color, var(--primary-background-color));\n                transition: 0.2s ease border-right;\n              }\n              .CodeMirror-focused .CodeMirror-gutters {\n                border-right: 2px solid var(--paper-input-container-focus-color, var(--primary-color));;\n              }\n              .CodeMirror-linenumber {\n                color: var(--paper-dialog-color, var(--primary-text-color));\n              }\n              .rtl .CodeMirror-vscrollbar {\n                right: auto;\n                left: 0px;\n              }\n              .rtl-gutter {\n                width: 20px;\n              }\n            </style>`;\n  }\n\n  set hass(hass: HomeAssistant) {\n    this._hass = hass;\n    if (this._hass) {\n      this.setScrollBarDirection();\n    }\n  }\n\n  set value(value: string) {\n    if (this.codemirror) {\n      if (value !== this.codemirror.getValue()) {\n        this.codemirror.setValue(value);\n      }\n    }\n    this._value = value;\n  }\n\n  get value(): string {\n    return this.codemirror.getValue();\n  }\n\n  get hasComments(): boolean {\n    return this.shadowRoot!.querySelector(\"span.cm-comment\") ? true : false;\n  }\n\n  public connectedCallback(): void {\n    if (!this.codemirror) {\n      this.codemirror = CodeMirror(\n        (this.shadowRoot as unknown) as HTMLElement,\n        {\n          value: this._value,\n          lineNumbers: true,\n          mode: \"yaml\",\n          tabSize: 2,\n          autofocus: true,\n          viewportMargin: Infinity,\n          extraKeys: {\n            Tab: \"indentMore\",\n            \"Shift-Tab\": \"indentLess\",\n          },\n          gutters:\n            this._hass && computeRTL(this._hass!)\n              ? [\"rtl-gutter\", \"CodeMirror-linenumbers\"]\n              : [],\n        }\n      );\n      this.setScrollBarDirection();\n      this.codemirror.on(\"changes\", () => this._onChange());\n    } else {\n      this.codemirror.refresh();\n    }\n  }\n\n  private _onChange(): void {\n    fireEvent(this, \"yaml-changed\", { value: this.codemirror.getValue() });\n  }\n\n  private setScrollBarDirection(): void {\n    if (!this.codemirror) {\n      return;\n    }\n\n    this.codemirror\n      .getWrapperElement()\n      .classList.toggle(\"rtl\", computeRTL(this._hass!));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-yaml-editor\": HuiYamlEditor;\n  }\n}\n"],"sourceRoot":""}