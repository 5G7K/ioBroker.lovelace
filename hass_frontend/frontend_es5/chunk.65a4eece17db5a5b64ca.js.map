{"version":3,"sources":["webpack:///./src/panels/lovelace/common/compute-unused-entities.ts","webpack:///./src/panels/lovelace/hui-unused-entities.ts"],"names":["EXCLUDED_DOMAINS","addFromAction","entities","actionConfig","action","service_data","entity_id","entityIds","Array","isArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","entityId","value","add","err","addEntityId","entity","camera_image","tap_action","hold_action","computeUsedEntities","config","Set","views","forEach","view","addEntities","obj","card","cards","elements","badges","badge","HuiUnusedEntities","_decorate","_initialize","_LitElement","F","_LitElement2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","d","kind","key","decorators","property","static","_hass","_config","hass","_elements","_createElements","html","_templateObject2","renderStyle","_templateObject","_templateObject3","_this2","usedEntities","domains","Object","keys","states","filter","has","includes","split","sort","domain","computeDomain","push","map","el","createCardElement","type","title","localize","secondary_info","show_header_toggle","LitElement","customElements","define"],"mappings":"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","file":"chunk.65a4eece17db5a5b64ca.js","sourcesContent":["import { LovelaceConfig, ActionConfig } from \"../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../types\";\n\nconst EXCLUDED_DOMAINS = [\"zone\"];\n\nconst addFromAction = (entities: Set<string>, actionConfig: ActionConfig) => {\n  if (\n    actionConfig.action !== \"call-service\" ||\n    !actionConfig.service_data ||\n    !actionConfig.service_data.entity_id\n  ) {\n    return;\n  }\n  let entityIds = actionConfig.service_data.entity_id;\n  if (!Array.isArray(entityIds)) {\n    entityIds = [entityIds];\n  }\n  for (const entityId of entityIds) {\n    entities.add(entityId);\n  }\n};\n\nconst addEntityId = (entities: Set<string>, entity) => {\n  if (typeof entity === \"string\") {\n    entities.add(entity);\n    return;\n  }\n\n  if (entity.entity) {\n    entities.add(entity.entity);\n  }\n  if (entity.camera_image) {\n    entities.add(entity.camera_image);\n  }\n  if (entity.tap_action) {\n    addFromAction(entities, entity.tap_action);\n  }\n  if (entity.hold_action) {\n    addFromAction(entities, entity.hold_action);\n  }\n};\n\nconst addEntities = (entities: Set<string>, obj) => {\n  if (obj.entity) {\n    addEntityId(entities, obj.entity);\n  }\n  if (obj.entities) {\n    obj.entities.forEach((entity) => addEntityId(entities, entity));\n  }\n  if (obj.card) {\n    addEntities(entities, obj.card);\n  }\n  if (obj.cards) {\n    obj.cards.forEach((card) => addEntities(entities, card));\n  }\n  if (obj.elements) {\n    obj.elements.forEach((card) => addEntities(entities, card));\n  }\n  if (obj.badges) {\n    obj.badges.forEach((badge) => addEntityId(entities, badge));\n  }\n};\n\nconst computeUsedEntities = (config) => {\n  const entities = new Set<string>();\n  config.views.forEach((view) => addEntities(entities, view));\n  return entities;\n};\n\nexport const computeUnusedEntities = (\n  hass: HomeAssistant,\n  config: LovelaceConfig\n): string[] => {\n  const usedEntities = computeUsedEntities(config);\n  return Object.keys(hass.states)\n    .filter(\n      (entity) =>\n        !usedEntities.has(entity) &&\n        !EXCLUDED_DOMAINS.includes(entity.split(\".\", 1)[0])\n    )\n    .sort();\n};\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nimport \"./cards/hui-entities-card\";\n\nimport { computeUnusedEntities } from \"./common/compute-unused-entities\";\nimport { createCardElement } from \"./common/create-card-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { LovelaceCard } from \"./types\";\nimport { LovelaceConfig } from \"../../data/lovelace\";\nimport computeDomain from \"../../common/entity/compute_domain\";\n\nexport class HuiUnusedEntities extends LitElement {\n  private _hass?: HomeAssistant;\n  \n  @property() private _config?: LovelaceConfig;\n  \n  private _elements?: LovelaceCard[];\n\n  static get properties(): PropertyDeclarations {\n    return {\n      _hass: {},\n      _config: {},\n    };\n  }\n\n  set hass(hass: HomeAssistant) {\n    this._hass = hass;\n    if (!this._elements) {\n      this._createElements();\n      return;\n    }\n    for (const element of this._elements) {\n      element.hass = this._hass;\n    }\n  }\n\n  public setConfig(config: LovelaceConfig): void {\n    this._config = config;\n    this._createElements();\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._config || !this._hass) {\n      return html``;\n    }\n\n    return html`\n      ${this.renderStyle()}\n      <div id=\"root\">${this._elements}</div>\n    `;\n  }\n\n  private renderStyle(): TemplateResult {\n    return html`\n      <style>\n        #root {\n          padding: 4px;\n          display: flex;\n          flex-wrap: wrap;\n        }\n        hui-entities-card {\n          max-width: 400px;\n          padding: 4px;\n          flex: 1 auto;\n        }\n      </style>\n    `;\n  }\n\n  private _createElements(): void {\n    if (!this._hass) {\n      return;\n    }\n    const domains: { [domain: string]: string[] } = {};\n    computeUnusedEntities(this._hass, this._config!).forEach((entity) => {\n      const domain = computeDomain(entity);\n\n      if (!(domain in domains)) {\n        domains[domain] = [];\n      }\n      domains[domain].push(entity);\n    });\n    this._elements = Object.keys(domains)\n      .sort()\n      .map((domain) => {\n        const el = createCardElement({\n          type: \"entities\",\n          title: this._hass!.localize(`domain.${domain}`) || domain,\n          entities: domains[domain].map((entity) => ({\n            entity,\n            secondary_info: \"entity-id\",\n          })),\n          show_header_toggle: false,\n        });\n        el.hass = this._hass;\n        return el;\n      });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-unused-entities\": HuiUnusedEntities;\n  }\n}\ncustomElements.define(\"hui-unused-entities\", HuiUnusedEntities);\n"],"sourceRoot":""}