{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/process-editor-entities.ts","webpack:///./src/panels/lovelace/components/hui-input-list-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-map-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","Object","index_es","types","entity-id","value","includes","icon","configElementStyle","lit_element__WEBPACK_IMPORTED_MODULE_1__","templateObject_1","tslib__WEBPACK_IMPORTED_MODULE_0__","rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_8__","entity_id","HaEntityPicker","_super","_this","apply","this","arguments","_getStates","memoize_one__WEBPACK_IMPORTED_MODULE_6__","hass","domainFilter","entityFilter","states","entityIds","keys","filter","eid","substr","indexOf","sort","map","key","prototype","updated","changedProps","call","has","_opened","_hass","render","lit_element__WEBPACK_IMPORTED_MODULE_9__","templateObject_3","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","templateObject_2","defineProperty","ev","detail","setTimeout","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_10__","templateObject_4","type","Boolean","attribute","customElements","define","HuiEntityEditor","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","target","newConfigEntities","concat","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_3__","newEntities","_a","splice","processEditorEntities","HuiInputListEditor","tslib_es6","lit_element","listEntry","inputLabel","_consolidateEntries","_removeEntry","_addEntry","newEntries","fire_event","blur","stopPropagation","parent","currentTarget","parentElement","entitiesConfigStruct","union","name","cardConfigStruct","title","aspect_ratio","default_zoom","dark_mode","geo_location_sources","hui_map_card_editor_HuiMapCardEditor","HuiMapCardEditor","setConfig","config","_config","_configEntities","process_editor_entities","NaN","hui_map_card_editor_templateObject_2","config_elements_style","_title","_aspect_ratio","_default_zoom","_dark_mode","_entitiesValueChanged","_geo_location_sources","hui_map_card_editor_templateObject_1","configValue","isNaN","Number","checked","hui_map_card_editor_templateObject_3"],"mappings":"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","file":"chunk.3f618d1125af982263b7.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Clear\"\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Show entities\"\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>Entities</h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import { EntityConfig } from \"../entity-rows/types\";\n\nexport function processEditorEntities(entities): EntityConfig[] {\n  return entities.map((entityConf) => {\n    if (typeof entityConf === \"string\") {\n      return { entity: entityConf };\n    }\n    return entityConf;\n  });\n}\n","import {\n  html,\n  css,\n  LitElement,\n  property,\n  TemplateResult,\n  CSSResult,\n  customElement,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\n\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-input-list-editor\")\nexport class HuiInputListEditor extends LitElement {\n  @property() protected value?: string[];\n  @property() protected hass?: HomeAssistant;\n  @property() protected inputLabel?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.value) {\n      return html``;\n    }\n\n    return html`\n      ${this.value.map((listEntry, index) => {\n        return html`\n          <paper-input\n            label=\"${this.inputLabel}\"\n            .value=\"${listEntry}\"\n            .configValue=\"${\"entry\"}\"\n            .index=\"${index}\"\n            @value-changed=\"${this._valueChanged}\"\n            @blur=\"${this._consolidateEntries}\"\n            ><paper-icon-button\n              slot=\"suffix\"\n              class=\"clear-button\"\n              icon=\"hass:close\"\n              no-ripple\n              @click=\"${this._removeEntry}\"\n              >Clear</paper-icon-button\n            ></paper-input\n          >\n        `;\n      })}\n      <paper-input\n        label=\"${this.inputLabel}\"\n        @change=\"${this._addEntry}\"\n      ></paper-input>\n    `;\n  }\n\n  private _addEntry(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newEntries = this.value!.concat(target.value as string);\n    target.value = \"\";\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n    (ev.target! as LitElement).blur();\n  }\n\n  private _valueChanged(ev: Event): void {\n    ev.stopPropagation();\n    const target = ev.target! as EditorTarget;\n    const newEntries = this.value!.concat();\n    newEntries[target.index!] = target.value!;\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  private _consolidateEntries(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      const newEntries = this.value!.concat();\n      newEntries.splice(target.index!, 1);\n      fireEvent(this, \"value-changed\", {\n        value: newEntries,\n      });\n    }\n  }\n\n  private _removeEntry(ev: Event): void {\n    const parent = (ev.currentTarget as any).parentElement;\n    const newEntries = this.value!.concat();\n    newEntries.splice(parent.index!, 1);\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-list-editor\": HuiInputListEditor;\n  }\n}\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-entity-editor\";\nimport \"../../components/hui-input-list-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { MapCardConfig } from \"../../cards/types\";\n\nconst entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  aspect_ratio: \"string?\",\n  default_zoom: \"number?\",\n  dark_mode: \"boolean?\",\n  entities: [entitiesConfigStruct],\n  geo_location_sources: \"array?\",\n});\n\n@customElement(\"hui-map-card-editor\")\nexport class HuiMapCardEditor extends LitElement implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MapCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: MapCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _default_zoom(): number {\n    return this._config!.default_zoom || NaN;\n  }\n\n  get _geo_location_sources(): string[] {\n    return this._config!.geo_location_sources || [];\n  }\n\n  get _dark_mode(): boolean {\n    return this._config!.dark_mode || false;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Aspect Ratio\"\n            .value=\"${this._aspect_ratio}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            label=\"Default Zoom\"\n            type=\"number\"\n            .value=\"${this._default_zoom}\"\n            .configValue=\"${\"default_zoom\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <paper-toggle-button\n          ?checked=\"${this._dark_mode !== false}\"\n          .configValue=\"${\"dark_mode\"}\"\n          @change=\"${this._valueChanged}\"\n          >Dark Mode?</paper-toggle-button\n        >\n        <hui-entity-editor\n          .hass=\"${this.hass}\"\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._entitiesValueChanged}\"\n        ></hui-entity-editor>\n        <h3>Geolocation Sources</h3>\n        <div class=\"geo_location_sources\">\n          <hui-input-list-editor\n            inputLabel=\"Source\"\n            .hass=\"${this.hass}\"\n            .value=\"${this._geo_location_sources}\"\n            .configValue=\"${\"geo_location_sources\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></hui-input-list-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _entitiesValueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<any>): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (\n      target.configValue &&\n      ev.detail &&\n      this[`_${target.configValue}`] === ev.detail.value\n    ) {\n      return;\n    }\n    if (target.configValue && ev.detail) {\n      if (\n        ev.detail.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(ev.detail.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = ev.detail.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue]:\n            target.checked !== undefined ? target.checked : value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .geo_location_sources {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-map-card-editor\": HuiMapCardEditor;\n  }\n}\n"],"sourceRoot":""}