{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-glance-card-editor.ts","webpack:///./src/panels/lovelace/editor/process-editor-entities.ts"],"names":["Polymer","_template","html","is","behaviors","PaperItemBehavior","isEntityId","value","includes","isIcon","struct","superstruct","types","icon","entitiesConfigStruct","union","entity","name","cardConfigStruct","type","title","theme","columns","show_name","show_state","show_icon","entities","HuiGlanceCardEditor","customElement","property","config","_config","_configEntities","processEditorEntities","NaN","hass","configElementStyle","_title","_valueChanged","_theme","_columns","_show_name","_show_icon","_show_state","ev","target","configValue","detail","isNaN","Number","checked","undefined","fireEvent","LitElement","map","entityConf"],"mappings":"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","file":"hui-glance-card-editor.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../../../components/entity/state-badge\";\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-icon\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { GlanceCardConfig, ConfigEntity } from \"../../cards/types\";\n\nconst entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string|number?\",\n  theme: \"string?\",\n  columns: \"number?\",\n  show_name: \"boolean?\",\n  show_state: \"boolean?\",\n  show_icon: \"boolean?\",\n  entities: [entitiesConfigStruct],\n});\n\n@customElement(\"hui-glance-card-editor\")\nexport class HuiGlanceCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GlanceCardConfig;\n\n  @property() private _configEntities?: ConfigEntity[];\n\n  public setConfig(config: GlanceCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  get _columns(): number {\n    return this._config!.columns || NaN;\n  }\n\n  get _show_name(): boolean {\n    return this._config!.show_name || true;\n  }\n\n  get _show_icon(): boolean {\n    return this._config!.show_icon || true;\n  }\n\n  get _show_state(): boolean {\n    return this._config!.show_state || true;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n          <paper-input\n            label=\"Columns\"\n            type=\"number\"\n            .value=\"${this._columns}\"\n            .configValue=\"${\"columns\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-toggle-button\n            ?checked=\"${this._show_name !== false}\"\n            .configValue=\"${\"show_name\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show Name?</paper-toggle-button\n          >\n          <paper-toggle-button\n            ?checked=\"${this._show_icon !== false}\"\n            .configValue=\"${\"show_icon\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show Icon?</paper-toggle-button\n          >\n          <paper-toggle-button\n            ?checked=\"${this._show_state !== false}\"\n            .configValue=\"${\"show_state\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show State?</paper-toggle-button\n          >\n        </div>\n      </div>\n      <hui-entity-editor\n        .hass=\"${this.hass}\"\n        .entities=\"${this._configEntities}\"\n        @entities-changed=\"${this._valueChanged}\"\n      ></hui-entity-editor>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue!]:\n            target.checked !== undefined ? target.checked : value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-glance-card-editor\": HuiGlanceCardEditor;\n  }\n}\n","import { EntityConfig } from \"../entity-rows/types\";\n\nexport function processEditorEntities(entities): EntityConfig[] {\n  return entities.map((entityConf) => {\n    if (typeof entityConf === \"string\") {\n      return { entity: entityConf };\n    }\n    return entityConf;\n  });\n}\n"],"sourceRoot":""}