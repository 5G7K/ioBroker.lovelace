{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-alarm-panel-card-editor.ts"],"names":["Polymer","_template","html","is","behaviors","PaperItemBehavior","isEntityId","value","includes","isIcon","struct","superstruct","types","icon","configElementStyle","cardConfigStruct","type","entity","name","states","HuiAlarmPanelCardEditor","customElement","property","config","_config","hass","_name","_valueChanged","_entity","_states","map","state","index","_stateRemoved","_stateAdded","css","ev","target","Number","newStates","splice","fireEvent","indexOf","push","configValue","LitElement"],"mappings":"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","file":"hui-alarm-panel-card-editor.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\n\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-icon\";\nimport { AlarmPanelCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  states: \"array?\",\n});\n\n@customElement(\"hui-alarm-panel-card-editor\")\nexport class HuiAlarmPanelCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: AlarmPanelCardConfig;\n\n  public setConfig(config: AlarmPanelCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _states(): string[] {\n    return this._config!.states || [];\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const states = [\"arm_home\", \"arm_away\", \"arm_night\", \"arm_custom_bypass\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Name\"\n            .value=\"${this._name}\"\n            .configValue=\"${\"name\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <ha-entity-picker\n            .hass=\"${this.hass}\"\n            .value=\"${this._entity}\"\n            .configValue=${\"entity\"}\n            domain-filter=\"alarm_control_panel\"\n            @change=\"${this._valueChanged}\"\n            allow-custom-entity\n          ></ha-entity-picker>\n        </div>\n        <span>Used States</span> ${this._states.map((state, index) => {\n          return html`\n            <div class=\"states\">\n              <paper-item>${state}</paper-item>\n              <ha-icon\n                class=\"deleteState\"\n                .value=\"${index}\"\n                icon=\"hass:close\"\n                @click=${this._stateRemoved}\n              ></ha-icon>\n            </div>\n          `;\n        })}\n        <paper-dropdown-menu\n          label=\"Available States\"\n          @value-changed=\"${this._stateAdded}\"\n        >\n          <paper-listbox slot=\"dropdown-content\">\n            ${states.map((state) => {\n              return html`\n                <paper-item>${state}</paper-item>\n              `;\n            })}\n          </paper-listbox>\n        </paper-dropdown-menu>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .states {\n        display: flex;\n        flex-direction: row;\n      }\n      .deleteState {\n        visibility: hidden;\n      }\n      .states:hover > .deleteState {\n        visibility: visible;\n      }\n      ha-icon {\n        padding-top: 12px;\n      }\n    `;\n  }\n\n  private _stateRemoved(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this._states || !this.hass) {\n      return;\n    }\n\n    const target = ev.target! as EditorTarget;\n    const index = Number(target.value);\n    if (index > -1) {\n      const newStates = this._states;\n      newStates.splice(index, 1);\n      this._config = {\n        ...this._config,\n        states: newStates,\n      };\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _stateAdded(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (!target.value || this._states.indexOf(target.value) >= 0) {\n      return;\n    }\n    const newStates = this._states;\n    newStates.push(target.value);\n    this._config = {\n      ...this._config,\n      states: newStates,\n    };\n    target.value = \"\";\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-alarm-panel-card-editor\": HuiAlarmPanelCardEditor;\n  }\n}\n"],"sourceRoot":""}