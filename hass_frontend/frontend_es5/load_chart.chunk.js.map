{"version":3,"sources":["webpack:///./src/resources/ha-chart-scripts.js"],"names":["Chart","Interaction","modes","neareach","chart","e","options","getRange","x","a","b","Math","abs","y","xy","pow","getRangeMax","r","position","helpers","getRelativePosition","elements","elementsRange","datasets","data","meta","axis","rangeFunc","rangeMaxFunc","i","ilen","length","isDatasetVisible","getDatasetMeta","j","jlen","element","_view","skip","vm","range","oldRange","radius","hitRadius","undefined","ret","filter","n"],"mappings":"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","file":"load_chart.chunk.js","sourcesContent":["import Chart from \"chart.js\";\nimport \"chartjs-chart-timeline\";\n\n// This function add a new interaction mode to Chart.js that\n// returns one point for every dataset.\nChart.Interaction.modes.neareach = function(chart, e, options) {\n  const getRange = {\n    x: (a, b) => Math.abs(a.x - b.x),\n    y: (a, b) => Math.abs(a.y - b.y),\n    // eslint-disable-next-line no-restricted-properties\n    xy: (a, b) => Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2),\n  };\n  const getRangeMax = {\n    x: (r) => r,\n    y: (r) => r,\n    xy: (r) => r * r,\n  };\n  let position;\n  if (e.native) {\n    position = {\n      x: e.x,\n      y: e.y,\n    };\n  } else {\n    position = Chart.helpers.getRelativePosition(e, chart);\n  }\n  const elements = [];\n  const elementsRange = [];\n  const datasets = chart.data.datasets;\n  let meta;\n  options.axis = options.axis || \"xy\";\n  const rangeFunc = getRange[options.axis];\n  const rangeMaxFunc = getRangeMax[options.axis];\n\n  for (let i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n    for (let j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      const element = meta.data[j];\n      if (!element._view.skip) {\n        const vm = element._view;\n        const range = rangeFunc(vm, position);\n        const oldRange = elementsRange[i];\n        if (range < rangeMaxFunc(vm.radius + vm.hitRadius)) {\n          if (oldRange === undefined || oldRange > range) {\n            elementsRange[i] = range;\n            elements[i] = element;\n          }\n        }\n      }\n    }\n  }\n  const ret = elements.filter((n) => n !== undefined);\n  return ret;\n};\n\nexport default Chart;\n"],"sourceRoot":""}