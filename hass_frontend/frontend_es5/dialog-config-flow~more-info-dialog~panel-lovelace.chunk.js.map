{"version":3,"sources":["webpack:///./src/components/ha-markdown.js","webpack:///./src/mixins/events-mixin.js"],"names":["loaded","svgWhiteList","HaMarkdown","_scriptLoaded","_renderScheduled","_resize","fire","then","marked","filterXSS","_render","Promise","resolve","innerHTML","content","gfm","tables","breaks","onIgnoreTag","allowSvg","tag","html","indexOf","walker","document","createTreeWalker","nextNode","node","currentNode","tagName","host","location","target","addEventListener","innerText","type","String","observer","Boolean","value","EventsMixin","PolymerElement","customElements","define","dedupingMixin","superClass","detail","options","fireEvent"],"mappings":"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","file":"dialog-config-flow~more-info-dialog~panel-lovelace.chunk.js","sourcesContent":["import { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nlet loaded = null;\n\n/**\n * White list allowed svg tag.\n * Only put in the tag used in QR code, can be extend in future.\n */\nconst svgWhiteList = [\"svg\", \"path\"];\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaMarkdown extends EventsMixin(PolymerElement) {\n  static get properties() {\n    return {\n      content: {\n        type: String,\n        observer: \"_render\",\n      },\n      allowSvg: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // 0 = not loaded, 1 = success, 2 = error\n    this._scriptLoaded = 0;\n    this._renderScheduled = false;\n    this._resize = () => this.fire(\"iron-resize\");\n\n    if (!loaded) {\n      loaded = import(/* webpackChunkName: \"load_markdown\" */ \"../resources/load_markdown\");\n    }\n    loaded\n      .then(\n        ({ marked, filterXSS }) => {\n          this.marked = marked;\n          this.filterXSS = filterXSS;\n          this._scriptLoaded = 1;\n        },\n        () => {\n          this._scriptLoaded = 2;\n        }\n      )\n      .then(() => this._render());\n  }\n\n  _render() {\n    if (this._scriptLoaded === 0 || this._renderScheduled) return;\n\n    this._renderScheduled = true;\n\n    // debounce it to next microtask.\n    Promise.resolve().then(() => {\n      this._renderScheduled = false;\n\n      if (this._scriptLoaded === 1) {\n        this.innerHTML = this.filterXSS(\n          this.marked(this.content, {\n            gfm: true,\n            tables: true,\n            breaks: true,\n          }),\n          {\n            onIgnoreTag: this.allowSvg\n              ? (tag, html) => (svgWhiteList.indexOf(tag) >= 0 ? html : null)\n              : null,\n          }\n        );\n        this._resize();\n\n        const walker = document.createTreeWalker(\n          this,\n          1 /* SHOW_ELEMENT */,\n          null,\n          false\n        );\n\n        while (walker.nextNode()) {\n          const node = walker.currentNode;\n\n          // Open external links in a new window\n          if (node.tagName === \"A\" && node.host !== document.location.host) {\n            node.target = \"_blank\";\n\n            // Fire a resize event when images loaded to notify content resized\n          } else if (node.tagName === \"IMG\") {\n            node.addEventListener(\"load\", this._resize);\n          }\n        }\n      } else if (this._scriptLoaded === 2) {\n        this.innerText = this.content;\n      }\n    });\n  }\n}\n\ncustomElements.define(\"ha-markdown\", HaMarkdown);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n"],"sourceRoot":""}