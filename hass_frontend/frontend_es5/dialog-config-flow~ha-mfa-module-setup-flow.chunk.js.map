{"version":3,"sources":["webpack:///./src/components/ha-form.js","webpack:///./src/components/ha-markdown.js","webpack:///./src/components/ha-paper-slider.js"],"names":["HaForm","input","shadowRoot","querySelector","focus","val","Array","isArray","schema","a","b","indexOf","obj","item","name","ev","value","detail","model","type","Number","set","unmaskedPassword","html","data","Object","notify","error","computeLabel","Function","computeError","EventsMixin","PolymerElement","customElements","define","loaded","svgWhiteList","HaMarkdown","_scriptLoaded","_renderScheduled","_resize","fire","then","marked","filterXSS","_render","Promise","resolve","innerHTML","content","gfm","tables","breaks","onIgnoreTag","allowSvg","tag","walker","document","createTreeWalker","nextNode","node","currentNode","tagName","host","location","target","addEventListener","innerText","String","observer","Boolean","PaperSliderClass","get","HaPaperSlider","tpl","createElement","template","styleEl","appendChild"],"mappings":"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","file":"dialog-config-flow~ha-mfa-module-setup-flow.chunk.js","sourcesContent":["import \"@polymer/paper-checkbox/paper-checkbox\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-paper-slider\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaForm extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        .error {\n          color: red;\n        }\n        paper-checkbox {\n          display: inline-block;\n          padding: 22px 0;\n        }\n      </style>\n      <template is=\"dom-if\" if=\"[[_isArray(schema)]]\" restamp=\"\">\n        <template is=\"dom-if\" if=\"[[error.base]]\">\n          <div class=\"error\">[[computeError(error.base, schema)]]</div>\n        </template>\n\n        <template is=\"dom-repeat\" items=\"[[schema]]\">\n          <ha-form\n            data=\"[[_getValue(data, item)]]\"\n            schema=\"[[item]]\"\n            error=\"[[_getValue(error, item)]]\"\n            on-data-changed=\"_valueChanged\"\n            compute-label=\"[[computeLabel]]\"\n            compute-error=\"[[computeError]]\"\n          ></ha-form>\n        </template>\n      </template>\n      <template is=\"dom-if\" if=\"[[!_isArray(schema)]]\" restamp=\"\">\n        <template is=\"dom-if\" if=\"[[error]]\">\n          <div class=\"error\">[[computeError(error, schema)]]</div>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"string\")]]'\n          restamp=\"\"\n        >\n          <template\n            is=\"dom-if\"\n            if='[[_includes(schema.name, \"password\")]]'\n            restamp=\"\"\n          >\n            <paper-input\n              type=\"[[_passwordFieldType(unmaskedPassword)]]\"\n              label=\"[[computeLabel(schema)]]\"\n              value=\"{{data}}\"\n              required=\"[[schema.required]]\"\n              auto-validate=\"[[schema.required]]\"\n              error-message=\"Required\"\n            >\n              <paper-icon-button\n                toggles\n                active=\"{{unmaskedPassword}}\"\n                slot=\"suffix\"\n                icon=\"[[_passwordFieldIcon(unmaskedPassword)]]\"\n                id=\"iconButton\"\n                title=\"Click to toggle between masked and clear password\"\n              >\n              </paper-icon-button>\n            </paper-input>\n          </template>\n          <template\n            is=\"dom-if\"\n            if='[[!_includes(schema.name, \"password\")]]'\n            restamp=\"\"\n          >\n            <paper-input\n              label=\"[[computeLabel(schema)]]\"\n              value=\"{{data}}\"\n              required=\"[[schema.required]]\"\n              auto-validate=\"[[schema.required]]\"\n              error-message=\"Required\"\n            ></paper-input>\n          </template>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"integer\")]]'\n          restamp=\"\"\n        >\n          <template is=\"dom-if\" if=\"[[_isRange(schema)]]\" restamp=\"\">\n            <div>\n              [[computeLabel(schema)]]\n              <ha-paper-slider\n                pin=\"\"\n                value=\"{{data}}\"\n                min=\"[[schema.valueMin]]\"\n                max=\"[[schema.valueMax]]\"\n              ></ha-paper-slider>\n            </div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_isRange(schema)]]\" restamp=\"\">\n            <paper-input\n              label=\"[[computeLabel(schema)]]\"\n              value=\"{{data}}\"\n              type=\"number\"\n              required=\"[[schema.required]]\"\n              auto-validate=\"[[schema.required]]\"\n              error-message=\"Required\"\n            ></paper-input>\n          </template>\n        </template>\n\n        <template is=\"dom-if\" if='[[_equals(schema.type, \"float\")]]' restamp=\"\">\n          <!-- TODO -->\n          <paper-input\n            label=\"[[computeLabel(schema)]]\"\n            value=\"{{data}}\"\n            required=\"[[schema.required]]\"\n            auto-validate=\"[[schema.required]]\"\n            error-message=\"Required\"\n          ></paper-input>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"boolean\")]]'\n          restamp=\"\"\n        >\n          <div>\n            <paper-checkbox checked=\"{{data}}\"\n              >[[computeLabel(schema)]]</paper-checkbox\n            >\n          </div>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"select\")]]'\n          restamp=\"\"\n        >\n          <paper-dropdown-menu label=\"[[computeLabel(schema)]]\">\n            <paper-listbox\n              slot=\"dropdown-content\"\n              attr-for-selected=\"item-name\"\n              selected=\"{{data}}\"\n            >\n              <template is=\"dom-repeat\" items=\"[[schema.options]]\">\n                <paper-item item-name$=\"[[_optionValue(item)]]\"\n                  >[[_optionLabel(item)]]</paper-item\n                >\n              </template>\n            </paper-listbox>\n          </paper-dropdown-menu>\n        </template>\n      </template>\n    `;\n  }\n\n  static get properties() {\n    return {\n      data: {\n        type: Object,\n        notify: true,\n      },\n      schema: Object,\n      error: Object,\n\n      // A function that will computes the label to be displayed for a given\n      // schema object.\n      computeLabel: {\n        type: Function,\n        value: () => (schema) => schema && schema.name,\n      },\n\n      // A function that will computes an error message to be displayed for a\n      // given error ID, and relevant schema object\n      computeError: {\n        type: Function,\n        value: () => (error, schema) => error, // eslint-disable-line no-unused-vars\n      },\n    };\n  }\n\n  focus() {\n    const input = this.shadowRoot.querySelector(\n      \"ha-form, paper-input, ha-paper-slider, paper-checkbox, paper-dropdown-menu\"\n    );\n\n    if (!input) {\n      return;\n    }\n\n    input.focus();\n  }\n\n  _isArray(val) {\n    return Array.isArray(val);\n  }\n\n  _isRange(schema) {\n    return \"valueMin\" in schema && \"valueMax\" in schema;\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n\n  _includes(a, b) {\n    return a.indexOf(b) >= 0;\n  }\n\n  _getValue(obj, item) {\n    if (obj) {\n      return obj[item.name];\n    }\n    return null;\n  }\n\n  _valueChanged(ev) {\n    let value = ev.detail.value;\n    if (ev.model.item.type === \"integer\") {\n      value = Number(ev.detail.value);\n    }\n    this.set([\"data\", ev.model.item.name], value);\n  }\n\n  _passwordFieldType(unmaskedPassword) {\n    return unmaskedPassword ? \"text\" : \"password\";\n  }\n\n  _passwordFieldIcon(unmaskedPassword) {\n    return unmaskedPassword ? \"hass:eye-off\" : \"hass:eye\";\n  }\n\n  _optionValue(item) {\n    return Array.isArray(item) ? item[0] : item;\n  }\n\n  _optionLabel(item) {\n    return Array.isArray(item) ? item[1] : item;\n  }\n}\n\ncustomElements.define(\"ha-form\", HaForm);\n","import { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nlet loaded = null;\n\n/**\n * White list allowed svg tag.\n * Only put in the tag used in QR code, can be extend in future.\n */\nconst svgWhiteList = [\"svg\", \"path\"];\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaMarkdown extends EventsMixin(PolymerElement) {\n  static get properties() {\n    return {\n      content: {\n        type: String,\n        observer: \"_render\",\n      },\n      allowSvg: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // 0 = not loaded, 1 = success, 2 = error\n    this._scriptLoaded = 0;\n    this._renderScheduled = false;\n    this._resize = () => this.fire(\"iron-resize\");\n\n    if (!loaded) {\n      loaded = import(/* webpackChunkName: \"load_markdown\" */ \"../resources/load_markdown\");\n    }\n    loaded\n      .then(\n        ({ marked, filterXSS }) => {\n          this.marked = marked;\n          this.filterXSS = filterXSS;\n          this._scriptLoaded = 1;\n        },\n        () => {\n          this._scriptLoaded = 2;\n        }\n      )\n      .then(() => this._render());\n  }\n\n  _render() {\n    if (this._scriptLoaded === 0 || this._renderScheduled) return;\n\n    this._renderScheduled = true;\n\n    // debounce it to next microtask.\n    Promise.resolve().then(() => {\n      this._renderScheduled = false;\n\n      if (this._scriptLoaded === 1) {\n        this.innerHTML = this.filterXSS(\n          this.marked(this.content, {\n            gfm: true,\n            tables: true,\n            breaks: true,\n          }),\n          {\n            onIgnoreTag: this.allowSvg\n              ? (tag, html) => (svgWhiteList.indexOf(tag) >= 0 ? html : null)\n              : null,\n          }\n        );\n        this._resize();\n\n        const walker = document.createTreeWalker(\n          this,\n          1 /* SHOW_ELEMENT */,\n          null,\n          false\n        );\n\n        while (walker.nextNode()) {\n          const node = walker.currentNode;\n\n          // Open external links in a new window\n          if (node.tagName === \"A\" && node.host !== document.location.host) {\n            node.target = \"_blank\";\n\n            // Fire a resize event when images loaded to notify content resized\n          } else if (node.tagName === \"IMG\") {\n            node.addEventListener(\"load\", this._resize);\n          }\n        }\n      } else if (this._scriptLoaded === 2) {\n        this.innerText = this.content;\n      }\n    });\n  }\n}\n\ncustomElements.define(\"ha-markdown\", HaMarkdown);\n","import \"@polymer/paper-slider/paper-slider\";\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin paper-slider\n */\nconst PaperSliderClass = customElements.get(\"paper-slider\");\n\nclass HaPaperSlider extends PaperSliderClass {\n  static get template() {\n    const tpl = document.createElement(\"template\");\n    tpl.innerHTML = PaperSliderClass.template.innerHTML;\n    const styleEl = document.createElement(\"style\");\n    styleEl.innerHTML = `\n      .pin > .slider-knob > .slider-knob-inner {\n        font-size:  var(--ha-paper-slider-pin-font-size, 10px);\n        line-height: normal;\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::before {\n        top: unset;\n        margin-left: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        width: 2.2em;\n        height: 2.2em;\n\n        -webkit-transform-origin: left bottom;\n        transform-origin: left bottom;\n        -webkit-transform: rotate(-45deg) scale(0) translate(0);\n        transform: rotate(-45deg) scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::before {\n        -webkit-transform: rotate(-45deg) scale(1) translate(7px, -7px);\n        transform: rotate(-45deg) scale(1) translate(7px, -7px);\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::after {\n        top: unset;\n        font-size: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        margin-left: -1.1em;\n        width: 2.2em;\n        height: 2.1em;\n\n        -webkit-transform-origin: center bottom;\n        transform-origin: center bottom;\n        -webkit-transform: scale(0) translate(0);\n        transform: scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::after {\n        -webkit-transform: scale(1) translate(0, -10px);\n        transform: scale(1) translate(0, -10px);\n      }\n\n      :host([dir=\"rtl\"]) .pin.expand > .slider-knob > .slider-knob-inner::after {\n        -webkit-transform: scale(1) translate(0, -17px) scaleX(-1) !important;\n        transform: scale(1) translate(0, -17px) scaleX(-1) !important;\n        }\n    `;\n    tpl.content.appendChild(styleEl);\n    return tpl;\n  }\n}\ncustomElements.define(\"ha-paper-slider\", HaPaperSlider);\n"],"sourceRoot":""}