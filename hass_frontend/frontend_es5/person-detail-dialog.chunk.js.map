{"version":3,"sources":["webpack:///./src/common/entity/compute_object_id.ts","webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/common/entity/valid_entity_id.ts","webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/components/entity/ha-entities-picker.ts","webpack:///./src/components/user/ha-user-picker.ts","webpack:///./src/panels/config/person/dialog-person-detail.ts"],"names":["computeObjectId","entityId","substr","indexOf","stateObj","attributes","friendly_name","undefined","entity_id","replace","validEntityId","test","HaIronFocusablesHelper","getTabbableNodes","node","result","needsSortByTabIndex","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","element","tabIndex","_normalizedTabIndex","needsSort","push","children","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","HaPaperDialog","mixinBehaviors","define","HaEntitiesPickerLight","customElement","property","attribute","hass","currentEntities","_currentEntities","html","map","domainFilter","_entityFilter","pickedEntityLabel","_entityChanged","pickEntityLabel","_addEntity","value","includes","entities","fireEvent","event","stopPropagation","curValue","currentTarget","newValue","detail","isValidEntityId","_updateEntities","filter","ent","toAdd","LitElement","HaEntityPicker","memoizeOne","users","sorted","sort","a","b","compare","name","label","_value","_userChanged","_sortedUsers","user","id","changedProps","fetchUsers","then","ev","item","dataset","userId","setTimeout","css","DialogPersonDetail","params","_params","_error","entry","_name","_userId","user_id","_deviceTrackers","device_trackers","updateComplete","nameInvalid","trim","_openedChanged","_nameChanged","localize","_deviceTrackersChanged","_deleteEntry","_submitting","_updateEntry","values","updateEntry","createEntry","message","removeEntry","haStyleDialog"],"mappings":"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","file":"person-detail-dialog.chunk.js","sourcesContent":["/** Compute the object ID of a state. */\nexport default function computeObjectId(entityId: string): string {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport computeObjectId from \"./compute_object_id\";\n\nexport default (stateObj: HassEntity): string =>\n  stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n","const validEntityId = /^(\\w+)\\.(\\w+)$/;\nexport default (entityId: string) => validEntityId.test(entityId);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import {\n  LitElement,\n  TemplateResult,\n  property,\n  html,\n  customElement,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button-light\";\n\nimport { HomeAssistant } from \"../../types\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport isValidEntityId from \"../../common/entity/valid_entity_id\";\n\nimport \"./ha-entity-picker\";\n// Not a duplicate, type import\n// tslint:disable-next-line\nimport { HaEntityPickerEntityFilterFunc } from \"./ha-entity-picker\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\n@customElement(\"ha-entities-picker\")\nclass HaEntitiesPickerLight extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public value?: string[];\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property({ attribute: \"picked-entity-label\" })\n  public pickedEntityLabel?: string;\n  @property({ attribute: \"pick-entity-label\" }) public pickEntityLabel?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return;\n    }\n    const currentEntities = this._currentEntities;\n    return html`\n      ${currentEntities.map(\n        (entityId) => html`\n          <div>\n            <ha-entity-picker\n              allow-custom-entity\n              .curValue=${entityId}\n              .hass=${this.hass}\n              .domainFilter=${this.domainFilter}\n              .entityFilter=${this._entityFilter}\n              .value=${entityId}\n              .label=${this.pickedEntityLabel}\n              @value-changed=${this._entityChanged}\n            ></ha-entity-picker>\n          </div>\n        `\n      )}\n      <div>\n        <ha-entity-picker\n          .hass=${this.hass}\n          .domainFilter=${this.domainFilter}\n          .entityFilter=${this._entityFilter}\n          .label=${this.pickEntityLabel}\n          @value-changed=${this._addEntity}\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _entityFilter: HaEntityPickerEntityFilterFunc = (\n    stateObj: HassEntity\n  ) => !this.value || !this.value.includes(stateObj.entity_id);\n\n  private get _currentEntities() {\n    return this.value || [];\n  }\n\n  private async _updateEntities(entities) {\n    fireEvent(this, \"value-changed\", {\n      value: entities,\n    });\n\n    this.value = entities;\n  }\n\n  private _entityChanged(event: PolymerChangedEvent<string>) {\n    event.stopPropagation();\n    const curValue = (event.currentTarget as any).curValue;\n    const newValue = event.detail.value;\n    if (\n      newValue === curValue ||\n      (newValue !== \"\" && !isValidEntityId(newValue))\n    ) {\n      return;\n    }\n    if (newValue === \"\") {\n      this._updateEntities(\n        this._currentEntities.filter((ent) => ent !== curValue)\n      );\n    } else {\n      this._updateEntities(\n        this._currentEntities.map((ent) => (ent === curValue ? newValue : ent))\n      );\n    }\n  }\n\n  private async _addEntity(event: PolymerChangedEvent<string>) {\n    event.stopPropagation();\n    const toAdd = event.detail.value;\n    (event.currentTarget as any).value = \"\";\n    if (!toAdd) {\n      return;\n    }\n    const currentEntities = this._currentEntities;\n    if (currentEntities.includes(toAdd)) {\n      return;\n    }\n\n    this._updateEntities([...currentEntities, toAdd]);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entities-picker\": HaEntitiesPickerLight;\n  }\n}\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu-light\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport memoizeOne from \"memoize-one\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { User, fetchUsers } from \"../../data/user\";\nimport { compare } from \"../../common/string/compare\";\n\nclass HaEntityPicker extends LitElement {\n  public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property() public users?: User[];\n\n  private _sortedUsers = memoizeOne((users?: User[]) => {\n    if (!users || users.length === 1) {\n      return users || [];\n    }\n    const sorted = [...users];\n    sorted.sort((a, b) => compare(a.name, b.name));\n    return sorted;\n  });\n\n  protected render(): TemplateResult | void {\n    return html`\n      <paper-dropdown-menu-light .label=${this.label}>\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=${this._value}\n          attr-for-selected=\"data-user-id\"\n          @iron-select=${this._userChanged}\n        >\n          <paper-icon-item data-user-id=\"\">\n            No user\n          </paper-icon-item>\n          ${this._sortedUsers(this.users).map(\n            (user) => html`\n              <paper-icon-item data-user-id=${user.id}>\n                <ha-user-badge .user=${user} slot=\"item-icon\"></ha-user-badge>\n                ${user.name}\n              </paper-icon-item>\n            `\n          )}\n        </paper-listbox>\n      </paper-dropdown-menu-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    if (this.users === undefined) {\n      fetchUsers(this.hass!).then((users) => {\n        this.users = users;\n      });\n    }\n  }\n\n  private _userChanged(ev) {\n    const newValue = ev.detail.item.dataset.userId;\n\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: newValue });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: inline-block;\n      }\n      paper-dropdown-menu-light {\n        display: block;\n      }\n      paper-listbox {\n        min-width: 200px;\n      }\n      paper-icon-item {\n        cursor: pointer;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-user-picker\", HaEntityPicker);\n","import {\n  LitElement,\n  html,\n  css,\n  CSSResult,\n  TemplateResult,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@material/mwc-button\";\n\nimport \"../../../components/dialog/ha-paper-dialog\";\n\nimport \"../../../components/entity/ha-entities-picker\";\nimport \"../../../components/user/ha-user-picker\";\nimport { PersonDetailDialogParams } from \"./show-dialog-person-detail\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { PersonMutableParams } from \"../../../data/person\";\n\nclass DialogPersonDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _name!: string;\n  @property() private _userId?: string;\n  @property() private _deviceTrackers!: string[];\n  @property() private _error?: string;\n  @property() private _params?: PersonDetailDialogParams;\n  @property() private _submitting: boolean = false;\n\n  public async showDialog(params: PersonDetailDialogParams): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.entry) {\n      this._name = this._params.entry.name || \"\";\n      this._userId = this._params.entry.user_id || undefined;\n      this._deviceTrackers = this._params.entry.device_trackers || [];\n    } else {\n      this._name = \"\";\n      this._userId = undefined;\n      this._deviceTrackers = [];\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n    const nameInvalid = this._name.trim() === \"\";\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>${this._params.entry ? this._params.entry.name : \"New Person\"}</h2>\n        <paper-dialog-scrollable>\n          ${this._error\n            ? html`\n                <div class=\"error\">${this._error}</div>\n              `\n            : \"\"}\n          <div class=\"form\">\n            <paper-input\n              .value=${this._name}\n              @value-changed=${this._nameChanged}\n              label=\"Name\"\n              error-message=\"Name is required\"\n              .invalid=${nameInvalid}\n            ></paper-input>\n            <ha-user-picker\n              label=\"Linked User\"\n              .hass=${this.hass}\n              .value=${this._userId}\n              .users=${this._params.users}\n              @value-changed=${this._userChanged}\n            ></ha-user-picker>\n            <p>\n              ${this.hass.localize(\n                \"ui.panel.config.person.detail.device_tracker_intro\"\n              )}\n            </p>\n            <ha-entities-picker\n              .hass=${this.hass}\n              .value=${this._deviceTrackers}\n              domain-filter=\"device_tracker\"\n              .pickedEntityLabel=${this.hass.localize(\n                \"ui.panel.config.person.detail.device_tracker_picked\"\n              )}\n              .pickEntityLabel=${this.hass.localize(\n                \"ui.panel.config.person.detail.device_tracker_pick\"\n              )}\n              @value-changed=${this._deviceTrackersChanged}\n            ></ha-entities-picker>\n          </div>\n        </paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          ${this._params.entry\n            ? html`\n                <mwc-button\n                  class=\"warning\"\n                  @click=\"${this._deleteEntry}\"\n                  .disabled=${this._submitting}\n                >\n                  DELETE\n                </mwc-button>\n              `\n            : html``}\n          <mwc-button\n            @click=\"${this._updateEntry}\"\n            .disabled=${nameInvalid || this._submitting}\n          >\n            ${this._params.entry ? \"UPDATE\" : \"CREATE\"}\n          </mwc-button>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private _nameChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._name = ev.detail.value;\n  }\n\n  private _userChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._userId = ev.detail.value;\n  }\n\n  private _deviceTrackersChanged(ev: PolymerChangedEvent<string[]>) {\n    this._error = undefined;\n    this._deviceTrackers = ev.detail.value;\n  }\n\n  private async _updateEntry() {\n    this._submitting = true;\n    try {\n      const values: PersonMutableParams = {\n        name: this._name.trim(),\n        device_trackers: this._deviceTrackers,\n        user_id: this._userId || null,\n      };\n      if (this._params!.entry) {\n        await this._params!.updateEntry(values);\n      } else {\n        await this._params!.createEntry(values);\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err ? err.message : \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeEntry()) {\n        this._params = undefined;\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        ha-paper-dialog {\n          min-width: 400px;\n        }\n        .form {\n          padding-bottom: 24px;\n        }\n        ha-user-picker {\n          margin-top: 16px;\n        }\n        mwc-button.warning {\n          margin-right: auto;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-person-detail\": DialogPersonDetail;\n  }\n}\n\ncustomElements.define(\"dialog-person-detail\", DialogPersonDetail);\n"],"sourceRoot":""}