{"version":3,"sources":["webpack:///./src/external_app/external_auth.ts","webpack:///./src/external_app/external_events_forwarder.ts","webpack:///./src/external_app/external_messaging.ts"],"names":["CALLBACK_SET_TOKEN","CALLBACK_REVOKE_TOKEN","window","externalApp","webkit","Error","ExternalAuth","hassUrl","clientId","refresh_token","access_token","expires_in","expires","callbackPayload","callback","getExternalAuth","JSON","stringify","messageHandlers","postMessage","Promise","resolve","reject","success","data","tokens","Date","now","revokeExternalAuth","Auth","createExternalAuth","auth","externalBus","external","ExternalMessaging","attach","externalForwardConnectionEvents","bus","addEventListener","ev","fireMessage","type","payload","event","detail","externalForwardHaptics","hapticType","CALLBACK_EXTERNAL_BUS","msg","receiveMessage","msgId","id","commands","_sendExternal","__DEV__","console","log","pendingCmd","warn","result","error"],"mappings":"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","file":"external_auth.chunk.js","sourcesContent":["/**\n * Auth class that connects to a native app for authentication.\n */\nimport { Auth } from \"home-assistant-js-websocket\";\nimport { ExternalMessaging, InternalMessage } from \"./external_messaging\";\n\nconst CALLBACK_SET_TOKEN = \"externalAuthSetToken\";\nconst CALLBACK_REVOKE_TOKEN = \"externalAuthRevokeToken\";\n\ninterface BasePayload {\n  callback: string;\n}\n\ninterface RefreshTokenResponse {\n  access_token: string;\n  expires_in: number;\n}\n\ndeclare global {\n  interface Window {\n    externalApp?: {\n      getExternalAuth(payload: string);\n      revokeExternalAuth(payload: string);\n      externalBus(payload: string);\n    };\n    webkit?: {\n      messageHandlers: {\n        getExternalAuth: {\n          postMessage(payload: BasePayload);\n        };\n        revokeExternalAuth: {\n          postMessage(payload: BasePayload);\n        };\n        externalBus: {\n          postMessage(payload: InternalMessage);\n        };\n      };\n    };\n  }\n}\n\nif (!window.externalApp && !window.webkit) {\n  throw new Error(\n    \"External auth requires either externalApp or webkit defined on Window object.\"\n  );\n}\n\nclass ExternalAuth extends Auth {\n  public external?: ExternalMessaging;\n\n  constructor(hassUrl: string) {\n    super({\n      hassUrl,\n      clientId: \"\",\n      refresh_token: \"\",\n      access_token: \"\",\n      expires_in: 0,\n      // This will trigger connection to do a refresh right away\n      expires: 0,\n    });\n  }\n\n  public async refreshAccessToken() {\n    const callbackPayload = { callback: CALLBACK_SET_TOKEN };\n\n    if (window.externalApp) {\n      window.externalApp.getExternalAuth(JSON.stringify(callbackPayload));\n    } else {\n      window.webkit!.messageHandlers.getExternalAuth.postMessage(\n        callbackPayload\n      );\n    }\n\n    const tokens = await new Promise<RefreshTokenResponse>(\n      (resolve, reject) => {\n        window[CALLBACK_SET_TOKEN] = (success, data) =>\n          success ? resolve(data) : reject(data);\n      }\n    );\n\n    this.data.access_token = tokens.access_token;\n    this.data.expires = tokens.expires_in * 1000 + Date.now();\n  }\n\n  public async revoke() {\n    const callbackPayload = { callback: CALLBACK_REVOKE_TOKEN };\n\n    if (window.externalApp) {\n      window.externalApp.revokeExternalAuth(JSON.stringify(callbackPayload));\n    } else {\n      window.webkit!.messageHandlers.revokeExternalAuth.postMessage(\n        callbackPayload\n      );\n    }\n\n    await new Promise((resolve, reject) => {\n      window[CALLBACK_REVOKE_TOKEN] = (success, data) =>\n        success ? resolve(data) : reject(data);\n    });\n  }\n}\n\nexport const createExternalAuth = (hassUrl: string) => {\n  const auth = new ExternalAuth(hassUrl);\n  if (\n    (window.externalApp && window.externalApp.externalBus) ||\n    (window.webkit && window.webkit.messageHandlers.externalBus)\n  ) {\n    auth.external = new ExternalMessaging();\n    auth.external.attach();\n  }\n  return auth;\n};\n","import { ExternalMessaging } from \"./external_messaging\";\n\nexport const externalForwardConnectionEvents = (bus: ExternalMessaging) => {\n  window.addEventListener(\"connection-status\", (ev) =>\n    bus.fireMessage({\n      type: \"connection-status\",\n      payload: { event: ev.detail },\n    })\n  );\n};\n\nexport const externalForwardHaptics = (bus: ExternalMessaging) =>\n  window.addEventListener(\"haptic\", (ev) =>\n    bus.fireMessage({ type: \"haptic\", payload: { hapticType: ev.detail } })\n  );\n","import {\n  externalForwardConnectionEvents,\n  externalForwardHaptics,\n} from \"./external_events_forwarder\";\n\nconst CALLBACK_EXTERNAL_BUS = \"externalBus\";\n\ninterface CommandInFlight {\n  resolve: (data: any) => void;\n  reject: (err: ExternalError) => void;\n}\n\nexport interface InternalMessage {\n  id?: number;\n  type: string;\n  payload?: unknown;\n}\n\ninterface ExternalError {\n  code: string;\n  message: string;\n}\n\ninterface ExternalMessageResult {\n  id: number;\n  type: \"result\";\n  success: true;\n  result: unknown;\n}\n\ninterface ExternalMessageResultError {\n  id: number;\n  type: \"result\";\n  success: false;\n  error: ExternalError;\n}\n\ntype ExternalMessage = ExternalMessageResult | ExternalMessageResultError;\n\nexport class ExternalMessaging {\n  public commands: { [msgId: number]: CommandInFlight } = {};\n  public cache: { [key: string]: any } = {};\n  public msgId = 0;\n\n  public attach() {\n    externalForwardConnectionEvents(this);\n    externalForwardHaptics(this);\n    window[CALLBACK_EXTERNAL_BUS] = (msg) => this.receiveMessage(msg);\n  }\n\n  /**\n   * Send message to external app that expects a response.\n   * @param msg message to send\n   */\n  public sendMessage<T>(msg: InternalMessage): Promise<T> {\n    const msgId = ++this.msgId;\n    msg.id = msgId;\n\n    this.fireMessage(msg);\n\n    return new Promise<T>((resolve, reject) => {\n      this.commands[msgId] = { resolve, reject };\n    });\n  }\n\n  /**\n   * Send message to external app without expecting a response.\n   * @param msg message to send\n   */\n  public fireMessage(msg: InternalMessage) {\n    if (!msg.id) {\n      msg.id = ++this.msgId;\n    }\n    this._sendExternal(msg);\n  }\n\n  public receiveMessage(msg: ExternalMessage) {\n    if (__DEV__) {\n      // tslint:disable-next-line: no-console\n      console.log(\"Receiving message from external app\", msg);\n    }\n\n    const pendingCmd = this.commands[msg.id];\n\n    if (!pendingCmd) {\n      // tslint:disable-next-line: no-console\n      console.warn(`Received unknown msg ID`, msg.id);\n      return;\n    }\n\n    if (msg.type === \"result\") {\n      if (msg.success) {\n        pendingCmd.resolve(msg.result);\n      } else {\n        pendingCmd.reject(msg.error);\n      }\n    }\n  }\n\n  protected _sendExternal(msg: InternalMessage) {\n    if (__DEV__) {\n      // tslint:disable-next-line: no-console\n      console.log(\"Sending message to external app\", msg);\n    }\n    if (window.externalApp) {\n      window.externalApp.externalBus(JSON.stringify(msg));\n    } else {\n      window.webkit!.messageHandlers.externalBus.postMessage(msg);\n    }\n  }\n}\n"],"sourceRoot":""}