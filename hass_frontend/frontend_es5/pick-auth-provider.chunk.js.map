{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/auth/ha-pick-auth-provider.ts","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/components/ha-icon.ts"],"names":["Polymer","_template","html","is","HaPickAuthProvider","property","localize","authProviders","map","provider","_handlePick","name","ev","fireEvent","currentTarget","auth_provider","litLocalizeLiteMixin","LitElement","customElements","define","HaIconNext","icon","window","getComputedStyle","direction","HaIcon","ironIconClass","get","loaded","node","eventName","methodName","_iconsetName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;AAUA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BAA,yFAAO,CAAC;AACNC,WAAS,EAAEC,mFAAF,mBADH;AAoCNC,IAAE,EAAE;AApCE,CAAD,CAAP,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;;IASMC,kB;MAAAA,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;OAAAA,kB;;;mBACHC,4DAAQ,E;;;eAA0C,E;;;;;aAEnD,kBAAmB;AAAA;;AACjB,eAAOH,wDAAP,oBASO,KAAKI,QAAL,CAAc,4CAAd,CATP,EAUI,KAAKC,aAAL,CAAmBC,GAAnB,CACA,UAACC,QAAD;AAAA,iBAAcP,wDAAd,qBAC+BO,QAD/B,EACkD,MAAI,CAACC,WADvD,EAEuBD,QAAQ,CAACE,IAFhC;AAAA,SADA,CAVJ;AAmBD;;;;aAED,qBAAoBC,EAApB,EAAwB;AACtBC,gFAAS,CAAC,IAAD,EAAO,oBAAP,EAA6BD,EAAE,CAACE,aAAH,CAAiBC,aAA9C,CAAT;AACD;;;GA3B8BC,4FAAoB,CAACC,sDAAD,C;;AA6BrDC,cAAc,CAACC,MAAf,CAAsB,uBAAtB,EAA+Cf,kBAA/C,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CC1CA;AACA;;AACA;AAEO,IAAMgB,UAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAC6B;AACzB,WAAKC,IAAL,GACEC,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8BC,SAA9B,KAA4C,KAA5C,GACI,oBADJ,GAEI,mBAHN,CADyB,CAMzB;;AACA;AACD;AATH;;AAAA;AAAA,EAAgCC,+CAAhC;AAkBAP,cAAc,CAACC,MAAf,CAAsB,cAAtB,EAAsCC,UAAtC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CCrBA;AACA;;AAGA,IAAMM,aAAa,GAAGR,cAAc,CAACS,GAAf,CAAmB,WAAnB,CAAtB;AAIA,IAAIC,MAAM,GAAG,KAAb;AAEO,IAAMH,MAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,2BAIII,IAJJ,EAKIC,SALJ,EAMIC,UANJ,EAOU;AACN,yEAAaF,IAAb,EAAmBC,SAAnB,EAA8BC,UAA9B;;AAEA,UAAI,CAACH,MAAD,IAAW,KAAKI,YAAL,KAAsB,KAArC,EAA4C;AAC1CJ,cAAM,GAAG,IAAT;AACA;AACD;AACF;AAdH;;AAAA;AAAA,EAA4BF,aAA5B;AAuBAR,cAAc,CAACC,MAAf,CAAsB,SAAtB,EAAiCM,MAAjC,E","file":"pick-auth-provider.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","import { LitElement, html, property } from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport { litLocalizeLiteMixin } from \"../mixins/lit-localize-lite-mixin\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport \"../components/ha-icon-next\";\nimport { AuthProvider } from \"../data/auth\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"pick-auth-provider\": AuthProvider;\n  }\n}\n\nclass HaPickAuthProvider extends litLocalizeLiteMixin(LitElement) {\n  @property() public authProviders: AuthProvider[] = [];\n\n  protected render() {\n    return html`\n      <style>\n        paper-item {\n          cursor: pointer;\n        }\n        p {\n          margin-top: 0;\n        }\n      </style>\n      <p>${this.localize(\"ui.panel.page-authorize.pick_auth_provider\")}:</p>\n      ${this.authProviders.map(\n        (provider) => html`\n          <paper-item .auth_provider=${provider} @click=${this._handlePick}>\n            <paper-item-body>${provider.name}</paper-item-body>\n            <ha-icon-next></ha-icon-next>\n          </paper-item>\n        `\n      )}\n    `;\n  }\n\n  private _handlePick(ev) {\n    fireEvent(this, \"pick-auth-provider\", ev.currentTarget.auth_provider);\n  }\n}\ncustomElements.define(\"ha-pick-auth-provider\", HaPickAuthProvider);\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    this.icon =\n      window.getComputedStyle(this).direction === \"ltr\"\n        ? \"hass:chevron-right\"\n        : \"hass:chevron-left\";\n\n    // calling super after setting icon to have it consistently show the icon (otherwise not always shown)\n    super.connectedCallback();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n"],"sourceRoot":""}