{"version":3,"sources":["webpack:///./src/common/datetime/format_date_time.ts","webpack:///./src/common/datetime/format_time.ts","webpack:///./src/components/buttons/ha-call-service-button.js","webpack:///./src/data/error_log.ts","webpack:///./src/data/system_health.ts","webpack:///./src/data/system_log.ts","webpack:///./src/panels/dev-info/error-log-card.ts","webpack:///./src/panels/dev-info/ha-panel-dev-info.ts","webpack:///./src/panels/dev-info/show-dialog-system-log-detail.ts","webpack:///./src/panels/dev-info/system-health-card.ts","webpack:///./src/panels/dev-info/system-log-card.ts"],"names":["toLocaleStringSupportsOptions","Date","toLocaleString","e","name","dateObj","locales","year","month","day","hour","minute","fecha","format","toLocaleTimeStringSupportsOptions","toLocaleTimeString","HaCallServiceButton","progress","el","eventData","domain","service","serviceData","hass","callService","then","$","actionSuccess","success","actionError","fire","html","type","Object","Boolean","value","String","EventsMixin","PolymerElement","customElements","define","fetchErrorLog","callApi","fetchSystemHealthInfo","callWS","fetchSystemLog","ErrorLogCard","_errorLog","_refreshErrorLog","log","css","LitElement","JS_VERSION","__BUILD__","OPT_IN_PANEL","HaPanelDevInfo","customUiList","window","CUSTOM_UI_LIST","nonDefaultLink","localStorage","defaultPage","nonDefaultLinkText","defaultPageText","config","version","config_dir","length","map","item","url","_toggleDefaultPage","changedProps","customUI","setTimeout","requestUpdate","haStyle","registeredDialog","dialogShowEvent","dialogTag","registerDialog","element","fireEvent","dialogImport","showSystemLogDetailDialog","systemLogDetailParams","sortKeys","a","b","SystemHealthCard","sections","_info","push","domains","keys","sort","key","localize","_fetchInfo","components","includes","Error","system_health","error","formatLogTime","date","language","today","setHours","dateTime","dateTimeDay","formatDateTime","formatTime","SystemLogCard","_items","undefined","_openLog","message","timestamp","source","level","count","first_occured","_fetchData","addEventListener","ev","serviceCalled","detail","currentTarget","logItem"],"mappings":"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","file":"panel-dev-info.chunk.js","sourcesContent":["import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport default (toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\"));\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleTimeStringSupportsOptions() {\n  try {\n    new Date().toLocaleTimeString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport default (toLocaleTimeStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleTimeString(locales, {\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"shortTime\"));\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-progress-button\";\nimport { EventsMixin } from \"../../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaCallServiceButton extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <ha-progress-button\n        id=\"progress\"\n        progress=\"[[progress]]\"\n        on-click=\"buttonTapped\"\n        ><slot></slot\n      ></ha-progress-button>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      domain: {\n        type: String,\n      },\n\n      service: {\n        type: String,\n      },\n\n      serviceData: {\n        type: Object,\n        value: {},\n      },\n    };\n  }\n\n  buttonTapped() {\n    this.progress = true;\n    var el = this;\n    var eventData = {\n      domain: this.domain,\n      service: this.service,\n      serviceData: this.serviceData,\n    };\n\n    this.hass\n      .callService(this.domain, this.service, this.serviceData)\n      .then(\n        function() {\n          el.progress = false;\n          el.$.progress.actionSuccess();\n          eventData.success = true;\n        },\n        function() {\n          el.progress = false;\n          el.$.progress.actionError();\n          eventData.success = false;\n        }\n      )\n      .then(function() {\n        el.fire(\"hass-service-called\", eventData);\n      });\n  }\n}\n\ncustomElements.define(\"ha-call-service-button\", HaCallServiceButton);\n","import { HomeAssistant } from \"../types\";\n\nexport const fetchErrorLog = (hass: HomeAssistant) =>\n  hass.callApi<string>(\"GET\", \"error_log\");\n","import { HomeAssistant } from \"../types\";\n\nexport interface HomeAssistantSystemHealthInfo {\n  version: string;\n  dev: boolean;\n  hassio: boolean;\n  virtualenv: string;\n  python_version: string;\n  docker: boolean;\n  arch: string;\n  timezone: string;\n  os_name: string;\n}\n\nexport interface SystemHealthInfo {\n  [domain: string]: { [key: string]: string | number | boolean };\n}\n\nexport const fetchSystemHealthInfo = (\n  hass: HomeAssistant\n): Promise<SystemHealthInfo> =>\n  hass.callWS({\n    type: \"system_health/info\",\n  });\n","import { HomeAssistant } from \"../types\";\n\nexport interface LoggedError {\n  message: string;\n  level: string;\n  source: string;\n  // unix timestamp in seconds\n  timestamp: number;\n  exception: string;\n  count: number;\n  // unix timestamp in seconds\n  first_occured: number;\n}\n\nexport const fetchSystemLog = (hass: HomeAssistant) =>\n  hass.callApi<LoggedError[]>(\"GET\", \"error/all\");\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  PropertyDeclarations,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../types\";\nimport { fetchErrorLog } from \"../../data/error_log\";\n\nclass ErrorLogCard extends LitElement {\n  public hass?: HomeAssistant;\n  private _errorLog?: string;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      _errorLog: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <p class=\"error-log-intro\">\n        ${this._errorLog\n          ? html`\n              <paper-icon-button\n                icon=\"hass:refresh\"\n                @click=${this._refreshErrorLog}\n              ></paper-icon-button>\n            `\n          : html`\n              <mwc-button raised @click=${this._refreshErrorLog}>\n                Load Full Home Assistant Log\n              </mwc-button>\n            `}\n      </p>\n      <div class=\"error-log\">${this._errorLog}</div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .error-log-intro {\n        text-align: center;\n        margin: 16px;\n      }\n\n      paper-icon-button {\n        float: right;\n      }\n\n      .error-log {\n        @apply --paper-font-code)\n          clear: both;\n        white-space: pre-wrap;\n        margin: 16px;\n      }\n    `;\n  }\n\n  private async _refreshErrorLog(): Promise<void> {\n    this._errorLog = \"Loading error log…\";\n    const log = await fetchErrorLog(this.hass!);\n    this._errorLog = log || \"No errors have been reported.\";\n  }\n}\n\ncustomElements.define(\"error-log-card\", ErrorLogCard);\n","import {\n  LitElement,\n  html,\n  PropertyDeclarations,\n  CSSResult,\n  css,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"../../components/ha-menu-button\";\n\nimport { HomeAssistant } from \"../../types\";\nimport { haStyle } from \"../../resources/styles\";\n\nimport \"./system-log-card\";\nimport \"./error-log-card\";\nimport \"./system-health-card\";\n\nconst JS_VERSION = __BUILD__;\nconst OPT_IN_PANEL = \"states\";\n\nclass HaPanelDevInfo extends LitElement {\n  public hass?: HomeAssistant;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    const hass = this.hass;\n    if (!hass) {\n      return html``;\n    }\n    const customUiList: Array<{ name: string; url: string; version: string }> =\n      (window as any).CUSTOM_UI_LIST || [];\n\n    const nonDefaultLink =\n      localStorage.defaultPage === OPT_IN_PANEL && OPT_IN_PANEL === \"states\"\n        ? \"/lovelace\"\n        : \"/states\";\n\n    const nonDefaultLinkText =\n      localStorage.defaultPage === OPT_IN_PANEL && OPT_IN_PANEL === \"states\"\n        ? \"Go to the Lovelace UI\"\n        : \"Go to the states UI\";\n\n    const defaultPageText = `${\n      localStorage.defaultPage === OPT_IN_PANEL ? \"Remove\" : \"Set\"\n    } ${OPT_IN_PANEL} as default page on this device`;\n\n    return html`\n      <app-header-layout has-scrolling-region>\n        <app-header slot=\"header\" fixed>\n          <app-toolbar>\n            <ha-menu-button></ha-menu-button>\n            <div main-title>About</div>\n          </app-toolbar>\n        </app-header>\n\n        <div class=\"content\">\n          <div class=\"about\">\n            <p class=\"version\">\n              <a href=\"https://www.home-assistant.io\" target=\"_blank\"\n                ><img src=\"/static/icons/favicon-192x192.png\" height=\"192\"/></a\n              ><br />\n              Home Assistant<br />\n              ${hass.config.version}\n            </p>\n            <p>\n              Path to configuration.yaml: ${hass.config.config_dir}\n            </p>\n            <p class=\"develop\">\n              <a\n                href=\"https://www.home-assistant.io/developers/credits/\"\n                target=\"_blank\"\n              >\n                Developed by a bunch of awesome people.\n              </a>\n            </p>\n            <p>\n              Published under the Apache 2.0 license<br />\n              Source:\n              <a\n                href=\"https://github.com/home-assistant/home-assistant\"\n                target=\"_blank\"\n                >server</a\n              >\n              &mdash;\n              <a\n                href=\"https://github.com/home-assistant/home-assistant-polymer\"\n                target=\"_blank\"\n                >frontend-ui</a\n              >\n            </p>\n            <p>\n              Built using\n              <a href=\"https://www.python.org\">Python 3</a>,\n              <a href=\"https://www.polymer-project.org\" target=\"_blank\"\n                >Polymer</a\n              >, Icons by\n              <a href=\"https://www.google.com/design/icons/\" target=\"_blank\"\n                >Google</a\n              >\n              and\n              <a href=\"https://MaterialDesignIcons.com\" target=\"_blank\"\n                >MaterialDesignIcons.com</a\n              >.\n            </p>\n            <p>\n              Frontend JavaScript version: ${JS_VERSION}\n              ${customUiList.length > 0\n                ? html`\n                    <div>\n                      Custom UIs:\n                      ${customUiList.map(\n                        (item) => html`\n                          <div>\n                            <a href=\"${item.url}\" target=\"_blank\">\n                              ${item.name}</a\n                            >: ${item.version}\n                          </div>\n                        `\n                      )}\n                    </div>\n                  `\n                : \"\"}\n            </p>\n            <p>\n              <a href=\"${nonDefaultLink}\">${nonDefaultLinkText}</a><br />\n              <mwc-button @click=\"${this._toggleDefaultPage}\" raised>\n                ${defaultPageText}\n              </mwc-button>\n            </p>\n          </div>\n          <system-health-card .hass=${this.hass}></system-health-card>\n          <system-log-card .hass=${this.hass}></system-log-card>\n          <error-log-card .hass=${this.hass}></error-log-card>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n\n    // Legacy custom UI can be slow to register, give them time.\n    const customUI = ((window as any).CUSTOM_UI_LIST || []).length;\n    setTimeout(() => {\n      if (((window as any).CUSTOM_UI_LIST || []).length !== customUI.length) {\n        this.requestUpdate();\n      }\n    }, 1000);\n  }\n\n  protected _toggleDefaultPage(): void {\n    if (localStorage.defaultPage === OPT_IN_PANEL) {\n      delete localStorage.defaultPage;\n    } else {\n      localStorage.defaultPage = OPT_IN_PANEL;\n    }\n    this.requestUpdate();\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .content {\n          padding: 16px 0px 16px 0;\n          direction: ltr;\n        }\n\n        .about {\n          text-align: center;\n          line-height: 2em;\n        }\n\n        .version {\n          @apply --paper-font-headline;\n        }\n\n        .develop {\n          @apply --paper-font-subhead;\n        }\n\n        .about a {\n          color: var(--dark-primary-color);\n        }\n\n        system-health-card {\n          display: block;\n          max-width: 600px;\n          margin: 0 auto;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-dev-info\": HaPanelDevInfo;\n  }\n}\n\ncustomElements.define(\"ha-panel-dev-info\", HaPanelDevInfo);\n","import { fireEvent } from \"../../common/dom/fire_event\";\nimport { LoggedError } from \"../../data/system_log\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"show-dialog-system-log-detail\": SystemLogDetailDialogParams;\n  }\n}\n\nlet registeredDialog = false;\nconst dialogShowEvent = \"show-dialog-system-log-detail\";\nconst dialogTag = \"dialog-system-log-detail\";\n\nexport interface SystemLogDetailDialogParams {\n  item: LoggedError;\n}\n\nconst registerDialog = (element: HTMLElement) =>\n  fireEvent(element, \"register-dialog\", {\n    dialogShowEvent,\n    dialogTag,\n    dialogImport: () =>\n      import(/* webpackChunkName: \"system-log-detail-dialog\" */ \"./dialog-system-log-detail\"),\n  });\n\nexport const showSystemLogDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: SystemLogDetailDialogParams\n): void => {\n  if (!registeredDialog) {\n    registeredDialog = true;\n    registerDialog(element);\n  }\n  fireEvent(element, dialogShowEvent, systemLogDetailParams);\n};\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  PropertyDeclarations,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../components/ha-card\";\n\nimport { HomeAssistant } from \"../../types\";\nimport {\n  SystemHealthInfo,\n  fetchSystemHealthInfo,\n} from \"../../data/system_health\";\n\nconst sortKeys = (a: string, b: string) => {\n  if (a === \"homeassistant\") {\n    return -1;\n  }\n  if (b === \"homeassistant\") {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  if (b < a) {\n    return 1;\n  }\n  return 0;\n};\n\nclass SystemHealthCard extends LitElement {\n  public hass?: HomeAssistant;\n  private _info?: SystemHealthInfo;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      _info: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return;\n    }\n    const sections: TemplateResult[] = [];\n\n    if (!this._info) {\n      sections.push(\n        html`\n          <div class=\"loading-container\">\n            <paper-spinner active></paper-spinner>\n          </div>\n        `\n      );\n    } else {\n      const domains = Object.keys(this._info).sort(sortKeys);\n      for (const domain of domains) {\n        const keys: TemplateResult[] = [];\n\n        for (const key of Object.keys(this._info[domain]).sort()) {\n          keys.push(html`\n            <tr>\n              <td>${key}</td>\n              <td>${this._info[domain][key]}</td>\n            </tr>\n          `);\n        }\n        if (domain !== \"homeassistant\") {\n          sections.push(\n            html`\n              <h3>${this.hass.localize(`domain.${domain}`) || domain}</h3>\n            `\n          );\n        }\n        sections.push(html`\n          <table>\n            ${keys}\n          </table>\n        `);\n      }\n    }\n\n    return html`\n      <ha-card header=\"System Health\">\n        <div class=\"card-content\">${sections}</div>\n      </ha-card>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchInfo();\n  }\n\n  private async _fetchInfo() {\n    try {\n      if (!this.hass!.config.components.includes(\"system_health\")) {\n        throw new Error();\n      }\n      this._info = await fetchSystemHealthInfo(this.hass!);\n    } catch (err) {\n      this._info = {\n        system_health: {\n          error:\n            \"System Health component is not loaded. Add 'system_health:' to configuration.yaml\",\n        },\n      };\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      table {\n        width: 100%;\n      }\n\n      td:first-child {\n        width: 33%;\n      }\n\n      .loading-container {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"system-health-card\", SystemHealthCard);\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  PropertyDeclarations,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../components/ha-card\";\nimport \"../../components/buttons/ha-call-service-button\";\nimport \"../../components/buttons/ha-progress-button\";\nimport { HomeAssistant } from \"../../types\";\nimport { LoggedError, fetchSystemLog } from \"../../data/system_log\";\nimport formatDateTime from \"../../common/datetime/format_date_time\";\nimport formatTime from \"../../common/datetime/format_time\";\nimport { showSystemLogDetailDialog } from \"./show-dialog-system-log-detail\";\n\nconst formatLogTime = (date, language: string) => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const dateTime = new Date(date * 1000);\n  const dateTimeDay = new Date(date * 1000).setHours(0, 0, 0, 0);\n\n  return dateTimeDay < today\n    ? formatDateTime(dateTime, language)\n    : formatTime(dateTime, language);\n};\n\nclass SystemLogCard extends LitElement {\n  public hass?: HomeAssistant;\n  private _items?: LoggedError[];\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      _items: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div class=\"system-log-intro\">\n        <ha-card>\n          ${this._items === undefined\n            ? html`\n                <div class=\"loading-container\">\n                  <paper-spinner active></paper-spinner>\n                </div>\n              `\n            : html`\n                ${this._items.length === 0\n                  ? html`\n                      <div class=\"card-content\">There are no new issues!</div>\n                    `\n                  : this._items.map(\n                      (item) => html`\n                        <paper-item @click=${this._openLog} .logItem=${item}>\n                          <paper-item-body two-line>\n                            <div class=\"row\">\n                              ${item.message}\n                            </div>\n                            <div secondary>\n                              ${formatLogTime(\n                                item.timestamp,\n                                this.hass!.language\n                              )}\n                              ${item.source} (${item.level})\n                              ${item.count > 1\n                                ? html`\n                                    - message first occured at\n                                    ${formatLogTime(\n                                      item.first_occured,\n                                      this.hass!.language\n                                    )}\n                                    and shows up ${item.count} times\n                                  `\n                                : html``}\n                            </div>\n                          </paper-item-body>\n                        </paper-item>\n                      `\n                    )}\n\n                <div class=\"card-actions\">\n                  <ha-call-service-button\n                    .hass=${this.hass}\n                    domain=\"system_log\"\n                    service=\"clear\"\n                    >Clear</ha-call-service-button\n                  >\n                  <ha-progress-button @click=${this._fetchData}\n                    >Refresh</ha-progress-button\n                  >\n                </div>\n              `}\n        </ha-card>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n    this.addEventListener(\"hass-service-called\", (ev) =>\n      this.serviceCalled(ev)\n    );\n  }\n\n  protected serviceCalled(ev): void {\n    // Check if this is for us\n    if (ev.detail.success && ev.detail.domain === \"system_log\") {\n      // Do the right thing depending on service\n      if (ev.detail.service === \"clear\") {\n        this._items = [];\n      }\n    }\n  }\n\n  private async _fetchData(): Promise<void> {\n    this._items = undefined;\n    this._items = await fetchSystemLog(this.hass!);\n  }\n\n  private _openLog(ev: Event): void {\n    const item = (ev.currentTarget as any).logItem;\n    showSystemLogDetailDialog(this, { item });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        padding-top: 16px;\n      }\n\n      paper-item {\n        cursor: pointer;\n      }\n\n      .system-log-intro {\n        margin: 16px;\n        border-top: 1px solid var(--light-primary-color);\n        padding-top: 16px;\n      }\n\n      .loading-container {\n        height: 100px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"system-log-card\", SystemLogCard);\n"],"sourceRoot":""}