{"version":3,"sources":["webpack:///./src/common/entity/binary_sensor_icon.ts","webpack:///./src/common/entity/compute_domain.ts","webpack:///./src/common/entity/cover_icon.ts","webpack:///./src/common/entity/domain_icon.ts","webpack:///./src/common/entity/input_dateteime_icon.ts","webpack:///./src/common/entity/sensor_icon.ts","webpack:///./src/common/entity/state_icon.ts","webpack:///./src/components/ha-icon.ts"],"names":["binarySensorIcon","state","activated","attributes","device_class","computeDomain","entityId","substr","indexOf","coverIcon","open","domainIcon","fixedIcons","alert","automation","calendar","camera","climate","configurator","conversation","device_tracker","fan","group","history_graph","homeassistant","homekit","image_processing","input_boolean","input_datetime","input_number","input_select","input_text","light","mailbox","notify","person","plant","proximity","remote","scene","script","sensor","simple_alarm","sun","timer","updater","vacuum","water_heater","weblink","domain","console","warn","DEFAULT_DOMAIN_ICON","inputDateTimeIcon","has_date","has_time","fixedDeviceClassIcons","humidity","illuminance","temperature","pressure","power","signal_strength","sensorIcon","dclass","battery","Number","isNaN","batteryRound","Math","round","unit","unit_of_measurement","UNIT_C","UNIT_F","domainIcons","binary_sensor","cover","stateIcon","icon","entity_id","ironIconClass","customElements","get","loaded","HaIcon","node","eventName","methodName","_iconsetName","define"],"mappings":"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","file":"more-info-dialog~panel-config-automation~panel-config-cloud~panel-config-entity-registry~panel-confi~13c426ad.chunk.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport default function binarySensorIcon(state: HassEntity) {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n}\n","export default function computeDomain(entityId: string): string {\n  return entityId.substr(0, entityId.indexOf(\".\"));\n}\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport domainIcon from \"./domain_icon\";\n\nexport default function coverIcon(state: HassEntity): string {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n}\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nconst fixedIcons = {\n  alert: \"hass:alert\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weblink: \"hass:open-in-new\",\n};\n\nexport default function domainIcon(domain: string, state?: string): string {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n}\n","/** Return an icon representing an input datetime state. */\nimport domainIcon from \"./domain_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport default function inputDateTimeIcon(state: HassEntity): string {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n}\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"../const\";\nimport domainIcon from \"./domain_icon\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport default function sensorIcon(state: HassEntity) {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n}\n","/** Return an icon representing a state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nimport computeDomain from \"./compute_domain\";\nimport domainIcon from \"./domain_icon\";\n\nimport binarySensorIcon from \"./binary_sensor_icon\";\nimport coverIcon from \"./cover_icon\";\nimport sensorIcon from \"./sensor_icon\";\nimport inputDateTimeIcon from \"./input_dateteime_icon\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport default function stateIcon(state: HassEntity) {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n}\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n"],"sourceRoot":""}