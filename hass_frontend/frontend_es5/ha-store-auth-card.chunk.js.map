{"version":3,"sources":["webpack:///./src/dialogs/ha-store-auth-card.js","webpack:///./src/mixins/localize-mixin.js"],"names":["HaStoreAuth","classList","toggle","window","innerWidth","enableWrite","_done","card","shadowRoot","querySelector","style","transition","bottom","offsetHeight","setTimeout","parentNode","removeChild","html","hass","Object","LocalizeMixin","PolymerElement","customElements","define","dedupingMixin","superClass","localize","type","Function","computed"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;;IAEMA,W;;;;;;;;;;;;;4BA+CI;AACN;;AACA,WAAKC,SAAL,CAAeC,MAAf,CAAsB,OAAtB,EAA+BC,MAAM,CAACC,UAAP,GAAoB,GAAnD;AACD;;;4BAEO;AACNC,oFAAW;;AACX,WAAKC,KAAL;AACD;;;4BAEO;AAAA;;AACN,UAAMC,IAAI,GAAG,KAAKC,UAAL,CAAgBC,aAAhB,CAA8B,YAA9B,CAAb;AACAF,UAAI,CAACG,KAAL,CAAWC,UAAX,GAAwB,aAAxB;AACAJ,UAAI,CAACG,KAAL,CAAWE,MAAX,cAAwBL,IAAI,CAACM,YAAL,GAAoB,CAA5C;AACAC,gBAAU,CAAC;AAAA,eAAM,KAAI,CAACC,UAAL,CAAgBC,WAAhB,CAA4B,KAA5B,CAAN;AAAA,OAAD,EAA0C,GAA1C,CAAV;AACD;;;wBA7DqB;AACpB,aAAOC,gFAAP;AAqCD;;;wBAEuB;AACtB,aAAO;AACLC,YAAI,EAAEC;AADD,OAAP;AAGD;;;;EA7CuBC,sEAAa,CAACC,+EAAD,C;;AAiEvCC,cAAc,CAACC,MAAf,CAAsB,oBAAtB,EAA4CvB,WAA5C,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;;;;;;AAKewB,qJAAa,CAC1B,UAACC,UAAD;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAkBsBC,QAlBtB,EAkBgC;AAC1B,iBAAOA,QAAP;AACD;AApBL;AAAA;AAAA,4BAE4B;AACtB,iBAAO;AACLR,gBAAI,EAAEC,MADD;;AAGL;;;;;AAKAO,oBAAQ,EAAE;AACRC,kBAAI,EAAEC,QADE;AAERC,sBAAQ,EAAE;AAFF;AARL,WAAP;AAaD;AAhBL;;AAAA;AAAA,MACgBJ,UADhB;AAAA;AAAA,CAD0B,CAA5B,E","file":"ha-store-auth-card.chunk.js","sourcesContent":["import \"@polymer/paper-card/paper-card\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport { enableWrite } from \"../common/auth/token_storage\";\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\nimport \"../resources/ha-style\";\n\nclass HaStoreAuth extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        paper-card {\n          position: fixed;\n          padding: 8px 0;\n          bottom: 16px;\n          right: 16px;\n        }\n\n        .card-content {\n          color: var(--primary-text-color);\n        }\n\n        .card-actions {\n          text-align: right;\n          border-top: 0;\n          margin-right: -4px;\n        }\n\n        :host(.small) paper-card {\n          bottom: 0;\n          left: 0;\n          right: 0;\n        }\n      </style>\n      <paper-card elevation=\"4\">\n        <div class=\"card-content\">[[localize('ui.auth_store.ask')]]</div>\n        <div class=\"card-actions\">\n          <mwc-button on-click=\"_done\"\n            >[[localize('ui.auth_store.decline')]]</mwc-button\n          >\n          <mwc-button raised on-click=\"_save\"\n            >[[localize('ui.auth_store.confirm')]]</mwc-button\n          >\n        </div>\n      </paper-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.classList.toggle(\"small\", window.innerWidth < 600);\n  }\n\n  _save() {\n    enableWrite();\n    this._done();\n  }\n\n  _done() {\n    const card = this.shadowRoot.querySelector(\"paper-card\");\n    card.style.transition = \"bottom .25s\";\n    card.style.bottom = `-${card.offsetHeight + 8}px`;\n    setTimeout(() => this.parentNode.removeChild(this), 300);\n  }\n}\n\ncustomElements.define(\"ha-store-auth-card\", HaStoreAuth);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n"],"sourceRoot":""}