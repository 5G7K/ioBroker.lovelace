{"version":3,"sources":["webpack:///./src/common/config/is_component_loaded.ts","webpack:///./src/common/dom/media_query.ts","webpack:///./src/data/cloud.ts","webpack:///./src/panels/config/ha-panel-config.ts"],"names":["isComponentLoaded","hass","component","config","components","indexOf","listenMediaQuery","mediaQuery","matchesChanged","mql","matchMedia","listener","e","matches","addListener","removeListener","fetchCloudStatus","callWS","type","createCloudhook","webhookId","webhook_id","deleteCloudhook","connectCloudRemote","disconnectCloudRemote","fetchCloudSubscriptionInfo","updateCloudPref","prefs","fetchCloudGoogleEntities","updateCloudGoogleEntityConfig","entityId","values","entity_id","cloudSyncGoogleAssistant","callApi","HaPanelConfig","customElement","property","defaultPage","cacheAll","preloadAll","routes","area_registry","tag","load","automation","cloud","core","customize","dashboard","entity_registry","integrations","person","script","users","zha","zwave","_listeners","push","_wide","_wideSidebar","length","pop","changedProps","_updateCloudStatus","addEventListener","el","route","routeTail","isWide","dockedSidebar","narrow","cloudStatus","_cloudStatus","setTimeout","HassRouterPage"],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AACe,SAASA,iBAAT,CACbC,IADa,EAEbC,SAFa,EAGJ;AACT,SAAOD,IAAI,IAAIA,IAAI,CAACE,MAAL,CAAYC,UAAZ,CAAuBC,OAAvB,CAA+BH,SAA/B,MAA8C,CAAC,CAA9D;AACD,C;;;;;;;;;;;;ACRD;AAAA;AAAA;;;;;;AAMO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC9BC,UAD8B,EAE9BC,cAF8B,EAG3B;AACH,MAAMC,GAAG,GAAGC,UAAU,CAACH,UAAD,CAAtB;;AACA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD;AAAA,WAAOJ,cAAc,CAACI,CAAC,CAACC,OAAH,CAArB;AAAA,GAAjB;;AACAJ,KAAG,CAACK,WAAJ,CAAgBH,QAAhB;AACAH,gBAAc,CAACC,GAAG,CAACI,OAAL,CAAd;AACA,SAAO;AAAA,WAAMJ,GAAG,CAACM,cAAJ,CAAmBJ,QAAnB,CAAN;AAAA,GAAP;AACD,CATM,C;;;;;;;;;;;;ACyDP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACf,IAAD;AAAA,SAC9BA,IAAI,CAACgB,MAAL,CAAyB;AAAEC,QAAI,EAAE;AAAR,GAAzB,CAD8B;AAAA,CAAzB;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAClB,IAAD,EAAsBmB,SAAtB;AAAA,SAC7BnB,IAAI,CAACgB,MAAL,CAA0B;AACxBC,QAAI,EAAE,wBADkB;AAExBG,cAAU,EAAED;AAFY,GAA1B,CAD6B;AAAA,CAAxB;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACrB,IAAD,EAAsBmB,SAAtB;AAAA,SAC7BnB,IAAI,CAACgB,MAAL,CAAY;AACVC,QAAI,EAAE,wBADI;AAEVG,cAAU,EAAED;AAFF,GAAZ,CAD6B;AAAA,CAAxB;AAMA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACtB,IAAD;AAAA,SAChCA,IAAI,CAACgB,MAAL,CAAY;AACVC,QAAI,EAAE;AADI,GAAZ,CADgC;AAAA,CAA3B;AAKA,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACvB,IAAD;AAAA,SACnCA,IAAI,CAACgB,MAAL,CAAY;AACVC,QAAI,EAAE;AADI,GAAZ,CADmC;AAAA,CAA9B;AAKA,IAAMO,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACxB,IAAD;AAAA,SACxCA,IAAI,CAACgB,MAAL,CAA8B;AAAEC,QAAI,EAAE;AAAR,GAA9B,CADwC;AAAA,CAAnC;AAGA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAC7BzB,IAD6B,EAE7B0B,KAF6B;AAAA,SAQ7B1B,IAAI,CAACgB,MAAL;AACEC,QAAI,EAAE;AADR,KAEKS,KAFL,EAR6B;AAAA,CAAxB;AAaA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC3B,IAAD;AAAA,SACtCA,IAAI,CAACgB,MAAL,CAA4B;AAAEC,QAAI,EAAE;AAAR,GAA5B,CADsC;AAAA,CAAjC;AAGA,IAAMW,6BAA6B,GAAG,SAAhCA,6BAAgC,CAC3C5B,IAD2C,EAE3C6B,QAF2C,EAG3CC,MAH2C;AAAA,SAK3C9B,IAAI,CAACgB,MAAL;AACEC,QAAI,EAAE,wCADR;AAEEc,aAAS,EAAEF;AAFb,KAGKC,MAHL,EAL2C;AAAA,CAAtC;AAWA,IAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAChC,IAAD;AAAA,SACtCA,IAAI,CAACiC,OAAL,CAAa,MAAb,EAAqB,2BAArB,CADsC;AAAA,CAAjC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtHP;AACA;AACA;AAEA;AACA;AACA;;IAUMC,a,cADLC,iEAAa,CAAC,iBAAD,C;MACRD,a;;;;;;;;;;;;;;;;;;;;;;;;;;;OAAAA,a;;;mBACHE,4DAAQ,E;;;;;mBACRA,4DAAQ,E;;;;;mBACRA,4DAAQ,E;;;eAAkC,K;;;;mBAC1CA,4DAAQ,E;;;eAA2B,K;;;;;;eAEK;AACvCC,qBAAW,EAAE,WAD0B;AAEvCC,kBAAQ,EAAE,IAF6B;AAGvCC,oBAAU,EAAE,IAH2B;AAIvCC,gBAAM,EAAE;AACNC,yBAAa,EAAE;AACbC,iBAAG,EAAE,yBADQ;AAEbC,kBAAI,EAAE;AAAA,uBACJ,+kBADI;AAAA;AAFO,aADT;AAMNC,sBAAU,EAAE;AACVF,iBAAG,EAAE,sBADK;AAEVC,kBAAI,EAAE;AAAA,uBACJ,i1GADI;AAAA;AAFI,aANN;AAWNE,iBAAK,EAAE;AACLH,iBAAG,EAAE,iBADA;AAELC,kBAAI,EAAE;AAAA,uBACJ,s3CADI;AAAA;AAFD,aAXD;AAgBNG,gBAAI,EAAE;AACJJ,iBAAG,EAAE,gBADD;AAEJC,kBAAI,EAAE;AAAA,uBACJ,iwCADI;AAAA;AAFF,aAhBA;AAqBNI,qBAAS,EAAE;AACTL,iBAAG,EAAE,qBADI;AAETC,kBAAI,EAAE;AAAA,uBACJ,8/CADI;AAAA;AAFG,aArBL;AA0BNK,qBAAS,EAAE;AACTN,iBAAG,EAAE,qBADI;AAETC,kBAAI,EAAE;AAAA,uBACJ,mjBADI;AAAA;AAFG,aA1BL;AA+BNM,2BAAe,EAAE;AACfP,iBAAG,EAAE,2BADU;AAEfC,kBAAI,EAAE;AAAA,uBACJ,8hBADI;AAAA;AAFS,aA/BX;AAoCNO,wBAAY,EAAE;AACZR,iBAAG,EAAE,wBADO;AAEZC,kBAAI,EAAE;AAAA,uBACJ,67DADI;AAAA;AAFM,aApCR;AAyCNQ,kBAAM,EAAE;AACNT,iBAAG,EAAE,kBADC;AAENC,kBAAI,EAAE;AAAA,uBACJ,ijBADI;AAAA;AAFA,aAzCF;AA8CNS,kBAAM,EAAE;AACNV,iBAAG,EAAE,kBADC;AAENC,kBAAI,EAAE;AAAA,uBACJ,07FADI;AAAA;AAFA,aA9CF;AAmDNU,iBAAK,EAAE;AACLX,iBAAG,EAAE,iBADA;AAELC,kBAAI,EAAE;AAAA,uBACJ,mrBADI;AAAA;AAFD,aAnDD;AAwDNW,eAAG,EAAE;AACHZ,iBAAG,EAAE,kBADF;AAEHC,kBAAI,EAAE;AAAA,uBACJ,8LADI;AAAA;AAFH,aAxDC;AA6DNY,iBAAK,EAAE;AACLb,iBAAG,EAAE,iBADA;AAELC,kBAAI,EAAE;AAAA,uBACJ,svDADI;AAAA;AAFD;AA7DD;AAJ+B,S;;;;mBAyExCP,4DAAQ,E;;;;;;;eAE+B,E;;;;;aAExC,6BAA2B;AAAA;;AACzB,6BApFEF,aAoFF;;AACA,aAAKsB,UAAL,CAAgBC,IAAhB,CACEpD,gFAAgB,CAAC,qBAAD,EAAwB,UAACO,OAAD,EAAa;AACnD,gBAAI,CAAC8C,KAAL,GAAa9C,OAAb;AACD,SAFe,CADlB;;AAKA,aAAK4C,UAAL,CAAgBC,IAAhB,CACEpD,gFAAgB,CAAC,qBAAD,EAAwB,UAACO,OAAD,EAAa;AACnD,gBAAI,CAAC+C,YAAL,GAAoB/C,OAApB;AACD,SAFe,CADlB;AAKD;;;;aAED,gCAA8B;AAC5B,6BAlGEsB,aAkGF;;AACA,eAAO,KAAKsB,UAAL,CAAgBI,MAAvB,EAA+B;AAC7B,eAAKJ,UAAL,CAAgBK,GAAhB;AACD;AACF;;;;aAED,sBAAuBC,YAAvB,EAAqD;AAAA;;AACnD,6BAzGE5B,aAyGF,8CAAmB4B,YAAnB;;AACA,YAAI/D,kFAAiB,CAAC,KAAKC,IAAN,EAAY,OAAZ,CAArB,EAA2C;AACzC,eAAK+D,kBAAL;AACD;;AACD,aAAKC,gBAAL,CAAsB,yBAAtB,EAAiD;AAAA,iBAC/C,MAAI,CAACD,kBAAL,EAD+C;AAAA,SAAjD;AAGD;;;;aAED,sBAAuBE,EAAvB,EAA2B;AACzBA,UAAE,CAACC,KAAH,GAAW,KAAKC,SAAhB;AACAF,UAAE,CAACjE,IAAH,GAAU,KAAKA,IAAf;AACAiE,UAAE,CAACG,MAAH,GAAY,KAAKpE,IAAL,CAAUqE,aAAV,GAA0B,KAAKV,YAA/B,GAA8C,KAAKD,KAA/D;AACAO,UAAE,CAACK,MAAH,GAAY,KAAKA,MAAjB;AACAL,UAAE,CAACM,WAAH,GAAiB,KAAKC,YAAtB;AACD;;;;;;;gCAED;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAC4BzD,oEAAgB,CAAC,KAAKf,IAAN,CAD5C;;AAAA;AACE,uBAAKwE,YADP;;AAGE,sBAAI,KAAKA,YAAL,CAAkB3B,KAAlB,KAA4B,YAAhC,EAA8C;AAC5C4B,8BAAU,CAAC;AAAA,6BAAM,MAAI,CAACV,kBAAL,EAAN;AAAA,qBAAD,EAAkC,IAAlC,CAAV;AACD;;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;;;;;;;;;;GA1H0BW,wE","file":"panel-config.chunk.js","sourcesContent":["import { HomeAssistant } from \"../../types\";\n\n/** Return if a component is loaded. */\nexport default function isComponentLoaded(\n  hass: HomeAssistant,\n  component: string\n): boolean {\n  return hass && hass.config.components.indexOf(component) !== -1;\n}\n","/**\n * Attach a media query. Listener is called right away and when it matches.\n * @param mediaQuery media query to match.\n * @param listener listener to call when media query changes between match/unmatch\n * @returns function to remove the listener.\n */\nexport const listenMediaQuery = (\n  mediaQuery: string,\n  matchesChanged: (matches: boolean) => void\n) => {\n  const mql = matchMedia(mediaQuery);\n  const listener = (e) => matchesChanged(e.matches);\n  mql.addListener(listener);\n  matchesChanged(mql.matches);\n  return () => mql.removeListener(listener);\n};\n","import { HomeAssistant } from \"../types\";\nimport { EntityFilter } from \"../common/entity/entity_filter\";\n\ninterface CloudStatusBase {\n  logged_in: boolean;\n  cloud: \"disconnected\" | \"connecting\" | \"connected\";\n}\n\nexport interface GoogleEntityConfig {\n  should_expose?: boolean;\n  override_name?: string;\n  aliases?: string[];\n  disable_2fa?: boolean;\n}\n\nexport interface CertificateInformation {\n  common_name: string;\n  expire_date: string;\n  fingerprint: string;\n}\n\nexport interface CloudPreferences {\n  google_enabled: boolean;\n  alexa_enabled: boolean;\n  remote_enabled: boolean;\n  google_secure_devices_pin: string | undefined;\n  cloudhooks: { [webhookId: string]: CloudWebhook };\n  google_entity_configs: {\n    [entityId: string]: GoogleEntityConfig;\n  };\n}\n\nexport type CloudStatusLoggedIn = CloudStatusBase & {\n  email: string;\n  google_entities: EntityFilter;\n  google_domains: string[];\n  alexa_entities: EntityFilter;\n  alexa_domains: string[];\n  prefs: CloudPreferences;\n  remote_domain: string | undefined;\n  remote_connected: boolean;\n  remote_certificate: undefined | CertificateInformation;\n};\n\nexport type CloudStatus = CloudStatusBase | CloudStatusLoggedIn;\n\nexport interface SubscriptionInfo {\n  human_description: string;\n}\n\nexport interface CloudWebhook {\n  webhook_id: string;\n  cloudhook_id: string;\n  cloudhook_url: string;\n  managed?: boolean;\n}\n\nexport interface GoogleEntity {\n  entity_id: string;\n  traits: string[];\n  might_2fa: boolean;\n}\n\nexport const fetchCloudStatus = (hass: HomeAssistant) =>\n  hass.callWS<CloudStatus>({ type: \"cloud/status\" });\n\nexport const createCloudhook = (hass: HomeAssistant, webhookId: string) =>\n  hass.callWS<CloudWebhook>({\n    type: \"cloud/cloudhook/create\",\n    webhook_id: webhookId,\n  });\n\nexport const deleteCloudhook = (hass: HomeAssistant, webhookId: string) =>\n  hass.callWS({\n    type: \"cloud/cloudhook/delete\",\n    webhook_id: webhookId,\n  });\n\nexport const connectCloudRemote = (hass: HomeAssistant) =>\n  hass.callWS({\n    type: \"cloud/remote/connect\",\n  });\n\nexport const disconnectCloudRemote = (hass: HomeAssistant) =>\n  hass.callWS({\n    type: \"cloud/remote/disconnect\",\n  });\n\nexport const fetchCloudSubscriptionInfo = (hass: HomeAssistant) =>\n  hass.callWS<SubscriptionInfo>({ type: \"cloud/subscription\" });\n\nexport const updateCloudPref = (\n  hass: HomeAssistant,\n  prefs: {\n    google_enabled?: CloudPreferences[\"google_enabled\"];\n    alexa_enabled?: CloudPreferences[\"alexa_enabled\"];\n    google_secure_devices_pin?: CloudPreferences[\"google_secure_devices_pin\"];\n  }\n) =>\n  hass.callWS({\n    type: \"cloud/update_prefs\",\n    ...prefs,\n  });\n\nexport const fetchCloudGoogleEntities = (hass: HomeAssistant) =>\n  hass.callWS<GoogleEntity[]>({ type: \"cloud/google_assistant/entities\" });\n\nexport const updateCloudGoogleEntityConfig = (\n  hass: HomeAssistant,\n  entityId: string,\n  values: GoogleEntityConfig\n) =>\n  hass.callWS<GoogleEntityConfig>({\n    type: \"cloud/google_assistant/entities/update\",\n    entity_id: entityId,\n    ...values,\n  });\n\nexport const cloudSyncGoogleAssistant = (hass: HomeAssistant) =>\n  hass.callApi(\"POST\", \"cloud/google_actions/sync\");\n","import { property, PropertyValues, customElement } from \"lit-element\";\nimport \"../../layouts/hass-loading-screen\";\nimport isComponentLoaded from \"../../common/config/is_component_loaded\";\nimport { HomeAssistant } from \"../../types\";\nimport { CloudStatus, fetchCloudStatus } from \"../../data/cloud\";\nimport { listenMediaQuery } from \"../../common/dom/media_query\";\nimport { HassRouterPage, RouterOptions } from \"../../layouts/hass-router-page\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"ha-refresh-cloud-status\": undefined;\n  }\n}\n\n@customElement(\"ha-panel-config\")\nclass HaPanelConfig extends HassRouterPage {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n  @property() public _wideSidebar: boolean = false;\n  @property() public _wide: boolean = false;\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"dashboard\",\n    cacheAll: true,\n    preloadAll: true,\n    routes: {\n      area_registry: {\n        tag: \"ha-config-area-registry\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-area-registry\" */ \"./area_registry/ha-config-area-registry\"),\n      },\n      automation: {\n        tag: \"ha-config-automation\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-automation\" */ \"./automation/ha-config-automation\"),\n      },\n      cloud: {\n        tag: \"ha-config-cloud\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-cloud\" */ \"./cloud/ha-config-cloud\"),\n      },\n      core: {\n        tag: \"ha-config-core\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-core\" */ \"./core/ha-config-core\"),\n      },\n      customize: {\n        tag: \"ha-config-customize\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-customize\" */ \"./customize/ha-config-customize\"),\n      },\n      dashboard: {\n        tag: \"ha-config-dashboard\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-dashboard\" */ \"./dashboard/ha-config-dashboard\"),\n      },\n      entity_registry: {\n        tag: \"ha-config-entity-registry\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-entity-registry\" */ \"./entity_registry/ha-config-entity-registry\"),\n      },\n      integrations: {\n        tag: \"ha-config-integrations\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-integrations\" */ \"./integrations/ha-config-integrations\"),\n      },\n      person: {\n        tag: \"ha-config-person\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-person\" */ \"./person/ha-config-person\"),\n      },\n      script: {\n        tag: \"ha-config-script\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-script\" */ \"./script/ha-config-script\"),\n      },\n      users: {\n        tag: \"ha-config-users\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-users\" */ \"./users/ha-config-users\"),\n      },\n      zha: {\n        tag: \"zha-config-panel\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-zha\" */ \"./zha/zha-config-panel\"),\n      },\n      zwave: {\n        tag: \"ha-config-zwave\",\n        load: () =>\n          import(/* webpackChunkName: \"panel-config-zwave\" */ \"./zwave/ha-config-zwave\"),\n      },\n    },\n  };\n\n  @property() private _cloudStatus?: CloudStatus;\n\n  private _listeners: Array<() => void> = [];\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._listeners.push(\n      listenMediaQuery(\"(min-width: 1040px)\", (matches) => {\n        this._wide = matches;\n      })\n    );\n    this._listeners.push(\n      listenMediaQuery(\"(min-width: 1296px)\", (matches) => {\n        this._wideSidebar = matches;\n      })\n    );\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    while (this._listeners.length) {\n      this._listeners.pop()!();\n    }\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    if (isComponentLoaded(this.hass, \"cloud\")) {\n      this._updateCloudStatus();\n    }\n    this.addEventListener(\"ha-refresh-cloud-status\", () =>\n      this._updateCloudStatus()\n    );\n  }\n\n  protected updatePageEl(el) {\n    el.route = this.routeTail;\n    el.hass = this.hass;\n    el.isWide = this.hass.dockedSidebar ? this._wideSidebar : this._wide;\n    el.narrow = this.narrow;\n    el.cloudStatus = this._cloudStatus;\n  }\n\n  private async _updateCloudStatus() {\n    this._cloudStatus = await fetchCloudStatus(this.hass);\n\n    if (this._cloudStatus.cloud === \"connecting\") {\n      setTimeout(() => this._updateCloudStatus(), 5000);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-config\": HaPanelConfig;\n  }\n}\n"],"sourceRoot":""}