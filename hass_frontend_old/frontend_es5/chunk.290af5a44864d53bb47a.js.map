{"version":3,"sources":["webpack:///./src/panels/config/ha-config-section.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/components/ha-fab.ts","webpack:///./src/data/user.ts","webpack:///./src/data/person.ts","webpack:///./src/panels/config/person/show-dialog-person-detail.ts","webpack:///./src/panels/config/person/ha-config-person.ts"],"names":["_decorate","customElement","_initialize","_HTMLElement","F","_HTMLElement2","HaConfigSection","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_assertThisInitialized","attachShadow","mode","shadowRoot","innerHTML","_inherits","d","HTMLElement","__webpack_require__","__webpack_exports__","compare","caseInsensitiveCompare","a","b","toLowerCase","MwcFab","customElements","get","_MwcFab","_MwcFab2","HaFab","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","kind","key","value","classes","mdc-fab--mini","mini","mdc-fab--exited","exited","mdc-fab--extended","extended","showLabel","label","html","_templateObject","ripple","classMap","disabled","icon","showIconAtEnd","_templateObject2","SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","fetchUsers","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","hass","wrap","_context","prev","next","abrupt","callWS","type","stop","_x","updateUser","_ref3","_callee3","userId","params","_context3","Object","assign","user_id","_x4","_x5","_x6","deleteUser","_ref4","_callee4","_context4","_x7","_x8","createPerson","values","loadPersonDetailDialog","Promise","all","e","then","bind","HaConfigPerson","property","_this2","undefined","_storageItems","_configItems","localize","isWide","_templateObject3","map","entry","_templateObject4","_openEditEntry","name","_templateObject5","_createPerson","_templateObject6","_templateObject7","_templateObject8","changedProps","_get","prototype","_fetchData","personData","_usersLoad","sent","storage","sort","ent1","ent2","config","_openDialog","ev","currentTarget","users","currentPerson","used","Set","_i","_arr","coll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","pers","add","err","currentUserId","filter","user","id","has","_callee5","_this3","_context5","element","systemLogDetailParams","_allowedUsers","createEntry","_createEntry","_callee2","created","_context2","_x2","updateEntry","_updateEntry","updated","personId","updates","person_id","ent","_x3","removeEntry","_removeEntry","confirm","t0","fireEvent","dialogTag","dialogImport","dialogParams","css","_templateObject9","LitElement","define"],"mappings":"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","file":"chunk.290af5a44864d53bb47a.js","sourcesContent":["import { customElement } from \"lit-element\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = `\n    <style>\n      .content {\n        padding: 28px 20px 0;\n        max-width: 640px;\n        margin: 0 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 20px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        width: 100%;\n        max-width: 500px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n    </style>\n    <div class=\"content\">\n      <div class=\"header\"><slot name=\"header\"></slot></div>\n      <div class=\"together\">\n        <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n        <div class=\"panel\"><slot></slot></div>\n      </div>\n    </div>\n    `;\n  }\n}\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { classMap } from \"lit-html/directives/class-map\";\nimport { html, customElement } from \"lit-element\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive.js\";\n\nimport \"@material/mwc-fab\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nimport { Fab } from \"@material/mwc-fab\";\n// tslint:disable-next-line\nconst MwcFab = customElements.get(\"mwc-fab\") as Constructor<Fab>;\n\n@customElement(\"ha-fab\")\nexport class HaFab extends MwcFab {\n  // We override the render method because we don't have an icon font and mwc-fab doesn't support our svg-icon sets.\n  // Based on version mwc-fab 0.8\n  protected render() {\n    const classes = {\n      \"mdc-fab--mini\": this.mini,\n      \"mdc-fab--exited\": this.exited,\n      \"mdc-fab--extended\": this.extended,\n    };\n    const showLabel = this.label !== \"\" && this.extended;\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-fab ${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label || this.icon}\"\n      >\n        ${showLabel && this.showIconAtEnd ? this.label : \"\"}\n        ${this.icon\n          ? html`\n              <ha-icon .icon=${this.icon}></ha-icon>\n            `\n          : \"\"}\n        ${showLabel && !this.showIconAtEnd ? this.label : \"\"}\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { Credential } from \"./auth\";\n\nexport const SYSTEM_GROUP_ID_ADMIN = \"system-admin\";\nexport const SYSTEM_GROUP_ID_USER = \"system-users\";\nexport const SYSTEM_GROUP_ID_READ_ONLY = \"system-read-only\";\n\nexport interface User {\n  id: string;\n  name: string;\n  is_owner: boolean;\n  is_active: boolean;\n  system_generated: boolean;\n  group_ids: string[];\n  credentials: Credential[];\n}\n\ninterface UpdateUserParams {\n  name?: User[\"name\"];\n  group_ids?: User[\"group_ids\"];\n}\n\nexport const fetchUsers = async (hass: HomeAssistant) =>\n  hass.callWS<User[]>({\n    type: \"config/auth/list\",\n  });\n\nexport const createUser = async (hass: HomeAssistant, name: string) =>\n  hass.callWS<{ user: User }>({\n    type: \"config/auth/create\",\n    name,\n  });\n\nexport const updateUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  params: UpdateUserParams\n) =>\n  hass.callWS<{ user: User }>({\n    ...params,\n    type: \"config/auth/update\",\n    user_id: userId,\n  });\n\nexport const deleteUser = async (hass: HomeAssistant, userId: string) =>\n  hass.callWS<void>({\n    type: \"config/auth/delete\",\n    user_id: userId,\n  });\n","import { HomeAssistant } from \"../types\";\n\nexport interface Person {\n  id: string;\n  name: string;\n  user_id?: string;\n  device_trackers?: string[];\n}\n\nexport interface PersonMutableParams {\n  name: string;\n  user_id: string | null;\n  device_trackers: string[];\n}\n\nexport const fetchPersons = (hass: HomeAssistant) =>\n  hass.callWS<{\n    storage: Person[];\n    config: Person[];\n  }>({ type: \"person/list\" });\n\nexport const createPerson = (\n  hass: HomeAssistant,\n  values: PersonMutableParams\n) =>\n  hass.callWS<Person>({\n    type: \"person/create\",\n    ...values,\n  });\n\nexport const updatePerson = (\n  hass: HomeAssistant,\n  personId: string,\n  updates: Partial<PersonMutableParams>\n) =>\n  hass.callWS<Person>({\n    type: \"person/update\",\n    person_id: personId,\n    ...updates,\n  });\n\nexport const deletePerson = (hass: HomeAssistant, personId: string) =>\n  hass.callWS({\n    type: \"person/delete\",\n    person_id: personId,\n  });\n","import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { Person, PersonMutableParams } from \"../../../data/person\";\nimport { User } from \"../../../data/user\";\n\nexport interface PersonDetailDialogParams {\n  entry?: Person;\n  users: User[];\n  createEntry: (values: PersonMutableParams) => Promise<unknown>;\n  updateEntry: (updates: Partial<PersonMutableParams>) => Promise<unknown>;\n  removeEntry: () => Promise<boolean>;\n}\n\nexport const loadPersonDetailDialog = () =>\n  import(\n    /* webpackChunkName: \"person-detail-dialog\" */ \"./dialog-person-detail\"\n  );\n\nexport const showPersonDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: PersonDetailDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-person-detail\",\n    dialogImport: loadPersonDetailDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport {\n  Person,\n  fetchPersons,\n  updatePerson,\n  deletePerson,\n  createPerson,\n} from \"../../../data/person\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../layouts/hass-loading-screen\";\nimport { compare } from \"../../../common/string/compare\";\nimport \"../ha-config-section\";\nimport {\n  showPersonDetailDialog,\n  loadPersonDetailDialog,\n} from \"./show-dialog-person-detail\";\nimport { User, fetchUsers } from \"../../../data/user\";\n\nclass HaConfigPerson extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public isWide?: boolean;\n  @property() private _storageItems?: Person[];\n  @property() private _configItems?: Person[];\n  private _usersLoad?: Promise<User[]>;\n\n  protected render(): TemplateResult | void {\n    if (\n      !this.hass ||\n      this._storageItems === undefined ||\n      this._configItems === undefined\n    ) {\n      return html`\n        <hass-loading-screen></hass-loading-screen>\n      `;\n    }\n    const hass = this.hass;\n    return html`\n      <hass-subpage\n        .header=${hass.localize(\"ui.panel.config.person.caption\")}\n        .showBackButton=${!this.isWide}\n      >\n        <ha-config-section .isWide=${this.isWide}>\n          <span slot=\"header\"\n            >${hass.localize(\"ui.panel.config.person.caption\")}</span\n          >\n          <span slot=\"introduction\">\n            ${hass.localize(\"ui.panel.config.person.introduction\")}\n            ${this._configItems.length > 0\n              ? html`\n                  <p>\n                    ${hass.localize(\n                      \"ui.panel.config.person.note_about_persons_configured_in_yaml\"\n                    )}\n                  </p>\n                `\n              : \"\"}\n          </span>\n          <ha-card class=\"storage\">\n            ${this._storageItems.map((entry) => {\n              return html`\n                <paper-item @click=${this._openEditEntry} .entry=${entry}>\n                  <paper-item-body>\n                    ${entry.name}\n                  </paper-item-body>\n                </paper-item>\n              `;\n            })}\n            ${this._storageItems.length === 0\n              ? html`\n                  <div class=\"empty\">\n                    ${hass.localize(\n                      \"ui.panel.config.person.no_persons_created_yet\"\n                    )}\n                    <mwc-button @click=${this._createPerson}>\n                      ${hass.localize(\n                        \"ui.panel.config.person.create_person\"\n                      )}</mwc-button\n                    >\n                  </div>\n                `\n              : html``}\n          </ha-card>\n          ${this._configItems.length > 0\n            ? html`\n                <ha-card header=\"Configuration.yaml persons\">\n                  ${this._configItems.map((entry) => {\n                    return html`\n                      <paper-item>\n                        <paper-item-body>\n                          ${entry.name}\n                        </paper-item-body>\n                      </paper-item>\n                    `;\n                  })}\n                </ha-card>\n              `\n            : \"\"}\n        </ha-config-section>\n      </hass-subpage>\n\n      <ha-fab\n        ?is-wide=${this.isWide}\n        icon=\"hass:plus\"\n        title=\"${hass.localize(\"ui.panel.config.person.add_person\")}\"\n        @click=${this._createPerson}\n      ></ha-fab>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n    loadPersonDetailDialog();\n  }\n\n  private async _fetchData() {\n    this._usersLoad = fetchUsers(this.hass!);\n    const personData = await fetchPersons(this.hass!);\n\n    this._storageItems = personData.storage.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n    this._configItems = personData.config.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n  }\n\n  private _createPerson() {\n    this._openDialog();\n  }\n\n  private _openEditEntry(ev: MouseEvent) {\n    const entry: Person = (ev.currentTarget! as any).entry;\n    this._openDialog(entry);\n  }\n\n  private _allowedUsers(users: User[], currentPerson?: Person) {\n    const used = new Set();\n    for (const coll of [this._configItems, this._storageItems]) {\n      for (const pers of coll!) {\n        if (pers.user_id) {\n          used.add(pers.user_id);\n        }\n      }\n    }\n    const currentUserId = currentPerson ? currentPerson.user_id : undefined;\n    return users.filter(\n      (user) => user.id === currentUserId || !used.has(user.id)\n    );\n  }\n\n  private async _openDialog(entry?: Person) {\n    const users = await this._usersLoad!;\n\n    showPersonDetailDialog(this, {\n      entry,\n      users: this._allowedUsers(users, entry),\n      createEntry: async (values) => {\n        const created = await createPerson(this.hass!, values);\n        this._storageItems = this._storageItems!.concat(\n          created\n        ).sort((ent1, ent2) => compare(ent1.name, ent2.name));\n      },\n      updateEntry: async (values) => {\n        const updated = await updatePerson(this.hass!, entry!.id, values);\n        this._storageItems = this._storageItems!.map((ent) =>\n          ent === entry ? updated : ent\n        );\n      },\n      removeEntry: async () => {\n        if (\n          !confirm(`${this.hass!.localize(\n            \"ui.panel.config.person.confirm_delete\"\n          )}\n\n${this.hass!.localize(\"ui.panel.config.person.confirm_delete2\")}`)\n        ) {\n          return false;\n        }\n\n        try {\n          await deletePerson(this.hass!, entry!.id);\n          this._storageItems = this._storageItems!.filter(\n            (ent) => ent !== entry\n          );\n          return true;\n        } catch (err) {\n          return false;\n        }\n      },\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card {\n        max-width: 600px;\n        margin: 16px auto;\n        overflow: hidden;\n      }\n      .empty {\n        text-align: center;\n        padding: 8px;\n      }\n      paper-item {\n        padding-top: 4px;\n        padding-bottom: 4px;\n      }\n      ha-card.storage paper-item {\n        cursor: pointer;\n      }\n      ha-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n\n      ha-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-config-person\", HaConfigPerson);\n"],"sourceRoot":""}