{"version":3,"sources":["webpack:///../src/rpc-wrapper.js","webpack:///./src/common/entity/domain_icon.ts","webpack:///./node_modules/@polymer/paper-spinner/paper-spinner.js","webpack:///./src/common/util/debounce.ts","webpack:///./src/common/entity/sensor_icon.ts","webpack:///./src/common/entity/state_icon.ts","webpack:///./src/common/entity/binary_sensor_icon.ts","webpack:///./src/common/entity/cover_icon.ts","webpack:///./src/common/entity/input_dateteime_icon.ts","webpack:///./src/data/zha.ts","webpack:///./node_modules/deep-clone-simple/index.js","webpack:///./src/common/util/render-status.ts","webpack:///./src/panels/config/zha/functions.ts","webpack:///../src/directives/repeat.ts","webpack:///./src/components/entity/ha-state-icon.js","webpack:///./src/panels/config/zha/zha-groups-data-table.ts","webpack:///./src/panels/config/zha/zha-groups-dashboard.ts"],"names":["worker","methods","c","callbacks","e","d","data","id","f","error","Object","Error","evt","document","method","Promise","a","b","type","params","__webpack_require__","__webpack_exports__","domainIcon","_const__WEBPACK_IMPORTED_MODULE_0__","fixedIcons","alert","alexa","automation","calendar","camera","climate","configurator","conversation","counter","device_tracker","fan","google_assistant","group","history_graph","homeassistant","homekit","image_processing","input_boolean","input_datetime","input_number","input_select","input_text","light","mailbox","notify","persistent_notification","person","plant","proximity","remote","scene","script","sensor","simple_alarm","sun","switch","timer","updater","vacuum","water_heater","weather","weblink","zone","domain","state","console","warn","DEFAULT_DOMAIN_ICON","template","html","_templateObject","setAttribute","Polymer","_template","is","behaviors","PaperSpinnerBehavior","debounce","func","wait","timeout","immediate","arguments","length","undefined","_len","args","Array","_key","context","this","callNow","clearTimeout","setTimeout","apply","fixedDeviceClassIcons","humidity","illuminance","temperature","pressure","power","signal_strength","state_icon_stateIcon","domainIcons","binary_sensor","activated","attributes","device_class","cover","open","dclass","battery","Number","isNaN","batteryRound","Math","round","concat","unit","unit_of_measurement","UNIT_C","UNIT_F","has_date","has_time","stateIcon","icon","computeDomain","entity_id","reconfigureNode","fetchAttributesForCluster","fetchDevices","fetchZHADevice","fetchBindableDevices","bindDevices","unbindDevices","readAttributeValue","fetchCommandsForCluster","fetchClustersForZhaNode","fetchGroups","removeGroups","fetchGroup","fetchGroupableDevices","addMembersToGroup","removeMembersFromGroup","addGroup","hass","ieeeAddress","callWS","ieee","endpointId","clusterId","clusterType","endpoint_id","cluster_id","cluster_type","sourceIEEE","targetIEEE","source_ieee","target_ieee","assign","groupIdsToRemove","group_ids","groupId","group_id","membersToAdd","members","membersToRemove","groupName","group_name","deepcopy","value","_typeof","prototype","toString","call","Date","getTime","isArray","map","result","keys","forEach","key","afterNextRender","nextRender","cb","requestAnimationFrame","resolve","formatAsPaddedHex","sortZHADevices","sortZHAGroups","hex","parseInt","padStart","nameA","user_given_name","name","nameb","localeCompare","repeat","_lit_html_js__WEBPACK_IMPORTED_MODULE_0__","createAndInsertPart","containerPart","beforePart","container","startNode","parentNode","beforeNode","endNode","insertBefore","newPart","options","insertAfterNode","updatePart","part","setValue","commit","insertPartBefore","ref","nextSibling","removePart","generateMap","list","start","end","Map","i","set","partListCache","WeakMap","keyListCache","items","keyFnOrTemplate","keyFn","newKeyToIndexMap","oldKeyToIndexMap","oldParts","get","oldKeys","newParts","newValues","newKeys","index","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","item","err","oldHead","oldTail","newHead","newTail","has","oldIndex","oldPart","_newPart","_oldPart","HaStateIcon","PolymerElement","stateObj","customElements","define","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","ZHAGroupsDataTable","_getPrototypeOf2","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","kind","decorators","property","_this2","memoizeOne","narrow","title","sortable","filterable","direction","_handleRowClicked","localize","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_columns","groups","selectable","ev","target","closest","getAttribute","navigate","LitElement","ZHAGroupsDashboard","zha_groups_dashboard_decorate","zha_groups_dashboard_classCallCheck","zha_groups_dashboard_possibleConstructorReturn","zha_groups_dashboard_getPrototypeOf","zha_groups_dashboard_assertThisInitialized","zha_groups_dashboard_inherits","_get","_firstUpdatedCalled","_fetchGroups","changedProperties","zha_groups_dashboard_templateObject","_addGroup","_groups","zha_groups_dashboard_templateObject2","_handleRemoveSelectionChanged","zha_groups_dashboard_templateObject3","_selectedGroupsToRemove","_processingRemove","_removeGroup","_fetchGroups2","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","t0","sent","sort","stop","changedSelection","detail","selected","push","indexOf","splice","_toConsumableArray","_removeGroup2","_callee2","_context2","_addGroup2","_callee3","_context3","static","css","zha_groups_dashboard_templateObject4"],"mappings":"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","file":"chunk.8415fc00f0190ae827b0.js","sourcesContent":["export default function addMethods(worker, methods) {\n\tlet c = 0;\n\tlet callbacks = {};\n\tworker.addEventListener('message', (e) => {\n\t\tlet d = e.data;\n\t\tif (d.type!=='RPC') return;\n\t\tif (d.id) {\n\t\t\tlet f = callbacks[d.id];\n\t\t\tif (f) {\n\t\t\t\tdelete callbacks[d.id];\n\t\t\t\tif (d.error) {\n\t\t\t\t\tf[1](Object.assign(Error(d.error.message), d.error));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf[0](d.result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet evt = document.createEvent('Event');\n\t\t\tevt.initEvent(d.method, false, false);\n\t\t\tevt.data = d.params;\n\t\t\tworker.dispatchEvent(evt);\n\t\t}\n\t});\n\tmethods.forEach( method => {\n\t\tworker[method] = (...params) => new Promise( (a, b) => {\n\t\t\tlet id = ++c;\n\t\t\tcallbacks[id] = [a, b];\n\t\t\tworker.postMessage({ type: 'RPC', id, method, params });\n\t\t});\n\t});\n}\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nconst fixedIcons = {\n  alert: \"hass:alert\",\n  alexa: \"hass:amazon-alexa\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  counter: \"hass:counter\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  google_assistant: \"hass:google-assistant\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  persistent_notification: \"hass:bell\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weather: \"hass:weather-cloudy\",\n  weblink: \"hass:open-in-new\",\n  zone: \"hass:map-marker\",\n};\n\nexport const domainIcon = (domain: string, state?: string): string => {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n};\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/color.js';\nimport './paper-spinner-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperSpinnerBehavior} from './paper-spinner-behavior.js';\n\nconst template = html`\n  <style include=\"paper-spinner-styles\"></style>\n\n  <div id=\"spinnerContainer\" class-name=\"[[__computeContainerClasses(active, __coolingDown)]]\" on-animationend=\"__reset\" on-webkit-animation-end=\"__reset\">\n    <div class=\"spinner-layer layer-1\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-2\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-3\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-4\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design: [Progress &\nactivity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a multiple color material design circular spinner.\n\n    <paper-spinner active></paper-spinner>\n\nThe default spinner cycles between four layers of colors; by default they are\nblue, red, yellow and green. It can be customized to cycle between four\ndifferent colors. Use <paper-spinner-lite> for single color spinners.\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If\nnot provided, it defaults to 'loading'. Empty alt can be provided to mark the\nelement as decorative if alternative content is provided in another form (e.g. a\ntext block following the spinner).\n\n    <paper-spinner alt=\"Loading contacts list\" active></paper-spinner>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-layer-1-color` | Color of the first spinner rotation | `--google-blue-500`\n`--paper-spinner-layer-2-color` | Color of the second spinner rotation | `--google-red-500`\n`--paper-spinner-layer-3-color` | Color of the third spinner rotation | `--google-yellow-500`\n`--paper-spinner-layer-4-color` | Color of the fourth spinner rotation | `--google-green-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n@group Paper Elements\n@element paper-spinner\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-spinner',\n\n  behaviors: [PaperSpinnerBehavior]\n});\n","// From: https://davidwalsh.name/javascript-debounce-function\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// tslint:disable-next-line: ban-types\nexport const debounce = <T extends Function>(\n  func: T,\n  wait,\n  immediate = false\n): T => {\n  let timeout;\n  // @ts-ignore\n  return function(...args) {\n    // tslint:disable:no-this-assignment\n    // @ts-ignore\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"../const\";\nimport { domainIcon } from \"./domain_icon\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport const sensorIcon = (state: HassEntity) => {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n};\n","/** Return an icon representing a state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\nimport { binarySensorIcon } from \"./binary_sensor_icon\";\n\nimport { computeDomain } from \"./compute_domain\";\nimport { domainIcon } from \"./domain_icon\";\nimport { coverIcon } from \"./cover_icon\";\nimport { sensorIcon } from \"./sensor_icon\";\nimport { inputDateTimeIcon } from \"./input_dateteime_icon\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport const stateIcon = (state: HassEntity) => {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport const binarySensorIcon = (state: HassEntity) => {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n};\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { domainIcon } from \"./domain_icon\";\n\nexport const coverIcon = (state: HassEntity): string => {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    case \"door\":\n      return open ? \"hass:door-open\" : \"hass:door-closed\";\n    case \"shutter\":\n      return open ? \"hass:window-shutter-open\" : \"hass:window-shutter\";\n    case \"blind\":\n      return open ? \"hass:blinds-open\" : \"hass:blinds\";\n    case \"window\":\n      return open ? \"hass:window-open\" : \"hass:window-closed\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n};\n","/** Return an icon representing an input datetime state. */\nimport { domainIcon } from \"./domain_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const inputDateTimeIcon = (state: HassEntity): string => {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\n\nexport interface ZHAEntityReference extends HassEntity {\n  name: string;\n}\n\nexport interface ZHADevice {\n  name: string;\n  ieee: string;\n  nwk: string;\n  lqi: string;\n  rssi: string;\n  last_seen: string;\n  manufacturer: string;\n  model: string;\n  quirk_applied: boolean;\n  quirk_class: string;\n  entities: ZHAEntityReference[];\n  manufacturer_code: number;\n  device_reg_id: string;\n  user_given_name?: string;\n  power_source?: string;\n  area_id?: string;\n}\n\nexport interface Attribute {\n  name: string;\n  id: number;\n}\n\nexport interface Cluster {\n  name: string;\n  id: number;\n  endpoint_id: number;\n  type: string;\n}\n\nexport interface Command {\n  name: string;\n  id: number;\n  type: string;\n}\n\nexport interface ReadAttributeServiceData {\n  ieee: string;\n  endpoint_id: number;\n  cluster_id: number;\n  cluster_type: string;\n  attribute: number;\n  manufacturer?: number;\n}\n\nexport interface ZHAGroup {\n  name: string;\n  group_id: number;\n  members: ZHADevice[];\n}\n\nexport const reconfigureNode = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/devices/reconfigure\",\n    ieee: ieeeAddress,\n  });\n\nexport const fetchAttributesForCluster = (\n  hass: HomeAssistant,\n  ieeeAddress: string,\n  endpointId: number,\n  clusterId: number,\n  clusterType: string\n): Promise<Attribute[]> =>\n  hass.callWS({\n    type: \"zha/devices/clusters/attributes\",\n    ieee: ieeeAddress,\n    endpoint_id: endpointId,\n    cluster_id: clusterId,\n    cluster_type: clusterType,\n  });\n\nexport const fetchDevices = (hass: HomeAssistant): Promise<ZHADevice[]> =>\n  hass.callWS({\n    type: \"zha/devices\",\n  });\n\nexport const fetchZHADevice = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<ZHADevice> =>\n  hass.callWS({\n    type: \"zha/device\",\n    ieee: ieeeAddress,\n  });\n\nexport const fetchBindableDevices = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<ZHADevice[]> =>\n  hass.callWS({\n    type: \"zha/devices/bindable\",\n    ieee: ieeeAddress,\n  });\n\nexport const bindDevices = (\n  hass: HomeAssistant,\n  sourceIEEE: string,\n  targetIEEE: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/devices/bind\",\n    source_ieee: sourceIEEE,\n    target_ieee: targetIEEE,\n  });\n\nexport const unbindDevices = (\n  hass: HomeAssistant,\n  sourceIEEE: string,\n  targetIEEE: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/devices/unbind\",\n    source_ieee: sourceIEEE,\n    target_ieee: targetIEEE,\n  });\n\nexport const readAttributeValue = (\n  hass: HomeAssistant,\n  data: ReadAttributeServiceData\n): Promise<string> => {\n  return hass.callWS({\n    ...data,\n    type: \"zha/devices/clusters/attributes/value\",\n  });\n};\n\nexport const fetchCommandsForCluster = (\n  hass: HomeAssistant,\n  ieeeAddress: string,\n  endpointId: number,\n  clusterId: number,\n  clusterType: string\n): Promise<Command[]> =>\n  hass.callWS({\n    type: \"zha/devices/clusters/commands\",\n    ieee: ieeeAddress,\n    endpoint_id: endpointId,\n    cluster_id: clusterId,\n    cluster_type: clusterType,\n  });\n\nexport const fetchClustersForZhaNode = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<Cluster[]> =>\n  hass.callWS({\n    type: \"zha/devices/clusters\",\n    ieee: ieeeAddress,\n  });\n\nexport const fetchGroups = (hass: HomeAssistant): Promise<ZHAGroup[]> =>\n  hass.callWS({\n    type: \"zha/groups\",\n  });\n\nexport const removeGroups = (\n  hass: HomeAssistant,\n  groupIdsToRemove: number[]\n): Promise<ZHAGroup[]> =>\n  hass.callWS({\n    type: \"zha/group/remove\",\n    group_ids: groupIdsToRemove,\n  });\n\nexport const fetchGroup = (\n  hass: HomeAssistant,\n  groupId: number\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group\",\n    group_id: groupId,\n  });\n\nexport const fetchGroupableDevices = (\n  hass: HomeAssistant\n): Promise<ZHADevice[]> =>\n  hass.callWS({\n    type: \"zha/devices/groupable\",\n  });\n\nexport const addMembersToGroup = (\n  hass: HomeAssistant,\n  groupId: number,\n  membersToAdd: string[]\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group/members/add\",\n    group_id: groupId,\n    members: membersToAdd,\n  });\n\nexport const removeMembersFromGroup = (\n  hass: HomeAssistant,\n  groupId: number,\n  membersToRemove: string[]\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group/members/remove\",\n    group_id: groupId,\n    members: membersToRemove,\n  });\n\nexport const addGroup = (\n  hass: HomeAssistant,\n  groupName: string,\n  membersToAdd?: string[]\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group/add\",\n    group_name: groupName,\n    members: membersToAdd,\n  });\n","export default function deepcopy(value) {\n  if (!(!!value && typeof value == 'object')) {\n    return value;\n  }\n  if (Object.prototype.toString.call(value) == '[object Date]') {\n    return new Date(value.getTime());\n  }\n  if (Array.isArray(value)) {\n    return value.map(deepcopy);\n  }\n  var result = {};\n  Object.keys(value).forEach(\n    function(key) { result[key] = deepcopy(value[key]); });\n  return result;\n}\n","export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import { ZHADevice, ZHAGroup } from \"../../../data/zha\";\n\nexport const formatAsPaddedHex = (value: string | number): string => {\n  let hex = value;\n  if (typeof value === \"string\") {\n    hex = parseInt(value, 16);\n  }\n  return \"0x\" + hex.toString(16).padStart(4, \"0\");\n};\n\nexport const sortZHADevices = (a: ZHADevice, b: ZHADevice): number => {\n  const nameA = a.user_given_name ? a.user_given_name : a.name;\n  const nameb = b.user_given_name ? b.user_given_name : b.name;\n  return nameA.localeCompare(nameb);\n};\n\nexport const sortZHAGroups = (a: ZHAGroup, b: ZHAGroup): number => {\n  const nameA = a.name;\n  const nameb = b.name;\n  return nameA.localeCompare(nameb);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {DirectiveFn} from '../lib/directive.js';\nimport {createMarker, directive, NodePart, Part, removeNodes, reparentNodes} from '../lit-html.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart =\n    (containerPart: NodePart, beforePart?: NodePart): NodePart => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = beforePart === undefined ? containerPart.endNode :\n                                                    beforePart.startNode;\n      const startNode = container.insertBefore(createMarker(), beforeNode);\n      container.insertBefore(createMarker(), beforeNode);\n      const newPart = new NodePart(containerPart.options);\n      newPart.insertAfterNode(startNode);\n      return newPart;\n    };\n\nconst updatePart = (part: NodePart, value: unknown) => {\n  part.setValue(value);\n  part.commit();\n  return part;\n};\n\nconst insertPartBefore =\n    (containerPart: NodePart, part: NodePart, ref?: NodePart) => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = ref ? ref.startNode : containerPart.endNode;\n      const endNode = part.endNode.nextSibling;\n      if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n      }\n    };\n\nconst removePart = (part: NodePart) => {\n  removeNodes(\n      part.startNode.parentNode!, part.startNode, part.endNode.nextSibling);\n};\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap<NodePart, (NodePart | null)[]>();\nconst keyListCache = new WeakMap<NodePart, unknown[]>();\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat =\n    directive(\n        <T>(items: Iterable<T>,\n            keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n            template?: ItemTemplate<T>):\n            DirectiveFn => {\n              let keyFn: KeyFn<T>;\n              if (template === undefined) {\n                template = keyFnOrTemplate;\n              } else if (keyFnOrTemplate !== undefined) {\n                keyFn = keyFnOrTemplate as KeyFn<T>;\n              }\n\n              return (containerPart: Part): void => {\n                if (!(containerPart instanceof NodePart)) {\n                  throw new Error('repeat can only be used in text bindings');\n                }\n                // Old part & key lists are retrieved from the last update\n                // (associated with the part for this instance of the directive)\n                const oldParts = partListCache.get(containerPart) || [];\n                const oldKeys = keyListCache.get(containerPart) || [];\n\n                // New part list will be built up as we go (either reused from\n                // old parts or created for new keys in this update). This is\n                // saved in the above cache at the end of the update.\n                const newParts: NodePart[] = [];\n\n                // New value list is eagerly generated from items along with a\n                // parallel array indicating its key.\n                const newValues: unknown[] = [];\n                const newKeys: unknown[] = [];\n                let index = 0;\n                for (const item of items) {\n                  newKeys[index] = keyFn ? keyFn(item, index) : index;\n                  newValues[index] = template !(item, index);\n                  index++;\n                }\n\n                // Maps from key to index for current and previous update; these\n                // are generated lazily only when needed as a performance\n                // optimization, since they are only required for multiple\n                // non-contiguous changes in the list, which are less common.\n                let newKeyToIndexMap!: Map<unknown, number>;\n                let oldKeyToIndexMap!: Map<unknown, number>;\n\n                // Head and tail pointers to old parts and new values\n                let oldHead = 0;\n                let oldTail = oldParts.length - 1;\n                let newHead = 0;\n                let newTail = newValues.length - 1;\n\n                // Overview of O(n) reconciliation algorithm (general approach\n                // based on ideas found in ivi, vue, snabbdom, etc.):\n                //\n                // * We start with the list of old parts and new values (and\n                //   arrays of their respective keys), head/tail pointers into\n                //   each, and we build up the new list of parts by updating\n                //   (and when needed, moving) old parts or creating new ones.\n                //   The initial scenario might look like this (for brevity of\n                //   the diagrams, the numbers in the array reflect keys\n                //   associated with the old parts or new values, although keys\n                //   and parts/values are actually stored in parallel arrays\n                //   indexed using the same head/tail pointers):\n                //\n                //      oldHead v                 v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n                //                                      item order\n                //      newHead ^                 ^ newTail\n                //\n                // * Iterate old & new lists from both sides, updating,\n                //   swapping, or removing parts at the head/tail locations\n                //   until neither head nor tail can move.\n                //\n                // * Example below: keys at head pointers match, so update old\n                //   part 0 in-place (no need to move it) and record part 0 in\n                //   the `newParts` list. The last thing we do is advance the\n                //   `oldHead` and `newHead` pointers (will be reflected in the\n                //   next diagram).\n                //\n                //      oldHead v                 v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n                //                                      & newHead\n                //      newHead ^                 ^ newTail\n                //\n                // * Example below: head pointers don't match, but tail\n                //   pointers do, so update part 6 in place (no need to move\n                //   it), and record part 6 in the `newParts` list. Last,\n                //   advance the `oldTail` and `oldHead` pointers.\n                //\n                //         oldHead v              v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n                //                                      & newTail\n                //         newHead ^              ^ newTail\n                //\n                // * If neither head nor tail match; next check if one of the\n                //   old head/tail items was removed. We first need to generate\n                //   the reverse map of new keys to index (`newKeyToIndexMap`),\n                //   which is done once lazily as a performance optimization,\n                //   since we only hit this case if multiple non-contiguous\n                //   changes were made. Note that for contiguous removal\n                //   anywhere in the list, the head and tails would advance\n                //   from either end and pass each other before we get to this\n                //   case and removals would be handled in the final while loop\n                //   without needing to generate the map.\n                //\n                // * Example below: The key at `oldTail` was removed (no longer\n                //   in the `newKeyToIndexMap`), so remove that part from the\n                //   DOM and advance just the `oldTail` pointer.\n                //\n                //         oldHead v           v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n                //         newHead ^           ^ newTail\n                //\n                // * Once head and tail cannot move, any mismatches are due to\n                //   either new or moved items; if a new key is in the previous\n                //   \"old key to old index\" map, move the old part to the new\n                //   location, otherwise create and insert a new part. Note\n                //   that when moving an old part we null its position in the\n                //   oldParts array if it lies between the head and tail so we\n                //   know to skip it when the pointers get there.\n                //\n                // * Example below: neither head nor tail match, and neither\n                //   were removed; so find the `newHead` key in the\n                //   `oldKeyToIndexMap`, and move that old part's DOM into the\n                //   next head position (before `oldParts[oldHead]`). Last,\n                //   null the part in the `oldPart` array since it was\n                //   somewhere in the remaining oldParts still to be scanned\n                //   (between the head and tail pointers) so that we know to\n                //   skip that old part on future iterations.\n                //\n                //         oldHead v        v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n                //                                      newHead\n                //         newHead ^           ^ newTail\n                //\n                // * Note that for moves/insertions like the one above, a part\n                //   inserted at the head pointer is inserted before the\n                //   current `oldParts[oldHead]`, and a part inserted at the\n                //   tail pointer is inserted before `newParts[newTail+1]`. The\n                //   seeming asymmetry lies in the fact that new parts are\n                //   moved into place outside in, so to the right of the head\n                //   pointer are old parts, and to the right of the tail\n                //   pointer are new parts.\n                //\n                // * We always restart back from the top of the algorithm,\n                //   allowing matching and simple updates in place to\n                //   continue...\n                //\n                // * Example below: the head pointers once again match, so\n                //   simply update part 1 and record it in the `newParts`\n                //   array.  Last, advance both head pointers.\n                //\n                //         oldHead v        v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n                //                                      & newHead\n                //            newHead ^        ^ newTail\n                //\n                // * As mentioned above, items that were moved as a result of\n                //   being stuck (the final else clause in the code below) are\n                //   marked with null, so we always advance old pointers over\n                //   these so we're comparing the next actual old value on\n                //   either end.\n                //\n                // * Example below: `oldHead` is null (already placed in\n                //   newParts), so advance `oldHead`.\n                //\n                //            oldHead v     v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n                //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n                //               newHead ^     ^ newTail\n                //\n                // * Note it's not critical to mark old parts as null when they\n                //   are moved from head to tail or tail to head, since they\n                //   will be outside the pointer range and never visited again.\n                //\n                // * Example below: Here the old tail key matches the new head\n                //   key, so the part at the `oldTail` position and move its\n                //   DOM to the new head position (before `oldParts[oldHead]`).\n                //   Last, advance `oldTail` and `newHead` pointers.\n                //\n                //               oldHead v  v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n                //                                     advance oldTail & newHead\n                //               newHead ^     ^ newTail\n                //\n                // * Example below: Old and new head keys match, so update the\n                //   old head part in place, and advance the `oldHead` and\n                //   `newHead` pointers.\n                //\n                //               oldHead v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n                //                                      newHead\n                //                  newHead ^  ^ newTail\n                //\n                // * Once the new or old pointers move past each other then all\n                //   we have left is additions (if old list exhausted) or\n                //   removals (if new list exhausted). Those are handled in the\n                //   final while loops at the end.\n                //\n                // * Example below: `oldHead` exceeded `oldTail`, so we're done\n                //   with the main loop.  Create the remaining part and insert\n                //   it at the new head position, and the update is complete.\n                //\n                //                   (oldHead > oldTail)\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n                //                     newHead ^ newTail\n                //\n                // * Note that the order of the if/else clauses is not\n                //   important to the algorithm, as long as the null checks\n                //   come first (to ensure we're always working on valid old\n                //   parts) and that the final else clause comes last (since\n                //   that's where the expensive moves occur). The order of\n                //   remaining clauses is is just a simple guess at which cases\n                //   will be most common.\n                //\n                // * TODO(kschaaf) Note, we could calculate the longest\n                //   increasing subsequence (LIS) of old items in new position,\n                //   and only move those not in the LIS set. However that costs\n                //   O(nlogn) time and adds a bit more code, and only helps\n                //   make rare types of mutations require fewer moves. The\n                //   above handles removes, adds, reversal, swaps, and single\n                //   moves of contiguous items in linear time, in the minimum\n                //   number of moves. As the number of multiple moves where LIS\n                //   might help approaches a random shuffle, the LIS\n                //   optimization becomes less helpful, so it seems not worth\n                //   the code at this point. Could reconsider if a compelling\n                //   case arises.\n\n                while (oldHead <= oldTail && newHead <= newTail) {\n                  if (oldParts[oldHead] === null) {\n                    // `null` means old part at head has already been used\n                    // below; skip\n                    oldHead++;\n                  } else if (oldParts[oldTail] === null) {\n                    // `null` means old part at tail has already been used\n                    // below; skip\n                    oldTail--;\n                  } else if (oldKeys[oldHead] === newKeys[newHead]) {\n                    // Old head matches new head; update in place\n                    newParts[newHead] =\n                        updatePart(oldParts[oldHead]!, newValues[newHead]);\n                    oldHead++;\n                    newHead++;\n                  } else if (oldKeys[oldTail] === newKeys[newTail]) {\n                    // Old tail matches new tail; update in place\n                    newParts[newTail] =\n                        updatePart(oldParts[oldTail]!, newValues[newTail]);\n                    oldTail--;\n                    newTail--;\n                  } else if (oldKeys[oldHead] === newKeys[newTail]) {\n                    // Old head matches new tail; update and move to new tail\n                    newParts[newTail] =\n                        updatePart(oldParts[oldHead]!, newValues[newTail]);\n                    insertPartBefore(\n                        containerPart,\n                        oldParts[oldHead]!,\n                        newParts[newTail + 1]);\n                    oldHead++;\n                    newTail--;\n                  } else if (oldKeys[oldTail] === newKeys[newHead]) {\n                    // Old tail matches new head; update and move to new head\n                    newParts[newHead] =\n                        updatePart(oldParts[oldTail]!, newValues[newHead]);\n                    insertPartBefore(\n                        containerPart, oldParts[oldTail]!, oldParts[oldHead]!);\n                    oldTail--;\n                    newHead++;\n                  } else {\n                    if (newKeyToIndexMap === undefined) {\n                      // Lazily generate key-to-index maps, used for removals &\n                      // moves below\n                      newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                      oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                    }\n                    if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                      // Old head is no longer in new list; remove\n                      removePart(oldParts[oldHead]!);\n                      oldHead++;\n                    } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                      // Old tail is no longer in new list; remove\n                      removePart(oldParts[oldTail]!);\n                      oldTail--;\n                    } else {\n                      // Any mismatches at this point are due to additions or\n                      // moves; see if we have an old part we can reuse and move\n                      // into place\n                      const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                      const oldPart =\n                          oldIndex !== undefined ? oldParts[oldIndex] : null;\n                      if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(\n                            containerPart, oldParts[oldHead]!);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                      } else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(\n                            containerPart, oldPart, oldParts[oldHead]!);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex as number] = null;\n                      }\n                      newHead++;\n                    }\n                  }\n                }\n                // Add parts for any remaining new values\n                while (newHead <= newTail) {\n                  // For all remaining additions, we insert before last new\n                  // tail, since old pointers are no longer valid\n                  const newPart =\n                      createAndInsertPart(containerPart, newParts[newTail + 1]);\n                  updatePart(newPart, newValues[newHead]);\n                  newParts[newHead++] = newPart;\n                }\n                // Remove any remaining unused old parts\n                while (oldHead <= oldTail) {\n                  const oldPart = oldParts[oldHead++];\n                  if (oldPart !== null) {\n                    removePart(oldPart);\n                  }\n                }\n                // Save order of new parts for next round\n                partListCache.set(containerPart, newParts);\n                keyListCache.set(containerPart, newKeys);\n              };\n            }) as\n    <T>(items: Iterable<T>,\n        keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n        template?: ItemTemplate<T>) => DirectiveFn;\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../ha-icon\";\nimport { stateIcon } from \"../../common/entity/state_icon\";\n\nclass HaStateIcon extends PolymerElement {\n  static get template() {\n    return html`\n      <ha-icon icon=\"[[computeIcon(stateObj)]]\"></ha-icon>\n    `;\n  }\n\n  static get properties() {\n    return {\n      stateObj: {\n        type: Object,\n      },\n    };\n  }\n\n  computeIcon(stateObj) {\n    return stateIcon(stateObj);\n  }\n}\n\ncustomElements.define(\"ha-state-icon\", HaStateIcon);\n","import \"../../../components/data-table/ha-data-table\";\nimport \"../../../components/entity/ha-state-icon\";\n\nimport memoizeOne from \"memoize-one\";\n\nimport {\n  LitElement,\n  html,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\n// tslint:disable-next-line\nimport { DataTableColumnContainer } from \"../../../components/data-table/ha-data-table\";\n// tslint:disable-next-line\nimport { ZHAGroup, ZHADevice } from \"../../../data/zha\";\nimport { formatAsPaddedHex } from \"./functions\";\nimport { navigate } from \"../../../common/navigate\";\n\nexport interface GroupRowData extends ZHAGroup {\n  group?: GroupRowData;\n  id?: number;\n}\n\n@customElement(\"zha-groups-data-table\")\nexport class ZHAGroupsDataTable extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow = false;\n  @property() public groups: ZHAGroup[] = [];\n  @property() public selectable = false;\n\n  private _columns = memoizeOne(\n    (narrow: boolean): DataTableColumnContainer =>\n      narrow\n        ? {\n            name: {\n              title: \"Group\",\n              sortable: true,\n              filterable: true,\n              direction: \"asc\",\n              template: (name) => html`\n                <div @click=${this._handleRowClicked} style=\"cursor: pointer;\">\n                  ${name}\n                </div>\n              `,\n            },\n          }\n        : {\n            name: {\n              title: this.hass.localize(\"ui.panel.config.zha.groups.groups\"),\n              sortable: true,\n              filterable: true,\n              direction: \"asc\",\n              template: (name) => html`\n                <div @click=${this._handleRowClicked} style=\"cursor: pointer;\">\n                  ${name}\n                </div>\n              `,\n            },\n            group_id: {\n              title: this.hass.localize(\"ui.panel.config.zha.groups.group_id\"),\n              template: (groupId: number) => {\n                return html`\n                  ${formatAsPaddedHex(groupId)}\n                `;\n              },\n              sortable: true,\n            },\n            members: {\n              title: this.hass.localize(\"ui.panel.config.zha.groups.members\"),\n              template: (members: ZHADevice[]) => {\n                return html`\n                  ${members.length}\n                `;\n              },\n              sortable: true,\n            },\n          }\n  );\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-data-table\n        .columns=${this._columns(this.narrow)}\n        .data=${this.groups}\n        .id=${\"group_id\"}\n        .selectable=${this.selectable}\n      ></ha-data-table>\n    `;\n  }\n\n  private _handleRowClicked(ev: CustomEvent) {\n    const groupId = (ev.target as HTMLElement)\n      .closest(\"tr\")!\n      .getAttribute(\"data-row-id\")!;\n    navigate(this, `/config/zha/group/${groupId}`);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"zha-groups-data-table\": ZHAGroupsDataTable;\n  }\n}\n","import \"./zha-groups-data-table\";\n\nimport {\n  LitElement,\n  html,\n  TemplateResult,\n  property,\n  customElement,\n  CSSResult,\n  css,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\nimport { ZHAGroup, fetchGroups, removeGroups } from \"../../../data/zha\";\nimport { sortZHAGroups } from \"./functions\";\nimport { SelectionChangedEvent } from \"../../../components/data-table/ha-data-table\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { navigate } from \"../../../common/navigate\";\nimport \"../../../layouts/hass-subpage\";\n\n@customElement(\"zha-groups-dashboard\")\nexport class ZHAGroupsDashboard extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow = false;\n  @property() public _groups?: ZHAGroup[];\n  @property() private _processingRemove: boolean = false;\n  @property() private _selectedGroupsToRemove: number[] = [];\n  private _firstUpdatedCalled: boolean = false;\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this.hass && this._firstUpdatedCalled) {\n      this._fetchGroups();\n    }\n  }\n\n  protected firstUpdated(changedProperties: PropertyValues): void {\n    super.firstUpdated(changedProperties);\n    if (this.hass) {\n      this._fetchGroups();\n    }\n    this._firstUpdatedCalled = true;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-subpage\n        .header=\"${this.hass!.localize(\n          \"ui.panel.config.zha.groups.groups-header\"\n        )}\"\n      >\n        <paper-icon-button\n          slot=\"toolbar-icon\"\n          icon=\"hass:plus\"\n          @click=${this._addGroup}\n        ></paper-icon-button>\n\n        <div class=\"content\">\n          ${this._groups\n            ? html`\n                <zha-groups-data-table\n                  .hass=${this.hass}\n                  .narrow=${this.narrow}\n                  .groups=${this._groups}\n                  .selectable=${true}\n                  @selection-changed=${this._handleRemoveSelectionChanged}\n                  class=\"table\"\n                ></zha-groups-data-table>\n              `\n            : html`\n                <paper-spinner\n                  active\n                  alt=${this.hass!.localize(\"ui.common.loading\")}\n                ></paper-spinner>\n              `}\n        </div>\n        <div class=\"paper-dialog-buttons\">\n          <mwc-button\n            ?disabled=\"${!this._selectedGroupsToRemove.length ||\n              this._processingRemove}\"\n            @click=\"${this._removeGroup}\"\n            class=\"button\"\n          >\n            <paper-spinner\n              ?active=\"${this._processingRemove}\"\n              alt=${this.hass!.localize(\n                \"ui.panel.config.zha.groups.removing_groups\"\n              )}\n            ></paper-spinner>\n            ${this.hass!.localize(\n              \"ui.panel.config.zha.groups.remove_groups\"\n            )}</mwc-button\n          >\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  private async _fetchGroups() {\n    this._groups = (await fetchGroups(this.hass!)).sort(sortZHAGroups);\n  }\n\n  private _handleRemoveSelectionChanged(ev: CustomEvent): void {\n    const changedSelection = ev.detail as SelectionChangedEvent;\n    const groupId = Number(changedSelection.id);\n    if (changedSelection.selected) {\n      this._selectedGroupsToRemove.push(groupId);\n    } else {\n      const index = this._selectedGroupsToRemove.indexOf(groupId);\n      if (index !== -1) {\n        this._selectedGroupsToRemove.splice(index, 1);\n      }\n    }\n    this._selectedGroupsToRemove = [...this._selectedGroupsToRemove];\n  }\n\n  private async _removeGroup(): Promise<void> {\n    this._processingRemove = true;\n    this._groups = await removeGroups(this.hass, this._selectedGroupsToRemove);\n    this._selectedGroupsToRemove = [];\n    this._processingRemove = false;\n  }\n\n  private async _addGroup(): Promise<void> {\n    navigate(this, `/config/zha/group-add`);\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      css`\n        .content {\n          padding: 4px;\n        }\n        zha-groups-data-table {\n          width: 100%;\n        }\n        .button {\n          float: right;\n        }\n        .table {\n          height: 200px;\n          overflow: auto;\n        }\n        mwc-button paper-spinner {\n          width: 14px;\n          height: 14px;\n          margin-right: 20px;\n        }\n        paper-spinner {\n          display: none;\n        }\n        paper-spinner[active] {\n          display: block;\n        }\n        .paper-dialog-buttons {\n          align-items: flex-end;\n          padding: 8px;\n        }\n        .paper-dialog-buttons .warning {\n          --mdc-theme-primary: var(--google-red-500);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"zha-groups-dashboard\": ZHAGroupsDashboard;\n  }\n}\n"],"sourceRoot":""}