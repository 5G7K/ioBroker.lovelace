{"version":3,"sources":["webpack:///./src/panels/config/ha-config-section.ts","webpack:///./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js","webpack:///./src/panels/config/dashboard/ha-config-dashboard.ts"],"names":["_decorate","customElement","_initialize","_HTMLElement","F","_HTMLElement2","HaConfigSection","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_assertThisInitialized","attachShadow","mode","shadowRoot","innerHTML","_inherits","d","HTMLElement","Polymer","_template","html","_templateObject","is","behaviors","AppLayoutBehavior","properties","hasScrollingRegion","type","Boolean","value","reflectToAttribute","observers","header","dom","$","headerSlot","getDistributedNodes","_updateLayoutStates","isAttached","wrapper","classList","remove","scrollTarget","contentContainer","ownerDocument","documentElement","headerHeight","offsetHeight","style","left","right","requestAnimationFrame","rect","getBoundingClientRect","rightOffset","document","clientWidth","bind","containerStyle","fixed","condenses","marginTop","paddingTop","property","hass","narrow","localize","isWide","isComponentLoaded","_templateObject2","cloudStatus","logged_in","_templateObject3","email","_templateObject4","showAdvanced","page","core","advanced","_templateObject5","haStyle","css","_templateObject6","LitElement"],"mappings":"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","file":"chunk.63699396ec89f8af8328.js","sourcesContent":["import { customElement } from \"lit-element\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = `\n    <style>\n      .content {\n        padding: 28px 20px 0;\n        max-width: 640px;\n        margin: 0 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 20px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        width: 100%;\n        max-width: 500px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n    </style>\n    <div class=\"content\">\n      <div class=\"header\"><slot name=\"header\"></slot></div>\n      <div class=\"together\">\n        <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n        <div class=\"panel\"><slot></slot></div>\n      </div>\n    </div>\n    `;\n  }\n}\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {AppLayoutBehavior} from '../app-layout-behavior/app-layout-behavior.js';\n\n/**\napp-header-layout is a wrapper element that positions an app-header and other\ncontent. This element uses the document scroll by default, but it can also\ndefine its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of\nits container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n@group App Elements\n@element app-header-layout\n@demo app-header-layout/demo/simple.html Simple Demo\n@demo app-header-layout/demo/scrolling-region.html Scrolling Region\n@demo app-header-layout/demo/music.html Music Demo\n@demo app-header-layout/demo/footer.html Footer Demo\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n        position: relative;\n        z-index: 0;\n      }\n\n      #wrapper ::slotted([slot=header]) {\n        @apply --layout-fixed-top;\n        z-index: 1;\n      }\n\n      #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) {\n        height: 100%;\n      }\n\n      :host([has-scrolling-region]) #wrapper ::slotted([slot=header]) {\n        position: absolute;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) #wrapper #contentContainer {\n        @apply --layout-fit;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n        position: relative;\n      }\n\n      :host([fullbleed]) {\n        @apply --layout-vertical;\n        @apply --layout-fit;\n      }\n\n      :host([fullbleed]) #wrapper,\n      :host([fullbleed]) #wrapper #contentContainer {\n        @apply --layout-vertical;\n        @apply --layout-flex;\n      }\n\n      #contentContainer {\n        /* Create a stacking context here so that all children appear below the header. */\n        position: relative;\n        z-index: 0;\n      }\n\n      @media print {\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          overflow-y: visible;\n        }\n      }\n\n    </style>\n\n    <div id=\"wrapper\" class=\"initializing\">\n      <slot id=\"headerSlot\" name=\"header\"></slot>\n\n      <div id=\"contentContainer\">\n        <slot></slot>\n      </div>\n    </div>\n`,\n\n  is: 'app-header-layout',\n  behaviors: [AppLayoutBehavior],\n\n  properties: {\n    /**\n     * If true, the current element will have its own scrolling region.\n     * Otherwise, it will use the document scroll to control the header.\n     */\n    hasScrollingRegion: {type: Boolean, value: false, reflectToAttribute: true}\n  },\n\n  observers: ['resetLayout(isAttached, hasScrollingRegion)'],\n\n  /**\n   * A reference to the app-header element.\n   *\n   * @property header\n   */\n  get header() {\n    return dom(this.$.headerSlot).getDistributedNodes()[0];\n  },\n\n  _updateLayoutStates: function() {\n    var header = this.header;\n    if (!this.isAttached || !header) {\n      return;\n    }\n    // Remove the initializing class, which staticly positions the header and\n    // the content until the height of the header can be read.\n    this.$.wrapper.classList.remove('initializing');\n    // Update scroll target.\n    header.scrollTarget = this.hasScrollingRegion ?\n        this.$.contentContainer :\n        this.ownerDocument.documentElement;\n    // Get header height here so that style reads are batched together before\n    // style writes (i.e. getBoundingClientRect() below).\n    var headerHeight = header.offsetHeight;\n    // Update the header position.\n    if (!this.hasScrollingRegion) {\n      requestAnimationFrame(function() {\n        var rect = this.getBoundingClientRect();\n        var rightOffset = document.documentElement.clientWidth - rect.right;\n        header.style.left = rect.left + 'px';\n        header.style.right = rightOffset + 'px';\n      }.bind(this));\n    } else {\n      header.style.left = '';\n      header.style.right = '';\n    }\n    // Update the content container position.\n    var containerStyle = this.$.contentContainer.style;\n    if (header.fixed && !header.condenses && this.hasScrollingRegion) {\n      // If the header size does not change and we're using a scrolling region,\n      // exclude the header area from the scrolling region so that the header\n      // doesn't overlap the scrollbar.\n      containerStyle.marginTop = headerHeight + 'px';\n      containerStyle.paddingTop = '';\n    } else {\n      containerStyle.paddingTop = headerHeight + 'px';\n      containerStyle.marginTop = '';\n    }\n  }\n});\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  CSSResultArray,\n  css,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\n\nimport \"../../../components/ha-menu-button\";\n\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { CloudStatus, CloudStatusLoggedIn } from \"../../../data/cloud\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\n\nimport \"../../../components/ha-card\";\n\nimport \"../ha-config-section\";\nimport \"./ha-config-navigation\";\n\n@customElement(\"ha-config-dashboard\")\nclass HaConfigDashboard extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n  @property() public isWide!: boolean;\n  @property() public cloudStatus!: CloudStatus;\n  @property() public showAdvanced!: boolean;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <app-header-layout has-scrolling-region>\n        <app-header fixed slot=\"header\">\n          <app-toolbar>\n            <ha-menu-button\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n            ></ha-menu-button>\n            <div main-title>${this.hass.localize(\"panel.config\")}</div>\n          </app-toolbar>\n        </app-header>\n\n        <ha-config-section .narrow=${this.narrow} .isWide=${this.isWide}>\n          <div slot=\"header\">\n            ${this.hass.localize(\"ui.panel.config.header\")}\n          </div>\n\n          <div slot=\"introduction\">\n            ${this.hass.localize(\"ui.panel.config.introduction\")}\n          </div>\n\n          ${isComponentLoaded(this.hass, \"cloud\")\n            ? html`\n                <ha-card>\n                  <a href=\"/config/cloud\" tabindex=\"-1\">\n                    <paper-item>\n                      <paper-item-body two-line=\"\">\n                        ${this.hass.localize(\"ui.panel.config.cloud.caption\")}\n                        ${this.cloudStatus.logged_in\n                          ? html`\n                              <div secondary=\"\">\n                                ${this.hass.localize(\n                                  \"ui.panel.config.cloud.description_login\",\n                                  \"email\",\n                                  (this.cloudStatus as CloudStatusLoggedIn)\n                                    .email\n                                )}\n                              </div>\n                            `\n                          : html`\n                              <div secondary=\"\">\n                                ${this.hass.localize(\n                                  \"ui.panel.config.cloud.description_features\"\n                                )}\n                              </div>\n                            `}\n                      </paper-item-body>\n                      <ha-icon-next></ha-icon-next>\n                    </paper-item>\n                  </a>\n                </ha-card>\n              `\n            : \"\"}\n\n          <ha-card>\n            <ha-config-navigation\n              .hass=${this.hass}\n              .showAdvanced=${this.showAdvanced}\n              .pages=${[\n                { page: \"integrations\", core: true },\n                { page: \"devices\", core: true },\n                { page: \"automation\" },\n                { page: \"script\" },\n                { page: \"scene\" },\n              ]}\n            ></ha-config-navigation>\n          </ha-card>\n          <ha-card>\n            <ha-config-navigation\n              .hass=${this.hass}\n              .showAdvanced=${this.showAdvanced}\n              .pages=${[\n                { page: \"core\", core: true },\n                { page: \"server_control\", core: true },\n                { page: \"entities\", core: true },\n                { page: \"areas\", core: true },\n                { page: \"person\" },\n                { page: \"users\", core: true },\n                { page: \"zha\" },\n                { page: \"zwave\" },\n                { page: \"customize\", core: true, advanced: true },\n              ]}\n            ></ha-config-navigation>\n          </ha-card>\n\n          ${!this.showAdvanced\n            ? html`\n                <div class=\"promo-advanced\">\n                  ${this.hass.localize(\n                    \"ui.panel.profile.advanced_mode.hint_enable\"\n                  )}\n                  <a href=\"/profile\"\n                    >${this.hass.localize(\n                      \"ui.panel.profile.advanced_mode.link_profile_page\"\n                    )}</a\n                  >.\n                </div>\n              `\n            : \"\"}\n        </ha-config-section>\n      </app-header-layout>\n    `;\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        ha-config-navigation:last-child {\n          margin-bottom: 24px;\n        }\n        ha-card {\n          overflow: hidden;\n        }\n        ha-card a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n        .promo-advanced {\n          text-align: center;\n          color: var(--secondary-text-color);\n          margin-bottom: 24px;\n        }\n        .promo-advanced a {\n          color: var(--secondary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-dashboard\": HaConfigDashboard;\n  }\n}\n"],"sourceRoot":""}